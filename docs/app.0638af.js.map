{"version":3,"sources":["webpack:///./src/inputs/index.ts","webpack:///./src/renderer.ts","webpack:///./src/app.ts","webpack:///./src/attributes.ts","webpack:///./src/http.ts","webpack:///./src/inputs/shared/controller.ts","webpack:///./src/logger.ts","webpack:///./src/modal.ts","webpack:///./src/ng.ts","webpack:///./src/options.ts","webpack:///./src/router.ts","webpack:///./src/misc/index.ts","webpack:///./docs/src/app.ts","webpack:///./index.ts","webpack:///./src/inputs/check-box.ts","webpack:///./src/inputs/date-input.ts","webpack:///./src/inputs/shared/service.ts","webpack:///./src/inputs/radio-list.ts","webpack:///./src/inputs/select-list.ts","webpack:///./src/inputs/text-box.ts","webpack:///./src/inputs/text-input.ts","webpack:///./src/misc/app-spinner.ts","webpack:///./src/service.ts","webpack:///./src/inputs/shared/index.ts","webpack:///./src/controller.ts"],"names":["inputs","checkBox","dateInput","radioList","selectList","textBox","htmlInput","textInput","NgRenderer","baseInputAttrs","data","Object","create","tagName","classes","attrs","$el","document","createElement","length","classList","add","key","value","setAttribute","type","$isRange","$isRadio","$isCheckbox","$class","$inputAttrs","this","shift","push","createHtmlElement","icon","isFixedWidth","$iconClasses","replace","isRequired","isSrOnly","isRadio","$label","$span","textContent","appendChild","name","$input","inputGroupAttrs","$inputGroup","$inputGroupPrepend","$inputGroupText","$icon","createIcon","startsWith","createTextNode","createComment","parent","newChild","removeChild","refChild","insertBefore","el","remove","style","important","setProperty","removeProperty","removeAttribute","node","nodeValue","parentNode","nextSibling","selectorOrNode","preserveContent","querySelector","Error","target","eventName","callback","addEventListener","removeEventListener","NgApp","$id","$injector","injector","$dependencies","$module","module","$bootstrap","bootstrap","$components","Map","$httpInterceptors","configure","config","$compileProvider","$locationProvider","$qProvider","IS_DEV","IS_STAGING","$config","debugInfoEnabled","commentDirectivesEnabled","cssClassDirectivesEnabled","html5Mode","errorOnUnhandledRejections","$stateProvider","router","log","$warn","definition","getRoutes","state","run","$animate","enabled","$router","Set","keys","get","_http","$http","timeout","IS_PROD","DEFAULT_REQUEST_TIMEOUT","undefined","getConfig","_log","$logger","_modal","$modal","_renderer","$renderer","$applyAsync","strictDi","component","NgRouter","setTimeout","body","NgAppConfig","components","entries","isInputComponent","InputService","defineInputComponent","controller","makeComponentController","set","moduleName","moduleNames","forEach","addDependency","interceptor","ctrl","makeInjectableCtrl","http","renderer","NgModal","options","onFinally","forceUpdate","Array","isArray","interceptors","addHttpInterceptor","NgHttp","NgLogger","autobind","NgAttributes","$$element","$attr","PREFIX_REGEXP","SPECIAL_CHARS_REGEXP","from","attributes","$record","_","letter","offset","toUpperCase","className","contains","$hasClass","newClasses","oldClasses","nu","split","filter","x","old","o","includes","$removeClass","n","$addClass","__","console","warn","normalized","$normalize","NgService","super","request","map","response","responseError","url","fetch","uri","host","ssl","URL","toJSON","method","Response","API_HOST","location","protocol","cache","credentials","headers","integrity","keepalive","mode","redirect","referrerPolicy","window","getFullUrl","abortCtrl","AbortController","Request","signal","JSON","stringify","onRequest","abortTimer","abort","clearTimeout","ok","json","onResponse","err","onResponseError","clone","NgInputController","NgController","$contain","$element","children","isIE11","removeNode","$scope","$watchCollection","ngModel","curr","prev","ngModelCtrl","$setViewValue","$validators","every","$commitViewValue","LogTypeToastBackgrounds","NgToast","toast","toastBody","toastHeader","toastHeaderTimestamp","setBodyText","text","setType","container","innerHTML","targets","translateX","duration","easing","begin","innerText","Date","toLocaleTimeString","navigator","language","Promise","resolve","hideAnimation","autoplay","complete","play","resetAnimationOnMouseover","resumeAnimationOnMouseout","isAutoClose","Number","isInteger","makeTimeout","autoCloseId","wasClosing","progress","restart","pause","click","parentElement","NgConsole","items","debug","error","info","$log","isProd","toasts","hide","msg","okBtn","cancelBtn","footer","notify","reject","removeListeners","cancel","isTemporary","warning","show","then","index","findIndex","is","splice","$compile","$rootScope","backdrop","title","uniqueId","headerCloseButton","header","content","footerCancelButton","footerOkButton","dialog","template","onClose","defaultCancelBtnText","defaultOkBtnText","cancelBtnText","okBtnText","$new","$ctrl","escapeKeyListener","e","close","dismiss","removeEventListeners","hideModal","showModal","call","scope","$destroy","NAME","ENV","routes","partial","generateRouteMeta","isNgTransitionFn","onEnter","onExit","onRetain","param","ParamType","decode","parseInt","encode","toString","a","b","item","id","resolveFn","params","isBase","join","toLowerCase","misc","appSpinner","ModalController","AppController","app","modal","open","confirm","success","catch","addComponents","addDependencies","status","statusText","templateClass","labelClass","h","input","createInput","$attrs","hasOwnProperty","$template","bindings","ngChecked","isNumber","DateInputController","SUPPORTED_MODES","minDate","modelVal","valueOf","maxDate","inline","devWarning","flatpickr","dateFormat","defaultDate","nextArrow","prevArrow","allowInput","weekNumbers","wrap","enable","d","parse","isNaN","onChange","selected","destroy","toLocaleDateString","iconInput","createIconInput","inputGroupAppend","inputGroupText","clearIcon","validators","BaseComponent","seal","isRadioOrCheckbox","_h","$transclude","createSlot","getDefaultLabelText","ValidationExpressions","$Error","$Invalid","$Touched","$FormInvalid","pop","modelIdentifier","charAt","substring","$component","copy","$BaseComponent","$definition","$baseDefinition","assign","transclude","render","createLabel","canHaveIcon","closest","marginTop","requiredTag","firstElementChild","renderLabel","postRender","$inputInput","getInputInput","$validationAttrs","s","$ValidationExpressions","$IsInvalid","$validationBlock","$validationMessages","$html","concat","has","$message","$newTpl","outerHTML","prop","RegExp","contain","require","ngModelOptions","ngDisabled","ngReadonly","ngRequired","RadioListController","fieldset","legend","span","radio","labelText","list","SelectController","isListOpen","placeholder","IsMultiple","MultiplePlaceholder","SinglePlaceholder","_text","_value","isMobile","searchList","dropdown","dropdownlist","updateSearchList","getSearchList","fuzzer","search","oninput","onblur","relatedTarget","hidden","onclick","HTMLSelectElement","HTMLButtonElement","toggle","focus","nodeName","HTMLDivElement","select","dataset","shouldSort","threshold","distance","maxPatternLength","minMatchCharLength","destroyCurrentWatcher","GetPlaceholder","find","clear","isMultiple","y","IsMobile","inner","innerlist","btn","sbtn","cloneNode","TextBoxController","$mirror","element","computedStyle","getComputedStyle","boxOuter","getPropertyValue","minHeightValue","heightValue","minHeight","Math","max","maxHeight","mirror","adjust","requestAnimationFrame","width","scrollHeight","overflow","$on","styles","maxlength","textArea","createTextArea","TextInputController","minlength","minVal","val","min","maxVal","pattern","isRange","step","SpinnerController","colors","color","srDesc","spinner","UUIDv4","c","r","random","IsIE11","trim","first","second","rest","address","locals","InternalController","$state"],"mappings":"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","file":"app.0638af.js","sourcesContent":["import { checkBox } from './check-box';\nimport { dateInput } from './date-input';\nimport { radioList } from './radio-list';\nimport { selectList } from './select-list';\nimport { textBox } from './text-box';\nimport { htmlInput, textInput } from './text-input';\n\nexport const inputs = {\n\tcheckBox,\n\tdateInput,\n\tradioList,\n\tselectList,\n\ttextBox,\n\thtmlInput,\n\ttextInput,\n};\n\nexport * from './shared';\n","import { WritableKeysOf } from '@ledge/types';\n\nexport class NgRenderer {\n\tpublic baseInputAttrs: [string, string][] = [\n\t\t['ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t['ng-attr-name', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t['ng-model', '$ctrl.ngModel'],\n\t\t['ng-model-options', '$ctrl.ngModelOptions'],\n\t];\n\n\tpublic createHtmlElement<T extends keyof HTMLElementTagNameMap | 'ng-transclude'>(\n\t\ttagName: T,\n\t\tclasses: string[] = [],\n\t\tattrs: [string, string][] = [],\n\t) {\n\t\tconst $el = document.createElement(tagName);\n\n\t\tif (classes.length > 0) {\n\t\t\t$el.classList.add(...classes);\n\t\t}\n\n\t\tfor (const [key, value] of attrs) {\n\t\t\t$el.setAttribute(key, value);\n\t\t}\n\n\t\treturn $el as T extends keyof HTMLElementTagNameMap\n\t\t\t? HTMLElementTagNameMap[T]\n\t\t\t: HTMLUnknownElement;\n\t}\n\n\tpublic createInput(type = 'text', attrs: [string, string][] = []) {\n\t\tconst $isRange = type === 'range';\n\t\tconst $isRadio = type === 'radio';\n\t\tconst $isCheckbox = type === 'checkbox';\n\t\tconst $isFormCheck = $isRadio || $isCheckbox;\n\n\t\tconst $class =\n\t\t\t$isFormCheck\n\t\t\t\t? ['form-check-input']\n\t\t\t\t: $isRange\n\t\t\t\t\t? ['custom-range']\n\t\t\t\t\t: ['form-control'];\n\n\t\tconst $inputAttrs: [string, string][] = [\n\t\t\t...this.baseInputAttrs,\n\t\t\t...attrs,\n\t\t\t['type', type],\n\t\t];\n\n\t\tif ($isRadio) {\n\t\t\t$inputAttrs.shift(); // we'll set the id in render\n\t\t} else if ($isCheckbox === false && $isRange === false) {\n\t\t\t$inputAttrs.push(['maxlength', '{{maxlength}}'], ['placeholder', '{{placeholder}}']);\n\t\t}\n\n\t\treturn this.createHtmlElement('input', $class, $inputAttrs);\n\t}\n\n\tpublic createTextArea() {\n\t\treturn this.createHtmlElement('textarea', ['form-control'], [\n\t\t\t...this.baseInputAttrs,\n\t\t\t['maxlength', '{{maxlength}}'],\n\t\t\t['placeholder', '{{placeholder}}'],\n\t\t]);\n\t}\n\n\tpublic createIcon(icon: string, isFixedWidth = false) {\n\t\tconst $iconClasses = ['fa', `fa-${icon.replace(/^fw!/, '')}`];\n\t\tif (isFixedWidth) {\n\t\t\t$iconClasses.push('fa-fw');\n\t\t}\n\t\treturn this.createHtmlElement('span', $iconClasses, [['aria-hidden', 'true']]);\n\t}\n\n\tpublic createLabel(classList: string[], {\n\t\tisRequired = false,\n\t\tisSrOnly = false,\n\t\tisRadio = false,\n\t}: {\n\t\tisRequired?: boolean,\n\t\tisSrOnly?: boolean,\n\t\tisRadio?: boolean,\n\t} = {\n\t\t\tisRequired: false,\n\t\t\tisSrOnly: false,\n\t\t\tisRadio: false,\n\t\t},\n\t) {\n\t\tconst $label = this.createHtmlElement(\n\t\t\t'label',\n\t\t\tclassList,\n\t\t\t[['ng-attr-for', '{{id}}_{{$ctrl.uniqueId}}']],\n\t\t);\n\n\t\tif (isRequired === true && !isRadio) {\n\t\t\tconst $span = this.createHtmlElement('span', ['text-danger']);\n\t\t\t$span.textContent = ' *';\n\t\t\t$label.appendChild($span);\n\t\t}\n\n\t\tif (isSrOnly === true) {\n\t\t\t$label.classList.add('sr-only');\n\t\t}\n\n\t\treturn $label;\n\t}\n\n\tpublic createSlot(name?: string) {\n\t\treturn name != null\n\t\t\t? this.createHtmlElement('div', [], [['ng-transclude', name]])\n\t\t\t: this.createHtmlElement('ng-transclude') as HTMLDivElement;\n\t}\n\n\tpublic createIconInput($input: HTMLElement, icon?: string, inputGroupAttrs: [string, string][] = []) {\n\t\tif (icon == null) {\n\t\t\treturn $input;\n\t\t}\n\n\t\tconst $inputGroup = this.createHtmlElement('div', ['input-group']);\n\t\tconst $inputGroupPrepend = this.createHtmlElement('div', ['input-group-prepend'], inputGroupAttrs);\n\t\tconst $inputGroupText = this.createHtmlElement('span', ['input-group-text']);\n\t\tconst $icon = this.createIcon(icon, icon.startsWith('fw!'));\n\n\t\t$inputGroupText.appendChild($icon);\n\t\t$inputGroupPrepend.appendChild($inputGroupText);\n\n\t\t$inputGroup.appendChild($inputGroupPrepend);\n\t\t$inputGroup.appendChild($input);\n\n\t\treturn $inputGroup;\n\t}\n\n\t/**\n\t * Renderer2 implementations\n\t */\n\n\t// tslint:disable-next-line: member-ordering\n\tpublic data: { [key: string]: any } = Object.create(null);\n\n\t// tslint:disable-next-line: member-ordering\n\tpublic destroyNode: null;\n\n\tpublic destroy() {\n\t\treturn;\n\t}\n\n\tpublic createElement<T extends keyof HTMLElementTagNameMap>(tagName: T): HTMLElementTagNameMap[T];\n\tpublic createElement(tagName: string): HTMLUnknownElement;\n\tpublic createElement<T extends keyof HTMLElementTagNameMap>(tagName: T) {\n\t\treturn document.createElement(tagName);\n\t}\n\n\tpublic createText(value: string) {\n\t\treturn document.createTextNode(value);\n\t}\n\n\tpublic createComment(value: string) {\n\t\treturn document.createComment(value);\n\t}\n\n\tpublic appendChild(parent: HTMLElement, newChild: HTMLElement) {\n\t\tparent.appendChild(newChild);\n\t}\n\n\tpublic removeChild(parent: HTMLElement, newChild: HTMLElement) {\n\t\tparent.removeChild(newChild);\n\t}\n\n\tpublic insertBefore(parent: HTMLElement, newChild: HTMLElement, refChild: HTMLElement) {\n\t\tparent.insertBefore(newChild, refChild);\n\t}\n\n\tpublic addClass<T extends HTMLElement>(el: T, name: string) {\n\t\tel.classList.add(name);\n\t}\n\n\tpublic removeClass<T extends HTMLElement>(el: T, name: string) {\n\t\tel.classList.remove(name);\n\t}\n\n\tpublic setStyle<T extends HTMLElement>(el: T, style: string, value: any, important?: boolean) {\n\t\tel.style.setProperty(style, value, important ? 'important' : '');\n\t}\n\n\tpublic removeStyle<T extends HTMLElement>(el: T, style: string) {\n\t\tel.style.removeProperty(style);\n\t}\n\n\tpublic setAttribute<T extends HTMLElement>(el: T, name: string, value: string) {\n\t\tel.setAttribute(name, value);\n\t}\n\n\tpublic removeAttribute<T extends HTMLElement>(el: T, name: string) {\n\t\tel.removeAttribute(name);\n\t}\n\n\tpublic setProperty<T extends HTMLElement, U extends Exclude<WritableKeysOf<T>, number | symbol>>(el: T, name: U, value: any) {\n\t\tel[name] = value;\n\t}\n\n\tpublic setValue<T extends HTMLElement>(node: T, value: string) {\n\t\tnode.nodeValue = value;\n\t}\n\n\tpublic parentNode(node: HTMLElement) {\n\t\treturn node.parentNode;\n\t}\n\n\tpublic nextSibling(node: HTMLElement) {\n\t\treturn node.nextSibling;\n\t}\n\n\tpublic selectRootElement(selectorOrNode: string | HTMLElement, preserveContent = false): HTMLElement {\n\t\tconst el: HTMLElement | null = typeof selectorOrNode === 'string'\n\t\t\t? document.querySelector(selectorOrNode)\n\t\t\t: selectorOrNode;\n\n\t\tif (el == null) {\n\t\t\tthrow new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n\t\t}\n\n\t\tif (preserveContent === false) {\n\t\t\tel.textContent = '';\n\t\t}\n\n\t\treturn el;\n\t}\n\n\tpublic listen<T extends keyof GlobalEventHandlersEventMap>(\n\t\ttarget: HTMLElement,\n\t\teventName: T,\n\t\tcallback: (event: GlobalEventHandlersEventMap[T]) => boolean | undefined,\n\t) {\n\t\ttarget.addEventListener(eventName, callback);\n\t\treturn () => target.removeEventListener(eventName, callback);\n\t}\n}\n","import { Indexed } from '@ledge/types';\nimport { StateService } from '@uirouter/core';\nimport { StateProvider } from '@uirouter/angularjs';\nimport { autobind } from 'core-decorators';\n\nimport { NgController, makeInjectableCtrl } from './controller';\nimport { DEFAULT_REQUEST_TIMEOUT, NgHttp, NgHttpInterceptor, NgHttpOptions } from './http';\nimport { InputService, NgInputOptions } from './inputs';\nimport { NgLogger } from './logger';\nimport { NgModal } from './modal';\nimport { NgInjector, bootstrap, injector, module } from './ng';\nimport { NgAppConfig, NgComponentOptions } from './options';\nimport { NgRenderer } from './renderer';\nimport { NgRouter } from './router';\n\n@autobind\nexport class NgApp {\n\tpublic get module() {\n\t\treturn this.$module;\n\t}\n\n\tpublic get router() {\n\t\treturn this.$router;\n\t}\n\n\tpublic get config() {\n\t\treturn this.$config;\n\t}\n\n\tpublic get components() {\n\t\treturn new Set(this.$components.keys());\n\t}\n\n\tpublic get dependencies() {\n\t\treturn new Set(this.$dependencies);\n\t}\n\n\tpublic get state() {\n\t\treturn this.$injector.get<StateService>('$state');\n\t}\n\n\tpublic get http() {\n\t\tif (this._http == null) {\n\t\t\tthis._http = this.$http({\n\t\t\t\ttimeout: this.$config.IS_PROD ? DEFAULT_REQUEST_TIMEOUT : undefined,\n\t\t\t\tgetConfig: () => this.$config,\n\t\t\t});\n\t\t}\n\t\treturn this._http;\n\t}\n\n\tpublic get log() {\n\t\tif (this._log == null) {\n\t\t\tthis._log = this.$logger();\n\t\t}\n\t\treturn this._log;\n\t}\n\n\tpublic get modal() {\n\t\tif (this._modal == null) {\n\t\t\tthis._modal = this.$modal();\n\t\t}\n\t\treturn this._modal;\n\t}\n\n\tpublic get renderer() {\n\t\tif (this._renderer == null) {\n\t\t\tthis._renderer = this.$renderer();\n\t\t}\n\t\treturn this._renderer;\n\t}\n\n\tpublic readonly $id = '$core';\n\tpublic $injector = injector(['ng']);\n\n\tprotected $dependencies: string[] = [];\n\tprotected $router: NgRouter;\n\tprotected $config: NgAppConfig;\n\n\tprotected readonly $module = module(this.$id, this.$dependencies);\n\tprotected readonly $bootstrap = bootstrap;\n\tprotected readonly $components = new Map<string, NgComponentOptions>();\n\tprotected readonly $httpInterceptors: NgHttpInterceptor[] = [];\n\n\tprivate _http: NgHttp;\n\tprivate _log: NgLogger;\n\tprivate _modal: NgModal;\n\tprivate _renderer: NgRenderer;\n\n\tconstructor() {\n\t\tthis.configure({ })\n\t\t\t.$module\n\t\t\t.config([\n\t\t\t\t'$compileProvider', '$locationProvider', '$qProvider',\n\t\t\t\t(\n\t\t\t\t\t$compileProvider: {\n\t\t\t\t\t\tdebugInfoEnabled(active: boolean): any;\n\t\t\t\t\t\tcommentDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t\tcssClassDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$locationProvider: {\n\t\t\t\t\t\thtml5Mode(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$qProvider: {\n\t\t\t\t\t\terrorOnUnhandledRejections(active: boolean): any,\n\t\t\t\t\t},\n\t\t\t\t) => {\n\t\t\t\t\tconst { IS_DEV, IS_STAGING } = this.$config;\n\n\t\t\t\t\t$compileProvider.debugInfoEnabled(!!(IS_DEV || IS_STAGING));\n\t\t\t\t\t$compileProvider.commentDirectivesEnabled(false);\n\t\t\t\t\t$compileProvider.cssClassDirectivesEnabled(false);\n\n\t\t\t\t\t$locationProvider.html5Mode(true);\n\t\t\t\t\t$qProvider.errorOnUnhandledRejections(false);\n\t\t\t\t},\n\t\t\t])\n\t\t\t.config([\n\t\t\t\t'$stateProvider',\n\t\t\t\t($stateProvider: StateProvider) => {\n\t\t\t\t\tif (this.router == null) {\n\t\t\t\t\t\treturn this.log.$warn('No router. Use `app.setRouter(r)` to disable this warning.');\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const definition of this.router.getRoutes()) {\n\t\t\t\t\t\t$stateProvider.state(definition);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t])\n\t\t\t.run([\n\t\t\t\t'$injector', '$animate',\n\t\t\t\t($injector: NgInjector, $animate: { enabled(active: boolean): any }) => {\n\t\t\t\t\tthis.$injector = $injector;\n\t\t\t\t\t$animate.enabled(true);\n\t\t\t\t},\n\t\t\t]);\n\t}\n\n\t/**\n\t * Force the application to run an update cycle\n\t */\n\tpublic async forceUpdate() {\n\t\tawait this.$injector.get('$rootScope').$applyAsync();\n\t}\n\n\tpublic async bootstrap({ strictDi }: { strictDi?: boolean; } = { strictDi: true }) {\n\t\tfor (const [name, definition] of this.$components) {\n\t\t\tthis.$module.component(name, definition);\n\t\t}\n\t\tif (this.$router == null) {\n\t\t\tthis.$router = new (class extends NgRouter { })();\n\t\t}\n\n\t\tsetTimeout(() => document.body.classList.add('bootstrapped'));\n\t\treturn this.$bootstrap(document.body, [this.$id], { strictDi });\n\t}\n\n\tpublic configure(config: Partial<NgAppConfig>) {\n\t\tthis.$config = new NgAppConfig(config);\n\t\treturn this;\n\t}\n\n\tpublic setRouter(router: NgRouter) {\n\t\tthis.$router = router;\n\t\treturn this;\n\t}\n\n\tpublic addComponents(components: Map<string, NgComponentOptions> | Indexed<NgComponentOptions>) {\n\t\tconst entries = components instanceof Map\n\t\t\t? components.entries()\n\t\t\t: Object.entries(components);\n\n\t\tfor (let [name, component] of entries) {\n\t\t\tif (this.isInputComponent(component)) {\n\t\t\t\tcomponent = InputService.defineInputComponent(component);\n\t\t\t}\n\n\t\t\tif (typeof component.controller === 'function') {\n\t\t\t\tcomponent.controller = this.makeComponentController(component.controller);\n\t\t\t}\n\n\t\t\tthis.$components.set(name, component);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic isInputComponent(\n\t\tcomponent: NgComponentOptions & { type?: 'input' },\n\t): component is NgInputOptions {\n\t\treturn component.type === 'input';\n\t}\n\n\tpublic addDependency(moduleName: string) {\n\t\tthis.$dependencies.push(moduleName);\n\t\treturn this;\n\t}\n\n\tpublic addDependencies(moduleNames: string[]) {\n\t\tmoduleNames.forEach(moduleName => this.addDependency(moduleName));\n\t\treturn this;\n\t}\n\n\tpublic addHttpInterceptor(interceptor: NgHttpInterceptor) {\n\t\tthis.$httpInterceptors.push(interceptor);\n\t\treturn this;\n\t}\n\n\tpublic makeComponentController<T extends NgController>(ctrl: new () => T) {\n\t\tconst componentCtrl = makeInjectableCtrl<T>(ctrl, {\n\t\t\tlog: this.log,\n\t\t\thttp: this.http,\n\t\t\trenderer: this.renderer,\n\t\t\tconfig: () => this.config,\n\t\t});\n\n\t\ttype NonReadonly<R> = { -readonly [P in keyof R]: R[P] };\n\t\tconst injectable = ['$element', '$scope', '$injector', componentCtrl] as const;\n\t\treturn injectable as NonReadonly<typeof injectable>;\n\t}\n\n\tprotected $modal() {\n\t\treturn new NgModal(\n\t\t\tthis.renderer,\n\t\t\tthis.log,\n\t\t\tthis.http,\n\t\t\tthis.config,\n\t\t\tthis.$injector,\n\t\t);\n\t}\n\n\tprotected $http(options: NgHttpOptions) {\n\t\tif ((typeof options.onFinally === 'function') === false) {\n\t\t\toptions.onFinally = this.forceUpdate;\n\t\t}\n\t\tif (typeof options.getConfig !== 'function') {\n\t\t\toptions.getConfig = () => this.config;\n\t\t}\n\t\tif (Array.isArray(options.interceptors)) {\n\t\t\tfor (const interceptor of options.interceptors) {\n\t\t\t\tthis.addHttpInterceptor(interceptor);\n\t\t\t}\n\t\t}\n\t\t// allow all dataservice instances to share the same interceptor queue\n\t\toptions.interceptors = this.$httpInterceptors;\n\n\t\treturn new NgHttp(options);\n\t}\n\n\tprotected $logger() {\n\t\treturn new NgLogger(this.renderer, this.$config.IS_PROD);\n\t}\n\tprotected $renderer() {\n\t\treturn new NgRenderer();\n\t}\n}\n","import { Indexed } from '@ledge/types';\n\nexport class NgAttributes {\n\t[name: string]: any;\n\tpublic readonly $attr: Indexed<string> = { };\n\n\tpublic PREFIX_REGEXP = /^((?:x|data)[:\\-_])/i;\n\tpublic SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n\n\tconstructor(private readonly $$element: Element, attrs: Indexed = { }) {\n\t\tfor (const { name: key, value } of Array.from($$element.attributes)) {\n\t\t\tthis.$record(key, value);\n\t\t}\n\n\t\tfor (const [key, value] of Object.entries(attrs)) {\n\t\t\tthis.$record(key, value);\n\t\t}\n\t}\n\n\t/**\n\t * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with x- or data-) to its normalized, camelCase form.\n\t *\n\t * Also there is special case for Moz prefix starting with upper case letter.\n\t *\n\t * For further information check out the guide on @see https://docs.angularjs.org/guide/directive#matching-directives\n\t */\n\tpublic $normalize(name: string) {\n\t\treturn name\n\t\t\t.replace(this.PREFIX_REGEXP, '')\n\t\t\t.replace(this.SPECIAL_CHARS_REGEXP, (_, letter, offset) => offset ? letter.toUpperCase() : letter);\n\t}\n\n\t/**\n\t * Checks if the CSS class value is present on the element.\n\t */\n\tpublic $hasClass(className: string) {\n\t\treturn this.$$element.classList.contains(className);\n\t}\n\n\t/**\n\t * Adds the specified CSS class value to the element.\n\t * If animations are enabled then an animation will be triggered for the class addition.\n\t */\n\tpublic $addClass(className: string) {\n\t\tif (this.$hasClass(className)) {\n\t\t\tthis.$$element.classList.add(className);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the specified CSS class value from the element.\n\t * If animations are enabled then an animation will be triggered for the class removal.\n\t */\n\tpublic $removeClass(className: string) {\n\t\tif (this.$hasClass(className)) {\n\t\t\tthis.$$element.classList.remove(className);\n\t\t}\n\t}\n\n\t/**\n\t * Adds and removes CSS class values to the element based on the difference between\n\t * two space-delimited strings of CSS class values.\n\t *\n\t * @param newClasses: The space-delimited list of CSS classes to add or retain\n\t * @param oldClasses: The space-delimited list of CSS classes to remove if not contained within newClasses\n\t */\n\tpublic $updateClass(newClasses: string, oldClasses: string) {\n\t\tconst nu = newClasses.split(/\\s/g).filter(x => x.length > 0);\n\t\tconst old = oldClasses.split(/\\s/g).filter(x => x.length > 0);\n\n\t\tfor (const o of old) {\n\t\t\tif (nu.includes(o)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.$removeClass(o);\n\t\t}\n\n\t\tfor (const n of nu) {\n\t\t\tthis.$addClass(n);\n\t\t}\n\t}\n\n\t/**\n\t * Set DOM element attribute value.\n\t */\n\tpublic $set(key: string, value: any) {\n\t\tthis.$$element.setAttribute(key, value);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tpublic $observe<T>(_: string, __: (value?: T) => any) {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.warn('$observe is a noop');\n\t\treturn () => { return; };\n\t}\n\n\tprotected $record(key: string, value: string) {\n\t\tconst normalized = this.$normalize(key);\n\t\tthis[normalized] = value;\n\t\tthis.$attr[key] = normalized;\n\t}\n}\n","import { PatchPayload } from '@ledge/types/patch';\nimport { NgService } from './service';\nimport { NgAppConfig } from './options';\n\nexport const DEFAULT_REQUEST_TIMEOUT = 10000;\n\nexport interface NgHttpInterceptor {\n\trequest?(config: Request): Request | Promise<Request>;\n\tresponse?(response: any): any;\n\tresponseError?<T extends Error>(response: Response, err: T): void;\n}\n\n// tslint:disable:no-redundant-jsdoc\nexport interface NgHttpOptions extends RequestInit {\n\t/**\n\t *\n\t * @default `location.host`\n\t */\n\thost?: string;\n\n\t/**\n\t * If true, use `https://`. Otherwise, use `http://`\n\t * @default false\n\t */\n\tssl?: boolean;\n\n\t/**\n\t * How many milliseconds to wait before aborting the request\n\t * @default 10000\n\t */\n\ttimeout?: number;\n\n\tinterceptors?: NgHttpInterceptor[];\n\n\t/**\n\t * Unsupported\n\t */\n\treferrer?: never;\n\n\t/**\n\t * Unsupported\n\t */\n\tsignal?: never;\n\n\tonFinally?(): void;\n\tgetConfig(): NgAppConfig;\n}\n// tslint:enable:no-redundant-jsdoc\n\nexport class NgHttp extends NgService {\n\tprivate interceptors: {\n\t\trequest: ((config: Request) => Request | Promise<Request>)[];\n\t\tresponse: ((response: any) => any)[];\n\t\tresponseError: (<T extends Error>(\n\t\t\tresponse: Response,\n\t\t\terr: T,\n\t\t) => void)[];\n\t};\n\n\tconstructor(private options: NgHttpOptions) {\n\t\tsuper();\n\t\tconst { interceptors = [] } = options;\n\t\tthis.interceptors = {\n\t\t\trequest: interceptors\n\t\t\t\t.map(x => x.request)\n\t\t\t\t.filter(x => typeof x === 'function') as ((\n\t\t\t\tconfig: Request,\n\t\t\t) => Request | Promise<Request>)[],\n\t\t\tresponse: interceptors\n\t\t\t\t.map(x => x.response)\n\t\t\t\t.filter(x => typeof x === 'function') as ((response: any) => any)[],\n\t\t\tresponseError: interceptors\n\t\t\t\t.map(x => x.responseError)\n\t\t\t\t.filter(x => typeof x === 'function') as (<T extends Error>(\n\t\t\t\tresponse: Response,\n\t\t\t\terr: T,\n\t\t\t) => void)[],\n\t\t};\n\t}\n\n\tpublic async Get<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'GET');\n\t}\n\n\tpublic async Post<T = any>(url: string, data: any = null) {\n\t\treturn this.fetch<T>(url, 'POST', data);\n\t}\n\n\tpublic async Patch<T = any>(url: string, data: PatchPayload) {\n\t\treturn this.fetch<T>(url, 'PATCH', data);\n\t}\n\n\tpublic async Put<T = any>(url: string, data: T) {\n\t\treturn this.fetch(url, 'PUT', data);\n\t}\n\n\tpublic async Delete<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'DELETE');\n\t}\n\n\tpublic async Jsonp<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'JSONP');\n\t}\n\n\tpublic getFullUrl(uri: string, host: string, ssl: boolean) {\n\t\treturn new URL(uri, `http${ssl ? 's' : ''}://${host}/`).toJSON();\n\t}\n\n\tprivate async fetch<T>(\n\t\turi: string,\n\t\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE' | 'JSONP',\n\t\tdata?: any,\n\t) {\n\t\tlet response = new Response();\n\t\ttry {\n\t\t\tconst {\n\t\t\t\thost = this.options.getConfig().API_HOST,\n\t\t\t\tssl = location.protocol === 'https:',\n\t\t\t\tcache = 'no-store',\n\t\t\t\tcredentials = 'include',\n\t\t\t\theaders,\n\t\t\t\tintegrity,\n\t\t\t\tkeepalive = false,\n\t\t\t\tmode = 'cors',\n\t\t\t\tredirect = 'manual',\n\t\t\t\treferrerPolicy = 'origin-when-cross-origin',\n\t\t\t\ttimeout = DEFAULT_REQUEST_TIMEOUT,\n\t\t\t\twindow,\n\t\t\t} = this.options;\n\n\t\t\tconst url = this.getFullUrl(uri, host, ssl);\n\t\t\tconst abortCtrl = new AbortController();\n\n\t\t\tlet request = new Request(url, {\n\t\t\t\tmethod,\n\t\t\t\tcache,\n\t\t\t\tcredentials,\n\t\t\t\theaders,\n\t\t\t\tintegrity,\n\t\t\t\tkeepalive,\n\t\t\t\tmode,\n\t\t\t\tredirect,\n\t\t\t\treferrerPolicy,\n\t\t\t\tsignal: abortCtrl.signal,\n\t\t\t\twindow,\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t});\n\n\t\t\tfor (const onRequest of this.interceptors.request) {\n\t\t\t\trequest = await onRequest(request);\n\t\t\t}\n\n\t\t\tconst abortTimer = setTimeout(abortCtrl.abort, timeout);\n\t\t\tresponse = await fetch(request);\n\t\t\tclearTimeout(abortTimer);\n\n\t\t\tif (response.ok) {\n\t\t\t\tlet value: T = await response.json();\n\t\t\t\tfor (const onResponse of this.interceptors.response) {\n\t\t\t\t\tvalue = await onResponse(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tthrow new Error();\n\t\t} catch (err) {\n\t\t\tfor (const onResponseError of this.interceptors.responseError) {\n\t\t\t\tawait onResponseError(response.clone(), err);\n\t\t\t}\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tif (typeof this.options.onFinally === 'function') {\n\t\t\t\tthis.options.onFinally();\n\t\t\t}\n\t\t}\n\t}\n}\n","import isEqual from 'lodash/isEqual';\nimport { Indexed } from '@ledge/types';\nimport { NgController } from '../../controller';\n\nexport class NgInputController<T = any> extends NgController {\n\tpublic ngModel: any;\n\tpublic ngModelCtrl: NgModelController<T>;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tsetTimeout(() => {\n\t\t\tconst $contain = this.$element.querySelector('[ng-transclude=\"contain\"]');\n\t\t\tif ($contain != null && $contain.children.length === 0) {\n\t\t\t\tif (this.isIE11) {\n\t\t\t\t\t($contain as any).removeNode(true);\n\t\t\t\t} else {\n\t\t\t\t\t$contain.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.$scope.$watchCollection(\n\t\t\t\t() => this.ngModel,\n\t\t\t\t(curr: any, prev: any) => {\n\t\t\t\t\tif (isEqual(curr, prev)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.ngModelCtrl.$setViewValue(curr);\n\t\t\t\t\tconst isValid = Object\n\t\t\t\t\t\t.keys(this.ngModelCtrl.$validators)\n\t\t\t\t\t\t.every(x => {\n\t\t\t\t\t\t\treturn this.ngModelCtrl.$validators[x](curr, curr);\n\t\t\t\t\t\t});\n\t\t\t\t\tif (isValid) {\n\t\t\t\t\t\tthis.ngModelCtrl.$commitViewValue();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n}\n\nexport interface NgModelController<T = any> {\n\t$viewValue: T;\n\t$modelValue: T;\n\n\t$error: { [validationErrorKey: string]: boolean };\n\t$name?: string;\n\n\treadonly $touched: boolean;\n\treadonly $untouched: boolean;\n\n\t$validators: {\n\t\t/**\n\t\t * viewValue is any because it can be an object that is called in the view like $viewValue.name:$viewValue.subName\n\t\t */\n\t\t[index: string]: (modelValue: any, viewValue: any) => boolean;\n\t};\n\n\t$pending?: { [validationErrorKey: string]: boolean };\n\treadonly $pristine: boolean;\n\treadonly $dirty: boolean;\n\treadonly $valid: boolean;\n\treadonly $invalid: boolean;\n\n\t/**\n\t * Documentation states viewValue and modelValue to be a string but other types do work and it's common to use them.\n\t */\n\t$setViewValue(value: any, trigger?: string): void;\n\t$commitViewValue(): void;\n\t$rollbackViewValue(): void;\n\t$processModelValue(): void;\n\t$overrideModelOptions(options: NgModelOptions): void;\n\n\t$render(): void;\n\t$validate(): void;\n\t$setDirty(): void;\n\t$setPristine(): void;\n\t$setTouched(): void;\n\t$setUntouched(): void;\n\t$setValidity(validationErrorKey: string, isValid: boolean): void;\n\n\t$isEmpty(value: any): boolean;\n}\n\n/**\n * Allows tuning how model updates are done.\n * @see https://docs.angularjs.org/api/ng/directive/ngModelOptions\n */\nexport interface NgModelOptions {\n\tupdateOn?: string;\n\tdebounce?: number | Indexed<number>;\n\tallowInvalid?: boolean;\n\tgetterSetter?: boolean;\n\ttimezone?: string;\n}\n","// tslint:disable:no-magic-numbers\nimport anime from 'animejs';\nimport { NgService } from './service';\nimport { NgRenderer } from './renderer';\n\ntype LogType = '$log' | '$warn' | '$error' | '$info' | '$success';\nenum LogTypeToastBackgrounds {\n\t$log = 'white',\n\t$success = 'success',\n\t$info = 'info',\n\t$warn = 'warning',\n\t$error = 'danger',\n}\n\nexport class NgToast {\n\tprotected type: LogType;\n\tprotected readonly toast: HTMLDivElement;\n\tprotected readonly toastHeader: HTMLDivElement;\n\tprotected readonly toastBody: HTMLDivElement;\n\tprotected readonly toastHeaderTimestamp: HTMLElement;\n\n\tconstructor(protected readonly $renderer: NgRenderer, options: {\n\t\ttext: string,\n\t\ttype: LogType,\n\t\tcontainer: HTMLElement,\n\t}) {\n\t\tthis.toast = this.$renderer.createHtmlElement('div', ['toast', 'row', 'justify-content-between', 'w-100'], [['role', 'alert'], ['aria-live', 'assertive'], ['aria-atomic', 'true']]);\n\t\tthis.toast.style.setProperty('cursor', 'pointer');\n\n\t\tthis.toastBody = this.$renderer.createHtmlElement('div', ['toast-body', 'h5', 'col', 'mb-0', 'pb-3']);\n\t\tthis.toastHeader = this.$renderer.createHtmlElement('div', ['toast-header']);\n\t\tthis.toastHeader.style.setProperty('border-bottom', 'none');\n\n\t\tthis.toastHeaderTimestamp = this.$renderer.createHtmlElement('strong', ['text-dark']);\n\n\t\tthis.toastHeader.appendChild(this.toastHeaderTimestamp);\n\t\tthis.toast.appendChild(this.toastHeader);\n\t\tthis.toast.appendChild(this.toastBody);\n\n\t\tthis.setBodyText(options.text);\n\t\tthis.setType(options.type);\n\n\t\toptions.container.appendChild(this.toast);\n\t}\n\n\t/**\n\t * Append a child element to the toast element\n\t *\n\t * @param el The element to append\n\t */\n\tpublic appendChild(el: HTMLElement) {\n\t\tthis.toast.appendChild(el);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the inner HTML of the toast's body element\n\t *\n\t * @param text The HTML to set\n\t */\n\tpublic setBodyText(text: string) {\n\t\tthis.toastBody.innerHTML = text;\n\t}\n\n\t/**\n\t * Change the look & feel of the toast based on its associated log type\n\t *\n\t * @param type The log type of toast\n\t */\n\tpublic setType(type: LogType) {\n\t\tif (this.type != null) {\n\t\t\tthis.toast.classList.remove(`bg-${LogTypeToastBackgrounds[this.type]}`);\n\t\t}\n\n\t\tthis.type = type;\n\t\tthis.toast.classList.add(`bg-${LogTypeToastBackgrounds[this.type]}`);\n\n\t\tif (type === '$log') {\n\t\t\tthis.toastHeader.classList.add('bg-dark');\n\t\t\tthis.toastHeader.style.setProperty('opacity', '0.75');\n\t\t\tthis.toastHeaderTimestamp.classList.remove('text-dark');\n\t\t\tthis.toastHeaderTimestamp.classList.add('text-white');\n\t\t} else if (type !== '$warn') {\n\t\t\tthis.toast.classList.add('text-white');\n\t\t}\n\t}\n\n\t/**\n\t * Show the toast\n\t *\n\t * @param timeout Length in ms before toast disappears (`false` to set permanently)\n\t * @param container Optional container override\n\t */\n\tpublic show(timeout: false | number, container?: HTMLElement) {\n\t\tif (container != null) {\n\t\t\tthis.remove();\n\t\t\tcontainer.appendChild(this.toast);\n\t\t}\n\n\t\tanime({\n\t\t\ttargets: this.toast,\n\t\t\ttranslateX: [500, 0],\n\t\t\tduration: 1000,\n\t\t\teasing: 'easeOutQuint(0.5, 1)',\n\t\t\tbegin: () => {\n\t\t\t\tthis.toastHeaderTimestamp.innerText = new Date().toLocaleTimeString(navigator.language).replace(/(:\\d{2})(?=\\s[AP]M$)/, '');\n\t\t\t\tthis.toast.style.setProperty('opacity', '1');\n\t\t\t},\n\t\t});\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst hideAnimation = anime({\n\t\t\t\ttargets: this.toast,\n\t\t\t\ttranslateX: [0, 500],\n\t\t\t\tduration: 1000,\n\t\t\t\tautoplay: false,\n\t\t\t\teasing: 'easeInQuint(0.5, 1)',\n\t\t\t\tcomplete: () => {\n\t\t\t\t\tthis.toast.removeEventListener('click', hideAnimation.play);\n\t\t\t\t\tthis.toast.removeEventListener('mouseover', resetAnimationOnMouseover);\n\t\t\t\t\tthis.toast.removeEventListener('mouseout', resumeAnimationOnMouseout);\n\t\t\t\t\tthis.remove();\n\t\t\t\t\tresolve();\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst isAutoClose = typeof timeout === 'number' && Number.isInteger(timeout);\n\t\t\tconst makeTimeout = () => (setTimeout as typeof window['setTimeout'])(hideAnimation.play, timeout as number);\n\n\t\t\tlet autoCloseId = isAutoClose ? makeTimeout() : undefined;\n\t\t\tlet wasClosing = false;\n\n\t\t\tconst resetAnimationOnMouseover = () => {\n\t\t\t\twasClosing = hideAnimation.progress > 0;\n\n\t\t\t\tclearTimeout(autoCloseId);\n\t\t\t\tautoCloseId = undefined;\n\n\t\t\t\thideAnimation.restart();\n\t\t\t\thideAnimation.pause();\n\t\t\t};\n\n\t\t\tconst resumeAnimationOnMouseout = () => {\n\t\t\t\tif (wasClosing) {\n\t\t\t\t\thideAnimation.play();\n\t\t\t\t} else if (isAutoClose && autoCloseId === undefined) {\n\t\t\t\t\tautoCloseId = makeTimeout();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.toast.addEventListener('click', hideAnimation.play);\n\t\t\tthis.toast.addEventListener('mouseover', resetAnimationOnMouseover);\n\t\t\tthis.toast.addEventListener('mouseout', resumeAnimationOnMouseout);\n\t\t});\n\t}\n\n\t/**\n\t * Hide the toast\n\t */\n\tpublic hide() {\n\t\tthis.toast.click();\n\t}\n\n\t/**\n\t * Remove the toast from its container\n\t */\n\tpublic remove() {\n\t\tif (this.toast.parentElement != null) {\n\t\t\tthis.toast.parentElement.removeChild(this.toast);\n\t\t}\n\t}\n}\n\n// tslint:disable:no-console\nexport class NgConsole extends NgService {\n\t/**\n\t * Invokes `Console.prototype.debug`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $debug(...items: any[]) {\n\t\tconsole.debug(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.error`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $error(...items: any[]) {\n\t\tconsole.error(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.info`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $info(...items: any[]) {\n\t\tconsole.info(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.warn`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $warn(...items: any[]) {\n\t\tconsole.warn(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.log`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $log(...items: any[]) {\n\t\tconsole.log(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.log`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $success(...items: any[]) {\n\t\tthis.$log(...items);\n\t}\n}\n// tslint:enable:no-console\n\nexport class NgLogger extends NgConsole {\n\tprotected readonly container: HTMLDivElement;\n\tprotected readonly toasts: NgToast[] = [];\n\n\tconstructor(private $renderer: NgRenderer, private isProd = false) {\n\t\tsuper();\n\n\t\tthis.container = this.$renderer.createHtmlElement('div', ['position-fixed']);\n\t\tthis.container.style.setProperty('top', '0.5rem');\n\t\tthis.container.style.setProperty('right', '-1.5rem');\n\t\tthis.container.style.setProperty('width', '100%');\n\t\tthis.container.style.setProperty('max-width', '23rem');\n\n\t\tdocument.body.appendChild(this.container);\n\t}\n\n\t/**\n\t * Clear all active notifications\n\t */\n\tpublic clear() {\n\t\tthis.toasts.forEach(x => x.hide());\n\t}\n\n\t/**\n\t * Prompt the user to confirm intent for a previous action\n\t *\n\t * @param msg Confirmation message\n\t */\n\tpublic confirm(msg = 'Please confirm your action') {\n\t\tconst okBtn = this.$renderer.createHtmlElement('button', ['btn', 'w-50', 'btn-success', 'rounded-0']);\n\t\tokBtn.innerText = 'Yes';\n\t\tconst cancelBtn = this.$renderer.createHtmlElement('button', ['btn', 'w-50', 'btn-dark', 'rounded-0']);\n\t\tcancelBtn.innerText = 'No';\n\n\t\tconst footer = this.$renderer.createHtmlElement('div', ['w-100']);\n\t\tfooter.appendChild(cancelBtn);\n\t\tfooter.appendChild(okBtn);\n\n\t\tconst toast = this.notify(msg, '$log', false);\n\t\ttoast.appendChild(footer);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst removeListeners = () => {\n\t\t\t\tokBtn.removeEventListener('click', ok);\n\t\t\t\tcancelBtn.removeEventListener('click', cancel);\n\t\t\t};\n\n\t\t\tconst ok = () => {\n\t\t\t\ttoast.hide();\n\t\t\t\tremoveListeners();\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\tconst cancel = () => {\n\t\t\t\ttoast.hide();\n\t\t\t\tremoveListeners();\n\t\t\t\treject();\n\t\t\t};\n\n\t\t\tokBtn.addEventListener('click', ok);\n\t\t\tcancelBtn.addEventListener('click', cancel);\n\t\t});\n\t}\n\n\t/**\n\t * Display an error notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (false by default)\n\t */\n\tpublic error(text: string, isTemporary = false) {\n\t\tthis.notify(text, '$error', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display an informational notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic info(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$info', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a success notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic success(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$success', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a warning notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic warning(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$warn', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a warning notification (disabled when `process.env.NODE_ENV === 'production'`)\n\t *\n\t * @param text Display text\n\t */\n\tpublic devWarning(text: string) {\n\t\tif (this.isProd === false) {\n\t\t\tthis.warning(`[DEV] ${text}`, false);\n\t\t}\n\t}\n\n\t/**\n\t * Show a customizable notification to the user\n\t *\n\t * @param text Display text\n\t * @param type Display type\n\t * @param timeout Length in ms before notification disappears (`false` to set permanently)\n\t * @param buttons Interaction points for the user\n\t */\n\tpublic notify(text: string, type: LogType, timeout: false | number = 2323) {\n\t\tthis[type](`${type}: ${text}`);\n\n\t\tconst toast = new NgToast(this.$renderer, { text, type, container: this.container });\n\t\ttoast.show(timeout).then(() => {\n\t\t\tconst index = this.toasts.findIndex(x => Object.is(x, toast));\n\t\t\tthis.toasts.splice(index, 1);\n\t\t});\n\n\t\tthis.toasts.push(toast);\n\t\treturn toast;\n\t}\n}\n","import { NgController, makeInjectableCtrl } from './controller';\nimport { NgLogger } from './logger';\nimport { NgService } from './service';\nimport { NgHttp } from './http';\nimport { NgAppConfig } from './options';\nimport { NgRenderer } from './renderer';\nimport { NgInjector, NgScope } from './ng';\n\nconst MODAL_SHOW_DELAY = 23;\nconst MODAL_HIDE_DELAY = 150;\n\nexport class NgModal extends NgService {\n\tprotected readonly backdrop: HTMLDivElement;\n\tprotected readonly container: HTMLDivElement;\n\tprotected readonly content: HTMLDivElement;\n\tprotected readonly dialog: HTMLDivElement;\n\tprotected readonly header: HTMLDivElement;\n\tprotected readonly headerCloseButton: HTMLButtonElement;\n\tprotected readonly title: HTMLHeadingElement;\n\tprotected readonly body: HTMLDivElement;\n\tprotected readonly footer: HTMLDivElement;\n\tprotected readonly footerCancelButton: HTMLButtonElement;\n\tprotected readonly footerOkButton: HTMLButtonElement;\n\n\tprotected readonly $compile: (element: Element) => (scope: NgScope) => { [i: number]: HTMLElement };\n\tprotected readonly $rootScope: NgScope;\n\n\tconstructor(\n\t\tprotected readonly $renderer: NgRenderer,\n\t\tprotected readonly $log: NgLogger,\n\t\tprotected readonly $http: NgHttp,\n\t\tprotected readonly $config: NgAppConfig,\n\t\tprotected readonly $injector: NgInjector,\n\t) {\n\t\tsuper();\n\n\t\tthis.$compile = this.$injector.get('$compile');\n\t\tthis.$rootScope = this.$injector.get('$rootScope');\n\n\t\tthis.backdrop = this.$renderer.createHtmlElement('div', ['modal-backdrop', 'fade']);\n\t\tthis.title = this.$renderer.createHtmlElement('h5', ['modal-title'], [['id', `modal-title-${this.uniqueId}`]]);\n\n\t\tthis.headerCloseButton = this.$renderer.createHtmlElement('button', ['close'], [['type', 'button'], ['aria-label', 'close']]);\n\t\tthis.headerCloseButton.innerHTML = '&times;';\n\n\t\tthis.header = this.$renderer.createHtmlElement('div', ['modal-header']);\n\t\tthis.body = this.$renderer.createHtmlElement('div', ['modal-body']);\n\t\tthis.footer = this.$renderer.createHtmlElement('div', ['modal-footer']);\n\t\tthis.content = this.$renderer.createHtmlElement('div', ['modal-content']);\n\n\t\tthis.header.appendChild(this.title);\n\t\tthis.header.appendChild(this.headerCloseButton);\n\n\t\tthis.content.appendChild(this.header);\n\t\tthis.content.appendChild(this.body);\n\t\tthis.content.appendChild(this.footer);\n\n\t\tthis.footerCancelButton = this.$renderer.createHtmlElement('button', ['btn', 'btn-info'], [['type', 'button']]);\n\t\tthis.footerOkButton = this.$renderer.createHtmlElement('button', ['btn', 'btn-success'], [['type', 'button']]);\n\n\t\tthis.footer.appendChild(this.footerCancelButton);\n\t\tthis.footer.appendChild(this.footerOkButton);\n\n\t\tthis.dialog = this.$renderer.createHtmlElement('div', ['modal-dialog'], [['role', 'document']]);\n\t\tthis.dialog.appendChild(this.content);\n\n\t\tthis.container = this.$renderer.createHtmlElement('div', ['fade', 'modal'], [\n\t\t\t['aria-hidden', 'true'],\n\t\t\t['aria-labelledby', 'modal-title'],\n\t\t\t['role', 'dialog'],\n\t\t\t['tabindex', '-1'],\n\t\t]);\n\t\tthis.container.appendChild(this.dialog);\n\n\t\tdocument.body.appendChild(this.container);\n\t}\n\n\tpublic open<T extends typeof NgController>(options: NgModalOptions<T> = { }) {\n\t\tconst { $log } = this;\n\t\tconst {\n\t\t\ttitle = 'Set the <code>title</code> property to replace me :)',\n\t\t\ttemplate = '<p class=\"lead\">Set the <code>template</code> property to replace me :)</p>',\n\t\t\tcontroller = NgController,\n\t\t\tonClose = () => {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t} = options;\n\n\t\tconst defaultCancelBtnText = 'Cancel';\n\t\tconst defaultOkBtnText = 'Ok';\n\t\tlet {\n\t\t\tcancelBtnText = defaultCancelBtnText,\n\t\t\tokBtnText = defaultOkBtnText,\n\t\t} = options;\n\n\t\tif (cancelBtnText !== false) {\n\t\t\tif (cancelBtnText === true) {\n\t\t\t\tcancelBtnText = defaultCancelBtnText;\n\t\t\t}\n\t\t\tthis.footerCancelButton.innerText = cancelBtnText;\n\t\t}\n\t\tif (okBtnText !== false) {\n\t\t\tif (okBtnText === true) {\n\t\t\t\tokBtnText = defaultOkBtnText;\n\t\t\t}\n\t\t\tthis.footerOkButton.innerText = okBtnText;\n\t\t}\n\n\t\tthis.title.innerHTML = typeof title === 'function' ? title() : title;\n\t\tthis.body.innerHTML =\n\t\t\ttypeof template === 'function' ? template() : template;\n\n\t\tconst $scope = this.$rootScope.$new(true) as Parameters<NgModal['hideModal']>[1];\n\t\tconst $element = this.$compile(this.container)($scope);\n\t\tconst $ctrl = makeInjectableCtrl(controller, {\n\t\t\tlog: this.$log,\n\t\t\thttp: this.$http,\n\t\t\trenderer: this.$renderer,\n\t\t\tconfig: () => this.$config,\n\t\t});\n\n\t\t$scope.$ctrl = new $ctrl($element, $scope, this.$injector) as NgController;\n\t\t$scope.$applyAsync();\n\n\t\tconst escapeKeyListener = (e: KeyboardEvent) => {\n\t\t\tif (e.key === 'Escape' || e.key === 'Esc') {\n\t\t\t\tclose();\n\t\t\t}\n\t\t};\n\t\tconst dismiss = () => {\n\t\t\tremoveEventListeners();\n\t\t\tthis.hideModal(escapeKeyListener, $scope);\n\t\t};\n\n\t\tthis.showModal(escapeKeyListener);\n\n\t\tconst removeEventListeners = () => {\n\t\t\tthis.headerCloseButton.removeEventListener('click', dismiss);\n\t\t\tthis.footerCancelButton.removeEventListener('click', dismiss);\n\t\t\tthis.footerOkButton.removeEventListener('click', close);\n\t\t\tthis.backdrop.removeEventListener('click', close);\n\t\t};\n\n\t\tconst close = () => {\n\t\t\tif (onClose.call({ $log }, controller as T)) {\n\t\t\t\tdismiss();\n\t\t\t}\n\t\t};\n\t\tthis.headerCloseButton.addEventListener('click', dismiss);\n\t\tthis.footerCancelButton.addEventListener('click', dismiss);\n\t\tthis.footerOkButton.addEventListener('click', close);\n\t\tthis.backdrop.addEventListener('click', close);\n\n\t\treturn { close, dismiss };\n\t}\n\n\tprotected showModal(escapeKeyListener: (e: KeyboardEvent) => void) {\n\t\tthis.backdrop.style.setProperty('display', 'block');\n\n\t\tthis.container.style.setProperty('display', 'block');\n\t\tthis.container.classList.remove('show');\n\t\tthis.container.removeAttribute('aria-hidden');\n\t\tthis.container.setAttribute('aria-modal', 'true');\n\t\tthis.container.style.setProperty('padding-right', '17px');\n\t\tthis.container.style.setProperty('pointer-events', 'none');\n\n\t\twindow.addEventListener('keydown', escapeKeyListener);\n\t\tdocument.body.appendChild(this.backdrop);\n\t\tdocument.body.classList.add('modal-open');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.backdrop.classList.add('show');\n\t\t\tthis.container.classList.add('show');\n\t\t}, MODAL_SHOW_DELAY);\n\t}\n\n\tprotected hideModal(\n\t\tescapeKeyListener: (e: KeyboardEvent) => void,\n\t\tscope: NgScope & { $ctrl: NgController; },\n\t) {\n\t\tthis.backdrop.classList.remove('show');\n\t\tthis.container.classList.remove('show');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.container.style.setProperty('display', 'none');\n\t\t\tthis.backdrop.style.setProperty('display', 'none');\n\t\t}, MODAL_HIDE_DELAY);\n\n\t\tscope.$destroy();\n\t\twindow.removeEventListener('keydown', escapeKeyListener);\n\t\tdocument.body.classList.remove('modal-open');\n\t}\n}\n\nexport interface NgModalOptions<T extends typeof NgController> {\n\t/**\n\t * String representing the modal's title\n\t */\n\ttitle?: string | (() => string);\n\n\t/**\n\t * Inline template representing the modal's content\n\t */\n\ttemplate?: string | (() => string);\n\n\t/**\n\t * Ok button text (false to hide)\n\t */\n\tokBtnText?: string | boolean;\n\n\t/**\n\t * Cancel button text (false to hide, true for default)\n\t */\n\tcancelBtnText?: string | boolean;\n\n\t/**\n\t * A controller for a modal instance.\n\t */\n\tcontroller?: T;\n\n\tonClose?(this: { $log: NgLogger }, controller: T): boolean;\n}\n","import { injector } from 'angular';\n\nexport type NgInjector = ReturnType<typeof injector>;\nexport type NgScope = angular.IScope;\n\nexport { injector };\nexport { bootstrap, module } from 'angular';\n","import { IConfig, Indexed } from '@ledge/types';\nimport { autobind } from 'core-decorators';\nimport { NgController, makeInjectableCtrl } from './controller';\nimport { NgAttributes } from './attributes';\n\n@autobind\nexport class NgAppConfig implements IConfig {\n\tpublic readonly IS_PROD: boolean;\n\tpublic readonly IS_DEV: boolean;\n\tpublic readonly IS_STAGING: boolean;\n\n\t/**\n\t * The name of the library or application.\n\t */\n\tpublic readonly NAME: string;\n\n\t/**\n\t * The current library or application version, either as a string (e.g. 1.0.0 or v1) or as a number (e.g. 1 or 2.3)\n\t */\n\tpublic readonly VERSION: string | number;\n\n\t/**\n\t * The host environment for the library or application.\n\t */\n\tpublic readonly ENV: string;\n\n\t/**\n\t * The hostname for the API\n\t */\n\tpublic readonly API_HOST: string;\n\n\tconstructor({\n\t\tNAME = 'ng-app',\n\t\tENV = '',\n\t\tAPI_HOST = '',\n\t}: Partial<NgAppConfig> = { }) {\n\t\tif (ENV == null || ENV.length === 0) {\n\t\t\tENV = process.env.NODE_ENV as string;\n\t\t}\n\t\tthis.ENV = ENV;\n\n\t\tthis.IS_PROD = ENV === 'production';\n\t\tthis.IS_DEV = ENV === 'development';\n\t\tthis.IS_STAGING = ENV === 'staging';\n\n\t\tthis.NAME = NAME;\n\t\tthis.API_HOST = API_HOST;\n\t}\n}\n\n/**\n * Component definition object (a simplified directive definition object)\n */\nexport interface NgComponentOptions<T = NgController> {\n\t/**\n\t * Controller constructor function that should be associated with newly created scope or the name of a registered\n\t * controller if passed as a string. Empty function by default.\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\tcontroller?: (new (...args: any[]) => T) | ['$element', '$scope', '$injector', ReturnType<typeof makeInjectableCtrl>];\n\n\t/**\n\t * @deprecated For consistency this will always be the historical default `$ctrl`. ng-app's architecture ensures all scopes are isolates, so there's no risk of scope leakage.\n\t *\n\t * An identifier name for a reference to the controller. If present, the controller will be published to its scope under\n\t * the specified name. If not present, this will default to `$ctrl`.\n\t */\n\tcontrollerAs?: never;\n\n\t/**\n\t * html template as a string or a function that returns an html template as a string which should be used as the\n\t * contents of this component. Empty string by default.\n\t * If template is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplate?: string | (() => string) | (string | (($element: [HTMLElement], $attrs: NgAttributes) => string))[];\n\n\t/**\n\t * Path or function that returns a path to an html template that should be used as the contents of this component.\n\t * If templateUrl is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplateUrl?: never;\n\n\t/**\n\t * Define DOM attribute binding to component properties. Component properties are always bound to the component\n\t * controller and not to the scope.\n\t */\n\tbindings?: Indexed<string>;\n\n\t/**\n\t * Whether transclusion is enabled. Disabled by default.\n\t */\n\ttransclude?: boolean | Indexed<string>;\n\n\t/**\n\t * Requires the controllers of other directives and binds them to this component's controller.\n\t * The object keys specify the property names under which the required controllers (object values) will be bound.\n\t * Note that the required controllers will not be available during the instantiation of the controller,\n\t * but they are guaranteed to be available just before the $onInit method is executed!\n\t */\n\trequire?: Indexed<string>;\n}\n","import { Indexed } from '@ledge/types';\nimport { ParamType, ResolveTypes, StateDeclaration, StateService, TargetState, Transition } from '@uirouter/core';\n\nimport { NgService } from './service';\n\nexport class NgRouter<T extends NgRoute = NgRoute> extends NgService {\n\tpublic routes: T[] = [];\n\n\tpublic getRoutes() {\n\t\treturn this.routes;\n\t}\n\n\tpublic registerRoute(partial: Partial<T>) {\n\t\tconst state = {\n\t\t\t...this.generateRouteMeta(partial),\n\t\t\t...partial,\n\t\t};\n\n\t\tif (this.isNgTransitionFn(state.onEnter)) {\n\t\t\tstate.onEnter = ['$transition$', state.onEnter];\n\t\t}\n\t\tif (this.isNgTransitionFn(state.onExit)) {\n\t\t\tstate.onExit = ['$transition$', state.onExit];\n\t\t}\n\t\tif (this.isNgTransitionFn(state.onRetain)) {\n\t\t\tstate.onRetain = ['$transition$', state.onRetain];\n\t\t}\n\n\t\tthis.routes.push(state as T);\n\n\t\treturn state as T;\n\t}\n\n\tpublic async isAuthorized() {\n\t\treturn true;\n\t}\n\n\tpublic generateIntIdParam() {\n\t\tconst param = {\n\t\t\ttype: new ParamType({\n\t\t\t\tdecode(value) {\n\t\t\t\t\treturn parseInt(value, 10);\n\t\t\t\t},\n\t\t\t\tencode(value) {\n\t\t\t\t\treturn value && value.toString();\n\t\t\t\t},\n\t\t\t\tequals(a, b) {\n\t\t\t\t\treturn this.is(a) && a === b;\n\t\t\t\t},\n\t\t\t\tis(value) {\n\t\t\t\t\treturn Number.isInteger(this.decode(value));\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tparam.type.name = 'path';\n\t\treturn param;\n\t}\n\n\tpublic generateIntQueryParam() {\n\t\tconst param = {\n\t\t\ttype: new ParamType({\n\t\t\t\tdecode(value) {\n\t\t\t\t\treturn parseInt(value, 10);\n\t\t\t\t},\n\t\t\t\tencode(value) {\n\t\t\t\t\treturn value && value.toString();\n\t\t\t\t},\n\t\t\t\tequals(a, b) {\n\t\t\t\t\treturn this.is(a) && a === b;\n\t\t\t\t},\n\t\t\t\tis(value) {\n\t\t\t\t\treturn Number.isInteger(this.decode(value));\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tparam.type.name = 'query';\n\t\treturn param;\n\t}\n\n\tprotected isNgTransitionFn(item?: NgResolveFn | NgAnnotatedResolveFn): item is NgResolveFn {\n\t\treturn typeof item === 'function';\n\t}\n\n\tprotected annotateResolveFunctions({ resolve = { } }: NgRoute) {\n\t\tfor (const [id, resolveFn] of Object.entries(resolve)) {\n\t\t\tif (Array.isArray(resolve)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this.isNgTransitionFn(resolveFn)) {\n\t\t\t\tresolve[id] = ['$transition$', resolveFn];\n\t\t\t}\n\t\t}\n\n\t\treturn resolve;\n\t}\n\n\tprotected generateRouteMeta(\n\t\t{\n\t\t\tparams = { },\n\t\t\tdata = { },\n\t\t\tname = '',\n\t\t\tcomponent = '',\n\t\t\tparent = '',\n\t\t}: Partial<T>,\n\t) {\n\t\tname = (name || component);\n\n\t\tlet url = `/${data.isBase ? name : name.split(/(?=[A-Z])/).join('/').toLowerCase()}`\n\t\t\t.replace(/View$/, '');\n\n\t\tfor (const [key, { type = { } }] of Object.entries<any>(params)) {\n\t\t\turl += type.name === 'path' ? '/:' : (url.includes('?') ? '&' : '?');\n\t\t\turl += key;\n\t\t}\n\n\t\treturn { name, parent, url };\n\t}\n}\n\n/**\n * @internalapi\n * an intermediate interface.\n *\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\n */\n// tslint:disable-next-line:class-name\ninterface _NgStateService extends StateService {\n\tcurrent: any;\n}\n\nexport interface NgStateService extends _NgStateService {\n\tcurrent: NgRoute;\n\tlabel: string;\n\tparent: string;\n}\n\n/**\n * @internalapi\n * an intermediate interface.\n *\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\n */\n// tslint:disable-next-line:class-name\ninterface _NgRoute extends StateDeclaration {\n\tonExit?: any;\n\tonRetain?: any;\n\tonEnter?: any;\n\tviews?: any;\n\tresolve?: any;\n}\n\nexport type NgResolveFn<T = any> = ($trans: Transition) => Promise<T>;\nexport type NgAnnotatedResolveFn<T = any> = [string, NgResolveFn<T>];\nexport type NgTransition = NgResolveFn<TargetState | Transition> | NgAnnotatedResolveFn<TargetState | Transition>;\n\nexport interface NgRoute extends _NgRoute {\n\t/**\n\t * The name of the component to use for this view.\n\t */\n\tcomponent?: string;\n\n\t/**\n\t * An object which maps `resolve`s to component `bindings`.\n\t *\n\t * When using a component declaration (`component: 'myComponent'`),\n\t * each input binding for the component is supplied data from a resolve of\n\t * the same name, by default.\n\t *\n\t * You may supply data from a different resolve name by mapping it here.\n\t */\n\tbindings?: {\n\t\t[key: string]: string;\n\t};\n\n\tresolve?: Indexed<NgResolveFn | NgAnnotatedResolveFn> | ResolveTypes[];\n\n\t/**\n\t * Injected function which returns the HTML template.\n\t * The template will be used to render the corresponding component.\n\t *\n\t * #### Examples:\n\t * ```ts\n\t * {\n\t * \t// other props\n\t * \ttemplate: require('./template.pug');\n\t * }\n\t * ```\n\t * ```ts\n\t * {\n\t * \t// other props\n\t * \ttemplate: '<div>Hello, world!</div>';\n\t * }\n\t * ```\n\t */\n\ttemplate?: string | ((...args: any[]) => void);\n\n\turl: string;\n\tparent: string;\n\tlabel: string;\n\n\tonEnter?: NgTransition;\n\tonExit?: NgTransition;\n\tonRetain?: NgTransition;\n}\n","import { appSpinner } from './app-spinner';\n\nexport const misc = {\n\tappSpinner,\n};\n","import { NgController, app } from '../../index';\n\nclass ModalController extends NgController {\n\tpublic title = 'Example Modal';\n\tpublic body = 'Body';\n}\n\nclass AppController extends NgController {\n\tpublic openModal() {\n\t\tapp.modal.open({\n\t\t\tcontroller: ModalController,\n\t\t\ttitle: '{{$ctrl.title}}',\n\t\t\ttemplate: '<p class=\"lead\">{{$ctrl.body}}</p>',\n\t\t});\n\t}\n\n\tpublic openConfirmToast() {\n\t\tthis.$log.confirm('Yes or No?')\n\t\t\t.then(() => this.$log.success('Yes!'))\n\t\t\t.catch(() => this.$log.info('No...'));\n\t}\n}\n\napp\n\t.module\n\t.controller(\n\t\t'AppController',\n\t\tapp.makeComponentController(AppController),\n\t);\n\napp\n\t.configure({ API_HOST: 'api.ng-app.js.org' })\n\t.bootstrap()\n\t.then(() => {\n\t\tapp.log.success('Welcome... to The World...');\n\t});\n","import { HttpStatusCode } from '@ledge/types/http';\n\nimport { NgApp } from './src/app';\nimport { inputs } from './src/inputs';\nimport { misc } from './src/misc';\n\n// @ts-ignore\nimport ngAnimate from 'angular-animate';\n// @ts-ignore\nimport ngMessages from 'angular-messages';\nimport uirouter from '@uirouter/angularjs';\n\nexport const app = new NgApp()\n\t.addComponents(inputs)\n\t.addComponents(misc)\n\t.addDependencies([\n\t\tngAnimate,\n\t\tngMessages,\n\t\tuirouter,\n\t])\n\t.addHttpInterceptor({\n\t\tasync responseError(response, err) {\n\t\t\tconst { status, statusText, url } = response;\n\t\t\tconst data = await response.json();\n\n\t\t\tswitch (status) {\n\t\t\t\tcase HttpStatusCode.NotFound:\n\t\t\t\t\tapp.log.error(`Route '${url}' not found`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase HttpStatusCode.BadRequest:\n\t\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\t\tapp.log.error(data);\n\t\t\t\t\t} else if (data != null && data.toString() === '[object Object]') {\n\t\t\t\t\t\tapp.log.error(Object.keys(data).map(x => `${x}: ${data[x]}`).join('\\n\\n'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase HttpStatusCode.Unauthorized:\n\t\t\t\tcase HttpStatusCode.Forbidden:\n\t\t\t\tcase HttpStatusCode.InternalServerError:\n\t\t\t\t\tapp.log.warning(statusText);\n\t\t\t\t\tbreak;\n\t\t\t\tcase -1:\n\t\t\t\t\tapp.log.warning('Server timed out.');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tapp.log.error(`The request to '${url}' returned an error (code: ${status})`);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn err;\n\t\t},\n\t});\n\nexport * from './src/app';\nexport * from './src/attributes';\nexport * from './src/controller';\nexport * from './src/http';\nexport * from './src/logger';\nexport * from './src/modal';\nexport * from './src/ng';\nexport * from './src/options';\nexport * from './src/renderer';\nexport * from './src/router';\nexport * from './src/service';\n\nexport * from './src/inputs';\nexport * from './src/misc';\n","import { NgInputOptions } from './shared';\n\nexport const checkBox: NgInputOptions = {\n\ttype: 'input',\n\ttemplateClass: 'form-check',\n\tlabelClass: 'form-check-label',\n\trender(h) {\n\t\tconst input = h.createInput('checkbox');\n\t\tinput.style.setProperty('cursor', 'pointer');\n\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\n\t\t\tthis.$template.classList.remove('form-check');\n\t\t\tthis.$template.classList.add('form-check-inline');\n\t\t}\n\n\t\treturn input;\n\t},\n\tbindings: {\n\t\tngChecked: '<',\n\t},\n};\n","import flatpickr from 'flatpickr';\nimport { NgInputController, NgInputOptions } from './shared';\n\nfunction isNumber(n: any): n is number {\n\treturn Number.isInteger(n);\n}\n\nclass DateInputController extends NgInputController {\n\tprivate readonly SUPPORTED_MODES = ['single', 'multiple', 'range'];\n\tprivate minDate?: Date | number | string;\n\tprivate maxDate?: Date | number | string;\n\tprivate flatpickr: flatpickr.Instance;\n\n\tpublic $onInit() {\n\t\tthis.ngModelCtrl.$validators.minDate = modelVal => {\n\t\t\tif (modelVal != null) {\n\t\t\t\tif (isNumber(this.minDate)) {\n\t\t\t\t\treturn this.minDate <= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t\tif (this.minDate instanceof Date) {\n\t\t\t\t\treturn this.minDate.valueOf() <= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tthis.ngModelCtrl.$validators.maxDate = modelVal => {\n\t\t\tif (modelVal != null) {\n\t\t\t\tif (isNumber(this.maxDate)) {\n\t\t\t\t\treturn this.maxDate >= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t\tif (this.maxDate instanceof Date) {\n\t\t\t\t\treturn this.maxDate.valueOf() >= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tconst { inline, mode = 'single' } = this.$attrs;\n\t\tif (this.SUPPORTED_MODES.includes(mode) === false) {\n\t\t\tthis.$log.devWarning(`Unsupported date-input \\`mode\\` ('${mode}') for #${this.$element.id}. Expected one of ${this.SUPPORTED_MODES.join(', ')}.`);\n\t\t}\n\n\t\tthis.flatpickr = flatpickr(this.$element, {\n\t\t\tdateFormat: 'M n Y (l)',\n\t\t\tdefaultDate: this.ngModel,\n\t\t\tinline: inline === 'true',\n\t\t\tmode,\n\t\t\tnextArrow: '&raquo;',\n\t\t\tprevArrow: '&laquo;',\n\t\t\tallowInput: true,\n\t\t\tweekNumbers: true,\n\t\t\twrap: true,\n\t\t\tenable: [\n\t\t\t\td => {\n\t\t\t\t\tconst maxDate = Date.parse(this.maxDate as any);\n\t\t\t\t\treturn Number.isNaN(maxDate) || d.valueOf() < maxDate;\n\t\t\t\t},\n\t\t\t\td => {\n\t\t\t\t\tconst minDate = Date.parse(this.minDate as any);\n\t\t\t\t\treturn Number.isNaN(minDate) || d.valueOf() > minDate;\n\t\t\t\t},\n\t\t\t],\n\t\t\tonChange: selected => {\n\t\t\t\tthis.ngModel = selected.length > 1\n\t\t\t\t\t? selected\n\t\t\t\t\t: selected[0];\n\n\t\t\t\tthis.$scope.$applyAsync();\n\t\t\t},\n\t\t}) as flatpickr.Instance;\n\t}\n\n\tpublic $onDestroy() {\n\t\tif (this.flatpickr != null && typeof this.flatpickr.destroy === 'function') {\n\t\t\tthis.flatpickr.destroy();\n\t\t}\n\t}\n\n\tpublic getMinDate() {\n\t\treturn new Date(this.minDate as number).toLocaleDateString();\n\t}\n\n\tpublic getMaxDate() {\n\t\treturn new Date(this.maxDate as number).toLocaleDateString();\n\t}\n}\n\nexport const dateInput: NgInputOptions = {\n\ttype: 'input',\n\trender(h) {\n\t\tconst input = h.createInput('text');\n\n\t\t// flatpickr requires control of the input element\n\t\tinput.removeAttribute('ng-model');\n\t\tinput.setAttribute('data-input', 'true');\n\n\t\tconst iconInput = h.createIconInput(input, 'calendar', [\n\t\t\t['data-toggle', 'true'],\n\t\t\t['style', 'cursor: pointer;'],\n\t\t]);\n\n\t\tconst inputGroupAppend = h.createHtmlElement('div', ['input-group-append']);\n\t\tinputGroupAppend.setAttribute('data-clear', 'true');\n\t\tinputGroupAppend.style.setProperty('cursor', 'pointer');\n\n\t\tconst inputGroupText = h.createHtmlElement('span', ['input-group-text']);\n\t\tconst clearIcon = h.createIcon('times');\n\n\t\tinputGroupText.appendChild(clearIcon);\n\t\tinputGroupAppend.appendChild(inputGroupText);\n\t\ticonInput.appendChild(inputGroupAppend);\n\n\t\treturn iconInput;\n\t},\n\tbindings: {\n\t\tminDate: '<',\n\t\tmaxDate: '<',\n\t},\n\tvalidators: {\n\t\tminDate: 'Date must be on or after {{$ctrl.getMinDate()}}',\n\t\tmaxDate: 'Date must be on or before {{$ctrl.getMaxDate()}}',\n\t},\n\tcontroller: DateInputController,\n};\n","import { Indexed } from '@ledge/types';\nimport { copy } from 'angular';\n\nimport { NgInputController } from './controller';\nimport { NgInputOptions } from './options';\nimport { NgAttributes } from '../../attributes';\nimport { NgComponentOptions } from '../../options';\nimport { NgRenderer } from '../../renderer';\nimport { NgService } from '../../service';\n\nconst BaseComponent = Object.seal({\n\tisRadioOrCheckbox: false,\n\ttype: 'input',\n\tlabelClass: 'form-control-label',\n\ttemplateClass: 'form-group',\n\tattrs: { },\n\tcontroller: class extends NgInputController { },\n\trender(_h) {\n\t\treturn this.$template;\n\t},\n\trenderLabel(h) {\n\t\tconst $transclude = h.createSlot();\n\t\t$transclude.textContent = InputService.getDefaultLabelText(this.$attrs);\n\t\tthis.$label.appendChild($transclude);\n\t},\n\tpostRender(_h) {\n\t\treturn this.$template;\n\t},\n}) as NgInputOptions & { isRadioOrCheckbox: boolean };\n\nconst ValidationExpressions = Object.seal({\n\t$Error: '$ctrl.ngModelCtrl.$error',\n\t$Invalid: '$ctrl.ngModelCtrl.$invalid',\n\t$Touched: '$ctrl.ngModelCtrl.$touched',\n\t$FormInvalid: `$ctrl.ngModelCtrl.$$parentForm.$submitted`,\n\tget $IsInvalid() {\n\t\treturn `(${this.$Touched} || ${this.$FormInvalid}) && ${this.$Invalid}`;\n\t},\n});\n\nexport class InputService extends NgService {\n\tpublic static readonly $validationAttrs = [\n\t\t'required', 'ngRequired',\n\t\t'disabled', 'ngDisabled',\n\t\t'readonly', 'ngReadonly',\n\t];\n\n\tpublic static readonly $validationMessages = new Map<string, string>([\n\t\t['email', 'Email address must be in the following form: email@address.com'],\n\t\t['required', 'This field is required'],\n\t\t['minlength', 'Input is not long enough'],\n\t\t['maxlength', 'Input is too long'],\n\t]);\n\n\tpublic static readonly $baseDefinition: NgComponentOptions = {\n\t\ttransclude: {\n\t\t\tcontain: '?contain',\n\t\t},\n\t\trequire: {\n\t\t\tngModelCtrl: 'ngModel',\n\t\t},\n\t\tbindings: {\n\t\t\tngModel: '=',\n\t\t\tngModelOptions: '<',\n\t\t\tngDisabled: '<',\n\t\t\tngReadonly: '<',\n\t\t\tngRequired: '<',\n\t\t},\n\t};\n\n\tpublic static readonly $BaseComponent = BaseComponent;\n\tpublic static readonly $ValidationExpressions = ValidationExpressions;\n\n\t/**\n\t * Retrieves the identifying name for an ngModel\n\t */\n\tpublic static modelIdentifier($attrs: NgAttributes) {\n\t\treturn ($attrs.ngModel as string).split('.').pop() as string;\n\t}\n\n\t/**\n\t * Gets text -- intended for a label -- from the ngModel property text\n\t */\n\tpublic static getDefaultLabelText($attrs: NgAttributes) {\n\t\treturn InputService.modelIdentifier($attrs)\n\t\t\t.split(/(?=[A-Z0-9])/)\n\t\t\t.map(x => isNaN(Number(x)) ? x.charAt(0).toUpperCase() + x.substring(1) : x)\n\t\t\t.join(' ');\n\t}\n\n\t/**\n\t * @param $input - The input to set attributes on\n\t */\n\tpublic static getInputInput($input: HTMLElement) {\n\t\treturn (\n\t\t\t['INPUT', 'TEXTAREA', 'SELECT'].includes($input.tagName)\n\t\t\t\t? $input\n\t\t\t\t:\t$input.querySelector('select') || $input.querySelector('input')\n\t\t) as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\n\t}\n\n\t/**\n\t * Transform an input component definition into an ng component definition\n\t * @param component An object representing the requested component definition\n\t */\n\tpublic static defineInputComponent<T extends NgInputOptions>(component: T) {\n\t\t// 'h' identifier (and many other ideas) taken from the virtual-dom ecosystem\n\t\tconst h = new NgRenderer();\n\n\t\tconst $component = copy({ ...InputService.$BaseComponent, ...component });\n\t\t$component.isRadioOrCheckbox = $component.labelClass === 'form-check-label';\n\n\t\tconst $definition = copy(InputService.$baseDefinition);\n\n\t\t// assign child objects\n\t\tObject.assign($definition.bindings, $component.bindings);\n\t\tObject.assign($definition.transclude, $component.transclude);\n\n\t\t// assign controller\n\t\tif ($component.controller === undefined) {\n\t\t\tthrow new Error(`Invalid component: ${JSON.stringify($component)}`);\n\t\t}\n\t\t$definition.controller = $component.controller;\n\n\t\t// assign template\n\t\t$definition.template = ['$element', '$attrs', ($element: [HTMLElement], $attrs: NgAttributes) => {\n\t\t\tconst $el = $element[0];\n\n\t\t\tconst $template = h.createHtmlElement('div', [$component.templateClass as string]);\n\n\t\t\t// allow consumer to access $template and $attrs attributes from `this`\n\t\t\tconst $input = $component.render.call({ $template, $attrs }, h);\n\n\t\t\tconst isRadio = ($input as HTMLInputElement).type === 'radio';\n\t\t\tconst isRequired = $attrs.hasOwnProperty('required');\n\t\t\tconst isSrOnly = $attrs.hasOwnProperty('srOnly');\n\n\t\t\t// all inputs must have labels\n\t\t\tconst $label = h.createLabel([$component.labelClass as string], { isRequired, isSrOnly, isRadio });\n\n\t\t\tif ($component.isRadioOrCheckbox === false) {\n\t\t\t\t$template.appendChild($label);\n\t\t\t}\n\n\t\t\tif ($component.canHaveIcon === true) {\n\t\t\t\t$template.appendChild(h.createIconInput($input, $attrs.icon));\n\t\t\t} else {\n\t\t\t\t$template.appendChild($input);\n\t\t\t}\n\n\t\t\tif ($el.closest('contain') != null) {\n\t\t\t\t$input.style.marginTop = '8px';\n\t\t\t\t$label.classList.add('sr-only');\n\t\t\t}\n\n\t\t\tconst requiredTag = $label.firstElementChild;\n\t\t\tif (requiredTag != null) {\n\t\t\t\t$label.removeChild(requiredTag);\n\t\t\t}\n\n\t\t\t($component.renderLabel as NonNullable<NgInputOptions['renderLabel']>)\n\t\t\t\t.call({ $label, $attrs }, h);\n\n\t\t\tif (requiredTag != null) {\n\t\t\t\t$label.appendChild(requiredTag);\n\t\t\t}\n\n\t\t\t// add a transclusion slot for e.g. nesting inputs\n\t\t\t$template.appendChild(h.createSlot('contain'));\n\n\t\t\tif ($component.isRadioOrCheckbox === true) {\n\t\t\t\t$label.style.setProperty('cursor', 'pointer');\n\t\t\t\t$template.appendChild($label);\n\t\t\t}\n\n\t\t\t($component.postRender as NonNullable<NgInputOptions['postRender']>)\n\t\t\t\t.call({ $template, $attrs }, h);\n\n\t\t\t// that's right, i named it after filterFilter. fight me.\n\t\t\tconst $inputInput = InputService.getInputInput($input);\n\n\t\t\tInputService.$validationAttrs\n\t\t\t\t.filter(x => $attrs.hasOwnProperty(x) === true)\n\t\t\t\t.forEach(x => {\n\t\t\t\t\t$inputInput.setAttribute(\n\t\t\t\t\t\tx.replace(/[A-Z]/, s => `-${s.toLowerCase()}`),\n\t\t\t\t\t\tx.startsWith('ng') ? `$ctrl.${x}` : 'true',\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\tif ($inputInput.tagName !== 'SELECT') {\n\t\t\t\t$inputInput.setAttribute('ng-class', `{ 'is-invalid': ${InputService.$ValidationExpressions.$IsInvalid} }`);\n\t\t\t\t$inputInput.setAttribute('ng-blur', '$ctrl.ngModelCtrl.$setTouched()');\n\t\t\t}\n\n\t\t\tconst $validationBlock = h.createHtmlElement('div', [], [\n\t\t\t\t['ng-messages', InputService.$ValidationExpressions.$Error],\n\t\t\t\t['ng-show', InputService.$ValidationExpressions.$IsInvalid],\n\t\t\t\t['role', 'alert'],\n\t\t\t]);\n\n\t\t\tconst { validators = { } } = $component;\n\t\t\tconst attrs = Object.keys($component.attrs as Indexed);\n\n\t\t\tfor (const [key, value] of Object.entries(validators)) {\n\t\t\t\tInputService.$validationMessages.set(key, value);\n\t\t\t\tattrs.push(key);\n\t\t\t}\n\n\t\t\tInputService.$validationAttrs\n\t\t\t\t.concat(...attrs, 'email')\n\t\t\t\t.filter(x => x.startsWith('ng') === false)\n\t\t\t\t.filter(x => InputService.$validationMessages.has(x) === true)\n\t\t\t\t.filter(x => x !== 'email' || $inputInput.type === x)\n\t\t\t\t.forEach(x => {\n\t\t\t\t\tconst $message = h.createHtmlElement('div', ['text-danger'], [['ng-message', x]]);\n\t\t\t\t\t$message.innerText = InputService.$validationMessages.get(x) as string;\n\t\t\t\t\t$validationBlock.appendChild($message);\n\t\t\t\t});\n\n\t\t\tlet $html: string;\n\t\t\tif (isRadio === true) {\n\t\t\t\tconst $newTpl = h.createHtmlElement('div', ['form-group']);\n\t\t\t\t$newTpl.appendChild($template);\n\t\t\t\t$newTpl.appendChild($validationBlock);\n\t\t\t\t$html = $newTpl.outerHTML;\n\t\t\t} else {\n\t\t\t\t$template.appendChild($validationBlock);\n\t\t\t\t$html = $template.outerHTML;\n\t\t\t}\n\n\t\t\t$html = $html.replace(/{{id}}/g, InputService.modelIdentifier($attrs));\n\n\t\t\tattrs\n\t\t\t\t.forEach(prop => {\n\t\t\t\t\t$html = $html.replace(\n\t\t\t\t\t\tnew RegExp(`{{${prop}}}`, 'g'),\n\t\t\t\t\t\t$attrs[prop] || ($component.attrs as Indexed)[prop],\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\treturn $html;\n\t\t}];\n\n\t\treturn $definition as T;\n\t}\n}\n","import { NgInputController, NgInputOptions } from './shared';\n\nclass RadioListController extends NgInputController {\n\tpublic $postLink() {\n\t\tsetTimeout(() => {\n\t\t\tif (this.$attrs.hasOwnProperty('required')) {\n\t\t\t\tconst fieldset = this.$element.closest('fieldset');\n\n\t\t\t\tif (fieldset != null) {\n\t\t\t\t\tconst legend = fieldset.querySelector('legend');\n\n\t\t\t\t\tif (legend != null) {\n\t\t\t\t\t\tconst span = document.createElement('span');\n\t\t\t\t\t\tspan.classList.add('text-danger');\n\t\t\t\t\t\tspan.innerText = ' *';\n\t\t\t\t\t\tlegend.appendChild(span);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport const radioList: NgInputOptions = {\n\ttype: 'input',\n\ttemplateClass: 'form-check',\n\tlabelClass: 'form-check-label',\n\trender(h) {\n\t\tconst radio = h.createInput('radio');\n\t\tconst { value = 'Value' } = this.$attrs;\n\n\t\tradio.setAttribute('ng-value', `item.${value}`);\n\t\tradio.setAttribute('ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}_{{$index}}');\n\t\tradio.style.setProperty('cursor', 'pointer');\n\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\n\t\t\tthis.$template.classList.remove('form-check');\n\t\t\tthis.$template.classList.add('form-check-inline');\n\t\t}\n\n\t\tthis.$template.setAttribute('ng-repeat', 'item in $ctrl.list track by $index');\n\n\t\treturn radio;\n\t},\n\trenderLabel() {\n\t\tconst { text = 'Text' } = this.$attrs;\n\t\tconst labelText = document.createTextNode(`{{item.${text}}}`);\n\n\t\tthis.$label.appendChild(labelText);\n\t\tthis.$label.setAttribute('ng-attr-for', '{{id}}_{{$ctrl.uniqueId}}_{{$index}}');\n\t},\n\tbindings: {\n\t\tlist: '<',\n\t\tngChecked: '<',\n\t},\n\tcontroller: RadioListController,\n};\n","import Fuse from 'fuse.js';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { NgInputController, NgInputOptions } from './shared';\nimport { NgAttributes } from '../attributes';\nimport { NgService } from '../service';\n\nclass SelectController extends NgInputController {\n\tpublic static readonly SinglePlaceholder = '----Select One----';\n\tpublic static readonly MultiplePlaceholder = '----Select All That Apply----';\n\n\tpublic static IsMultiple($attrs: NgAttributes) {\n\t\treturn $attrs.hasOwnProperty('multiple') || $attrs.type === 'multiple';\n\t}\n\n\tpublic static GetPlaceholder($attrs: NgAttributes) {\n\t\treturn $attrs.placeholder ||\n\t\t\tSelectController.IsMultiple($attrs)\n\t\t\t? SelectController.MultiplePlaceholder\n\t\t\t: SelectController.SinglePlaceholder;\n\t}\n\n\tprotected isListOpen = false;\n\tprotected list: any[];\n\tprotected searchList: any[];\n\n\t// tslint:disable:variable-name\n\tprivate _text: string;\n\tprivate _value: string;\n\t// tslint:enable:variable-name\n\n\tpublic get text() {\n\t\tif (typeof this._text !== 'string') {\n\t\t\tconst { text = 'Text' } = this.$attrs;\n\t\t\tthis._text = text;\n\t\t}\n\t\treturn this._text;\n\t}\n\n\tpublic get value() {\n\t\tif (typeof this._value !== 'string') {\n\t\t\tconst { value = 'Value' } = this.$attrs;\n\t\t\tthis._value = value;\n\t\t}\n\t\treturn this._value;\n\t}\n\n\tprivate destroyCurrentWatcher: () => void;\n\n\tprivate get isMultiple() {\n\t\treturn SelectController.IsMultiple(this.$attrs);\n\t}\n\n\tpublic $onInit() {\n\t\tif (this.isMobile) {\n\t\t\tthis.searchList = this.list;\n\t\t\treturn;\n\t\t}\n\n\t\tconst container = this.$element.querySelector('.select-container') as HTMLDivElement;\n\t\tconst dropdown = this.$element.querySelector('.select-dropdown') as HTMLDivElement;\n\t\tconst dropdownlist = this.$element.querySelector('.select-dropdown-list') as HTMLDivElement;\n\t\tconst input = this.$element.querySelector('input') as HTMLInputElement;\n\n\t\tconst updateSearchList = () => {\n\t\t\tif (input.value) {\n\t\t\t\tthis.searchList = this.getSearchList(fuzzer.search(input.value));\n\t\t\t} else {\n\t\t\t\tthis.searchList = cloneDeep(this.list);\n\t\t\t}\n\t\t\tthis.$scope.$applyAsync();\n\t\t};\n\n\t\tinput.oninput = () => {\n\t\t\tupdateSearchList();\n\t\t};\n\n\t\tinput.onblur = e => {\n\t\t\tif (e.relatedTarget == null) {\n\t\t\t\tinput.hidden = true;\n\t\t\t\tdropdownlist.hidden = true;\n\t\t\t\tdropdown.classList.remove('border-top-0');\n\t\t\t\tdropdown.classList.remove('border-bottom-0');\n\t\t\t}\n\t\t};\n\n\t\tcontainer.onclick = e => {\n\t\t\tif (e.target instanceof HTMLSelectElement) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.target instanceof HTMLButtonElement) {\n\t\t\t\tinput.hidden = false;\n\t\t\t}\n\n\t\t\tinput.hidden = !input.hidden;\n\t\t\tdropdown.classList.toggle('border-top-0', input.hidden);\n\t\t\tdropdown.classList.toggle('border-bottom-0', input.hidden);\n\n\t\t\tif (!input.hidden) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\n\t\t\tdropdownlist.hidden = input.hidden;\n\t\t};\n\n\t\tdropdownlist.onclick = e => {\n\t\t\tlet { target } = e as unknown as { target: HTMLElement };\n\t\t\tif (target.nodeName === '#text') {\n\t\t\t\ttarget = target.parentElement as HTMLElement;\n\t\t\t}\n\n\t\t\tconst targetIsItem =\n\t\t\t\ttarget instanceof HTMLDivElement &&\n\t\t\t\ttarget.classList.contains('select-item') &&\n\t\t\t\ttarget.parentElement instanceof HTMLDivElement &&\n\t\t\t\ttarget.parentElement.classList.contains('select-dropdown-list');\n\n\t\t\tif (targetIsItem) {\n\t\t\t\tinput.value = '';\n\t\t\t\tthis.select(target.dataset.value);\n\t\t\t}\n\t\t};\n\n\t\tlet fuzzer: Fuse<any, any>;\n\t\tthis.$scope.$watchCollection(\n\t\t\t() => this.list,\n\t\t\t_ => {\n\t\t\t\tfuzzer = new Fuse(_, {\n\t\t\t\t\tshouldSort: true,\n\t\t\t\t\tthreshold: 0.3,\n\t\t\t\t\tlocation: 0,\n\t\t\t\t\tdistance: 100,\n\t\t\t\t\tmaxPatternLength: 32,\n\t\t\t\t\tminMatchCharLength: 1,\n\t\t\t\t\tkeys: [this.text],\n\t\t\t\t});\n\n\t\t\t\tupdateSearchList();\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic $onDestroy() {\n\t\tif (typeof this.destroyCurrentWatcher === 'function') {\n\t\t\tthis.destroyCurrentWatcher();\n\t\t}\n\t}\n\n\tpublic getDisplayText(value: any) {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value == null) {\n\t\t\treturn SelectController.GetPlaceholder(this.$attrs);\n\t\t}\n\n\t\t// tslint:disable-next-line:triple-equals\n\t\tconst item = this.list.find(x => x[this.value] == value);\n\t\treturn item == null ? this.clear() : item[this.text];\n\t}\n\n\tpublic remove(item: any) {\n\t\t// tslint:disable-next-line:triple-equals\n\t\tthis.ngModel = this.ngModel.filter((x: any) => x != item);\n\t\tthis.searchList = this.getSearchList(this.list);\n\t}\n\n\tpublic clear() {\n\t\tif (this.isMultiple ? Array.isArray(this.ngModel) && this.ngModel.length > 0 : this.ngModel !== undefined) {\n\t\t\tthis.ngModel = this.isMultiple ? [] : undefined;\n\t\t}\n\t\tthis.searchList = this.getSearchList(this.list);\n\t}\n\n\tpublic select(value: any) {\n\t\tif (this.isMultiple) {\n\t\t\tthis.ngModel = Array.isArray(this.ngModel)\n\t\t\t\t? this.ngModel.includes(value)\n\t\t\t\t\t? this.ngModel\n\t\t\t\t\t: this.ngModel.concat(value)\n\t\t\t\t: [value];\n\t\t} else {\n\t\t\tthis.ngModel = value;\n\t\t}\n\n\t\tthis.searchList = this.getSearchList(this.list);\n\t\tthis.$scope.$applyAsync();\n\t}\n\n\tprivate getSearchList(list: any[]) {\n\t\t// tslint:disable:triple-equals\n\t\treturn Array.isArray(this.ngModel)\n\t\t\t? list.filter(x => this.ngModel.every((y: any) => x[this.value] != y))\n\t\t\t: this.ngModel == null\n\t\t\t\t? cloneDeep(list)\n\t\t\t\t: list.filter(x => x[this.value] != this.ngModel);\n\t\t// tslint:enable:triple-equals\n\t}\n}\n\nexport const selectList: NgInputOptions = {\n\ttype: 'input',\n\trender(h) {\n\t\tconst select = h.createHtmlElement(\n\t\t\t'select',\n\t\t\t['form-control', 'select-input', 'd-none'],\n\t\t\t[\n\t\t\t\t['ng-attr-name', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t\t\t['ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t\t\t['ng-model', '$ctrl.ngModel'],\n\t\t\t],\n\t\t);\n\n\t\tconst isMultiple = SelectController.IsMultiple(this.$attrs);\n\t\tif (isMultiple) {\n\t\t\tselect.setAttribute('multiple', 'true');\n\t\t} else {\n\t\t\tconst placeholder = h.createHtmlElement('option');\n\n\t\t\tplaceholder.setAttribute('placeholder', 'true');\n\t\t\tplaceholder.text = SelectController.GetPlaceholder(this.$attrs);\n\t\t\tplaceholder.value = '';\n\n\t\t\tselect.appendChild(placeholder);\n\t\t}\n\n\t\tif (NgService.IsMobile()) {\n\t\t\tselect.classList.remove('d-none');\n\t\t\tselect.setAttribute(\n\t\t\t\t'ng-options',\n\t\t\t\t'item[\\'{{$ctrl.value}}\\'] as item[\\'{{$ctrl.text}}\\'] for item in $ctrl.searchList track by $index',\n\t\t\t);\n\t\t\treturn select;\n\t\t}\n\n\t\tconst inner = h.createHtmlElement('div', ['select-inner-container']);\n\t\tconst innerlist = h.createHtmlElement('div', ['select-list', isMultiple ? 'multiple' : 'single']);\n\t\tconst selected = h.createHtmlElement('div', ['select-item']);\n\n\t\tconst btn = h.createHtmlElement('button', ['select-button'],\n\t\t\t[\n\t\t\t\t['ng-attr-aria-label', 'Remove item: \\'{{$ctrl.getDisplayText($ctrl.ngModel)}}\\''],\n\t\t\t\t['ng-click', '$ctrl.clear()'],\n\t\t\t],\n\t\t);\n\n\t\tif (isMultiple) {\n\t\t\tconst sbtn = btn.cloneNode() as HTMLButtonElement;\n\t\t\tsbtn.setAttribute('ng-attr-aria-label', 'Remove item: \\'{{$ctrl.getDisplayText(item)}}\\'');\n\t\t\tsbtn.setAttribute('ng-click', '$ctrl.remove(item)');\n\n\t\t\tselected.setAttribute('ng-repeat', 'item in $ctrl.ngModel track by $index');\n\t\t\tselected.setAttribute('aria-selected', 'true');\n\t\t\tselected.innerHTML = `{{$ctrl.getDisplayText(item)}}${sbtn.outerHTML}`;\n\n\t\t\tconst placeholder = h.createHtmlElement('div', ['select-item', 'placeholder'], [['ng-if', '$ctrl.ngModel == null || $ctrl.ngModel.length === 0']]);\n\t\t\tplaceholder.innerText = SelectController.GetPlaceholder(this.$attrs);\n\n\t\t\tinnerlist.appendChild(placeholder);\n\t\t} else {\n\t\t\tselected.setAttribute('ng-class', '{ \\'placeholder\\': $ctrl.ngModel == null }');\n\t\t\tselected.innerText = '{{$ctrl.getDisplayText($ctrl.ngModel)}}';\n\t\t}\n\n\t\tconst item = h.createHtmlElement('div', ['select-item'],\n\t\t\t[\n\t\t\t\t['ng-repeat', 'item in $ctrl.searchList track by $index'],\n\t\t\t\t['ng-attr-data-value', '{{item[$ctrl.value]}}'],\n\t\t\t\t['role', 'option'],\n\t\t\t],\n\t\t);\n\t\titem.innerText = '{{item[$ctrl.text]}}';\n\n\t\tconst list = h.createHtmlElement('div', ['select-dropdown-list'],\n\t\t\t[\n\t\t\t\t['dir', 'ltr'],\n\t\t\t\t['role', 'listbox'],\n\t\t\t\t['hidden', 'true'],\n\t\t\t],\n\t\t);\n\n\t\tconst input = h.createHtmlElement('input', ['select-input'],\n\t\t\t[\n\t\t\t\t['type', 'text'],\n\t\t\t\t['autocomplete', 'off'],\n\t\t\t\t['autocapitalize', 'off'],\n\t\t\t\t['spellcheck', 'false'],\n\t\t\t\t['role', 'textbox'],\n\t\t\t\t['aria-autocomplete', 'list'],\n\t\t\t\t['placeholder', ''],\n\t\t\t\t['aria-label', 'Select List'],\n\t\t\t\t['hidden', 'true'],\n\t\t\t],\n\t\t);\n\n\t\tconst type = `select-${isMultiple ? 'multiple' : 'one'}`;\n\t\tconst container = h.createHtmlElement('div', ['select-container'],\n\t\t\t[\n\t\t\t\t['data-type', type],\n\t\t\t\t['role', 'combobox'],\n\t\t\t\t['tabindex', '0'],\n\t\t\t\t['aria-autocomplete', 'list'],\n\t\t\t\t['aria-haspopup', 'true'],\n\t\t\t\t['aria-expanded', 'false'],\n\t\t\t\t['dir', 'ltr'],\n\t\t\t\t['ng-attr-name', `${type}_{{$ctrl.uniqueId}}`],\n\t\t\t\t['ng-attr-id', `${type}_{{$ctrl.uniqueId}}`],\n\t\t\t],\n\t\t);\n\n\t\tconst dropdown = h.createHtmlElement('div', ['select-dropdown', 'border-bottom-0', 'border-top-0'], [['aria-expanded', 'false']]);\n\n\t\tinnerlist.appendChild(selected);\n\t\tinnerlist.appendChild(btn);\n\t\tinner.appendChild(select);\n\t\tinner.appendChild(innerlist);\n\n\t\tlist.appendChild(item);\n\n\t\tdropdown.appendChild(input);\n\t\tdropdown.appendChild(list);\n\n\t\tcontainer.appendChild(inner);\n\t\tcontainer.appendChild(dropdown);\n\n\t\treturn container;\n\t},\n\tcontroller: SelectController,\n\tbindings: {\n\t\tlist: '<',\n\t},\n};\n","import { NgInputController, NgInputOptions } from './shared';\n\nconst DEFAULT_MAX_HEIGHT = 9e4;\n\nclass TextBoxController extends NgInputController {\n\tpublic $element: HTMLTextAreaElement;\n\tpublic $mirror = document.createElement('textarea');\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.$mirror.setAttribute('aria-hidden', 'true');\n\t\tthis.$mirror.setAttribute('aria-label', 'Hidden TextArea');\n\t\tthis.$mirror.setAttribute('tabindex', '-1');\n\n\t\tthis.$mirror.style.setProperty('position', 'absolute');\n\t\tthis.$mirror.style.setProperty('top', '-999px');\n\t\tthis.$mirror.style.setProperty('right', 'auto');\n\t\tthis.$mirror.style.setProperty('bottom', 'auto');\n\t\tthis.$mirror.style.setProperty('left', '0');\n\t\tthis.$mirror.style.setProperty('overflow', 'hidden');\n\t\tthis.$mirror.style.setProperty('box-sizing', 'content-box');\n\t\tthis.$mirror.style.setProperty('min-height', '0', 'important');\n\t\tthis.$mirror.style.setProperty('height', '0', 'important');\n\t\tthis.$mirror.style.setProperty('padding', '0');\n\t\tthis.$mirror.style.setProperty('word-wrap', 'break-word');\n\t\tthis.$mirror.style.setProperty('border', '0');\n\n\t\t// append mirror to the DOM\n\t\tdocument.body.appendChild(this.$mirror);\n\t}\n\n\tpublic $onInit() {\n\t\t// the query *must* return an element or nothing we've done so far matters\n\t\tconst element = this.$element.querySelector('textarea') as HTMLTextAreaElement;\n\t\tlet computedStyle = window.getComputedStyle(element);\n\n\t\tconst boxOuter = {\n\t\t\twidth:\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-right-width'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-right'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-left'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-left-width'), 10),\n\t\t\theight:\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-top-width'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-top'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-bottom'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-bottom-width'), 10),\n\t\t};\n\n\t\tconst minHeightValue = parseInt(computedStyle.getPropertyValue('min-height'), 10);\n\t\tconst heightValue = parseInt(computedStyle.getPropertyValue('height'), 10);\n\t\tconst minHeight = Math.max(minHeightValue, heightValue) - boxOuter.height;\n\n\t\t// opera returns max-height of -1 if not set\n\t\tlet maxHeight = parseInt(computedStyle.getPropertyValue('max-height'), 10);\n\t\tmaxHeight = maxHeight && maxHeight > 0 ? maxHeight : DEFAULT_MAX_HEIGHT;\n\n\t\t// set resize and apply elastic\n\t\telement.style.setProperty('resize', 'none');\n\n\t\tconst mirror = this.$mirror;\n\t\tfunction adjust() {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tcomputedStyle = window.getComputedStyle(element);\n\n\t\t\t\tconst width = `${parseInt(computedStyle.getPropertyValue('width'), 10) - boxOuter.width}px`;\n\t\t\t\tmirror.style.setProperty('width', width);\n\t\t\t\tmirror.style.setProperty('overflow-y', computedStyle.getPropertyValue('overflow-y'));\n\n\t\t\t\tmirror.value = element.value;\n\n\t\t\t\tlet { scrollHeight } = mirror;\n\t\t\t\tlet overflow = 'hidden';\n\n\t\t\t\tif (scrollHeight > maxHeight) {\n\t\t\t\t\tscrollHeight = maxHeight;\n\t\t\t\t\toverflow = 'scroll';\n\t\t\t\t} else if (scrollHeight < minHeight) {\n\t\t\t\t\tscrollHeight = minHeight;\n\t\t\t\t}\n\n\t\t\t\telement.style.setProperty('overflow-y', overflow);\n\n\t\t\t\tscrollHeight += boxOuter.height;\n\t\t\t\tif (parseInt(computedStyle.getPropertyValue('height'), 10) !== scrollHeight) {\n\t\t\t\t\telement.style.setProperty('height', `${scrollHeight}px`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\twindow.addEventListener('resize', adjust);\n\t\telement.addEventListener('keydown', adjust);\n\n\t\tthis.$scope.$on('$destroy', () => {\n\t\t\tif (this.isIE11) {\n\t\t\t\t(this.$mirror as any).removeNode(true);\n\t\t\t} else {\n\t\t\t\tthis.$mirror.remove();\n\t\t\t}\n\t\t\twindow.removeEventListener('resize', adjust);\n\t\t\telement.removeEventListener('keydown', adjust);\n\t\t});\n\n\t\t// copy the essential styles from the textarea to the mirror\n\t\tconst styles = [\n\t\t\t'font-family',\n\t\t\t'font-size',\n\t\t\t'font-weight',\n\t\t\t'font-style',\n\t\t\t'letter-spacing',\n\t\t\t'line-height',\n\t\t\t'text-transform',\n\t\t\t'word-spacing',\n\t\t\t'text-indent',\n\t\t\t'white-space',\n\t\t];\n\n\t\tfor (const style of styles) {\n\t\t\tthis.$mirror.style.setProperty(style, computedStyle.getPropertyValue(style));\n\t\t}\n\t}\n}\n\nexport const textBox: NgInputOptions = {\n\ttype: 'input',\n\tattrs: { maxlength: 3000, placeholder: '' },\n\trender(h) {\n\t\tconst textArea = h.createTextArea();\n\n\t\ttextArea.style.setProperty('overflow', 'hidden');\n\t\ttextArea.style.setProperty('overflow-y', 'hidden');\n\t\ttextArea.style.setProperty('word-wrap', 'break-word');\n\n\t\treturn textArea;\n\t},\n\tcontroller: TextBoxController,\n};\n","import { Indexed } from '@ledge/types';\nimport { NgInputController, NgInputOptions } from './shared';\n\nclass TextInputController extends NgInputController {\n\tpublic min: number | undefined;\n\tpublic max: number | undefined;\n\n\tpublic $onInit() {\n\t\tconst { type, minlength } = this.$attrs;\n\n\t\tif (type === 'number') {\n\t\t\tthis.ngModelCtrl.$validators.minVal = val => {\n\t\t\t\treturn this.min == null || val >= this.min;\n\t\t\t};\n\t\t\tthis.ngModelCtrl.$validators.maxVal = val => {\n\t\t\t\treturn this.max == null || val <= this.max;\n\t\t\t};\n\t\t}\n\n\t\tif (minlength != null) {\n\t\t\tthis.ngModelCtrl.$validators.pattern = val => {\n\t\t\t\treturn val != null && val.length >= minlength;\n\t\t\t};\n\t\t}\n\t}\n}\n\nconst validators: Indexed<string> = {\n\tminVal: 'Must be greater than or equal to {{$ctrl.min}}',\n\tmaxVal: 'Must be less than or equal to {{$ctrl.max}}',\n};\n\nexport const textInput: NgInputOptions<TextInputController> = {\n\ttype: 'input',\n\tcanHaveIcon: true,\n\tattrs: { maxlength: 3000, placeholder: '' },\n\trender(h) {\n\t\tconst { type, minlength } = this.$attrs;\n\n\t\tconst input = h.createInput(type);\n\n\t\tconst isRange = type === 'range';\n\t\tif (type === 'number' || isRange) {\n\t\t\tinput.setAttribute('ng-attr-min', '{{$ctrl.min}}');\n\t\t\tinput.setAttribute('ng-attr-max', '{{$ctrl.max}}');\n\t\t\tinput.setAttribute('ng-attr-step', `{{$ctrl.step || '${isRange ? 1 : 'any'}'}}`);\n\t\t}\n\n\t\tif (minlength != null) {\n\t\t\tinput.setAttribute('pattern', `.{${minlength},}`);\n\t\t\tvalidators.pattern = `Input must be at least ${minlength} characters`;\n\t\t}\n\n\t\treturn input;\n\t},\n\tpostRender(h) {\n\t\tif (this.$attrs.type === 'range') {\n\t\t\tconst text = h.createHtmlElement('p', ['text-center', 'lead']);\n\t\t\ttext.textContent = '{{$ctrl.ngModel}}';\n\t\t\tthis.$template.appendChild(text);\n\t\t}\n\t\treturn this.$template;\n\t},\n\tbindings: {\n\t\tmin: '<',\n\t\tmax: '<',\n\t\tstep: '<',\n\t},\n\tvalidators,\n\tcontroller: TextInputController,\n};\n\nexport const htmlInput = { ...textInput };\n","import { NgController } from '../controller';\nimport { NgComponentOptions } from '../options';\n\nclass SpinnerController extends NgController {\n\tprivate readonly colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\n\tpublic $onInit() {\n\t\tconst { color = 'primary' } = this.$attrs;\n\n\t\tif (this.colors.includes(color) === false) {\n\t\t\tthrow new Error(`Color not supported: ${color}.\\nSupported colors: ${this.colors.join(', ')}`);\n\t\t}\n\n\t\tconst srDesc = this.$renderer.createHtmlElement('span', ['sr-only']);\n\t\tsrDesc.innerText = 'Loading...';\n\n\t\tconst spinner = this.$renderer.createHtmlElement('div', ['spinner-border', `text-${color}`, 'mx-1'], [['role', 'status']]);\n\t\tspinner.appendChild(srDesc);\n\t\tspinner.style.setProperty('margin-top', '0.23rem');\n\n\t\tthis.$element.appendChild(spinner);\n\t}\n}\n\nexport const appSpinner: NgComponentOptions = {\n\tcontroller: SpinnerController,\n};\n","import { isIE11 } from '@ledge/is-ie-11';\nimport { isMobile } from '@ledge/is-mobile';\n\nexport class NgService {\n\tpublic static IsMobile() {\n\t\treturn isMobile();\n\t}\n\n\tpublic static IsIE11() {\n\t\treturn isIE11();\n\t}\n\n\t/**\n\t * @see https://stackoverflow.com/a/2117523\n\t */\n\tpublic static UUIDv4() {\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n\t\t\t// tslint:disable:no-bitwise no-magic-numbers\n\t\t\tconst r = Math.random() * 16 | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3 | 0x8);\n\t\t\t// tslint:enable:no-bitwise no-magic-numbers\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\tpublic readonly uniqueId = this.UUIDv4().replace(/[-]|[,]/g, '');\n\n\tpublic UUIDv4() {\n\t\treturn NgService.UUIDv4();\n\t}\n\n\tprotected get isMobile() {\n\t\treturn isMobile();\n\t}\n\n\tprotected get isIE11() {\n\t\treturn NgService.IsIE11();\n\t}\n\n\t/**\n\t * Separates words in a string by capital letters. Also capitalizes the first letter.\n\t *\n\t * The following exceptions apply:\n\t * 1) If string is all-caps, it's returned as-is\n\t * 2) Any embedded acronyms (such as F.A.Q.) are returned as-is\n\t * 3) Consecutive capital letters are returned as-is\n\t * 3) Hyphenated words retain concatenation\n\t *\n\t * @param item - The string value to be split\n\t */\n\tpublic splitByCapitalLetter(item: string) {\n\t\tconst split = item.split(/(?=[A-Z])/);\n\t\treturn split.every(x => x.length === 1)\n\t\t\t? item\n\t\t\t: split\n\t\t\t\t\t.map(x => x.trim())\n\t\t\t\t\t.map(x =>\n\t\t\t\t\t\t// tslint:disable-next-line: no-magic-numbers\n\t\t\t\t\t\tx.length === 1 || (x.length === 2 && x.charAt(1) === '.')\n\t\t\t\t\t\t\t// tslint:disable-next-line: prefer-template\n\t\t\t\t\t\t\t? (x.toUpperCase() + '\\uFFFF')\n\t\t\t\t\t\t\t: (x.charAt(0).toUpperCase() + x.substring(1)),\n\t\t\t\t\t)\n\t\t\t\t\t.join(' ')\n\t\t\t\t\t.replace(\n\t\t\t\t\t\t/\\w{1}\\.?(\\uFFFF){1}\\s?/g,\n\t\t\t\t\t\t([first, second]) =>\n\t\t\t\t\t\t\tsecond === '.'\n\t\t\t\t\t\t\t\t? first + second\n\t\t\t\t\t\t\t\t: first,\n\t\t\t\t\t)\n\t\t\t\t\t.replace(\n\t\t\t\t\t\t/\\.{1}\\w{2,}/g,\n\t\t\t\t\t\t([first, second, ...rest]) =>\n\t\t\t\t\t\t\t`${first} ${second.toUpperCase()}${rest.join('')}`,\n\t\t\t\t\t)\n\t\t\t\t\t.replace(/- /g, '-');\n\t}\n}\n","export * from './controller';\nexport * from './options';\nexport * from './service';\n","import { Indexed } from '@ledge/types';\nimport { autobind } from 'core-decorators';\n\nimport { NgAttributes } from './attributes';\nimport { NgHttp } from './http';\nimport { NgLogger } from './logger';\nimport { NgService } from './service';\nimport { NgInjector, NgScope } from './ng';\nimport { NgAppConfig } from './options';\nimport { NgRenderer } from './renderer';\nimport { NgStateService } from './router';\n\nexport class NgController extends NgService {\n\tpublic readonly $scope: NgScope;\n\tpublic readonly $attrs: NgAttributes;\n\tpublic readonly $injector: NgInjector;\n\n\tpublic readonly $config: NgAppConfig;\n\tpublic readonly $log: NgLogger;\n\tpublic readonly $http: NgHttp;\n\tpublic readonly $state: NgStateService;\n\tpublic readonly $renderer: NgRenderer;\n\tpublic readonly $element: HTMLElement;\n\n\tpublic readonly isProduction: boolean;\n\tpublic readonly isDevelopment: boolean;\n\tpublic readonly isStaging: boolean;\n\tpublic readonly apiPrefix: string;\n\n\tpublic openWebAddress(address: string) {\n\t\tthis.$log.confirm(`You are being sent to ${address}. Continue?`).then(() => window.open(`http://${address}`));\n\t}\n\n\t/**\n\t * Called on each controller after all the controllers on an element have been constructed and had their bindings\n\t * initialized (and before the pre & post linking functions for the directives on this element). This is a good\n\t * place to put initialization code for your controller.\n\t */\n\tpublic $onInit?(): void;\n\n\t/**\n\t * Called on each turn of the digest cycle. Provides an opportunity to detect and act on changes.\n\t * Any actions that you wish to take in response to the changes that you detect must be invoked from this hook;\n\t * implementing this has no effect on when `$onChanges` is called. For example, this hook could be useful if you wish\n\t * to perform a deep equality check, or to check a `Date` object, changes to which would not be detected by Angular's\n\t * change detector and thus not trigger `$onChanges`. This hook is invoked with no arguments; if detecting changes,\n\t * you must store the previous value(s) for comparison to the current values.\n\t */\n\tpublic $doCheck?(): void;\n\n\t/**\n\t * Called whenever one-way bindings are updated. The onChangesObj is a hash whose keys are the names of the bound\n\t * properties that have changed, and the values are an object of the form { currentValue, previousValue, isFirstChange() }.\n\t * Use this hook to trigger updates within a component such as cloning the bound value to prevent accidental mutation of the outer value.\n\t */\n\tpublic $onChanges?<T = any>(onChangesObj: {\n\t\t[property: string]: {\n\t\t\tcurrentValue: T;\n\t\t\tpreviousValue: T;\n\t\t\tisFirstChange(): boolean;\n\t\t},\n\t}): void;\n\n\t/**\n\t * Called on a controller when its containing scope is destroyed. Use this hook for releasing external resources,\n\t * watches and event handlers.\n\t */\n\tpublic $onDestroy?(): void;\n\n\t/**\n\t * Called after this controller's element and its children have been linked. Similar to the post-link function this\n\t * hook can be used to set up DOM event handlers and do direct DOM manipulation. Note that child elements that contain\n\t * templateUrl directives will not have been compiled and linked since they are waiting for their template to load\n\t * asynchronously and their own compilation and linking has been suspended until that occurs. This hook can be considered\n\t * analogous to the ngAfterViewInit and ngAfterContentInit hooks in Angular 2. Since the compilation process is rather\n\t * different in Angular 1 there is no direct mapping and care should be taken when upgrading.\n\t */\n\tpublic $postLink?(): void;\n}\n\nexport function makeInjectableCtrl<T extends NgController>(ctrl: new () => T, locals: {\n\tlog: NgLogger,\n\thttp: NgHttp,\n\trenderer: NgRenderer,\n\tattrs?: Indexed,\n\tconfig(): NgAppConfig;\n}) {\n\tautobind(ctrl);\n\treturn class InternalController extends (ctrl as new () => any) {\n\t\tpublic $log = locals.log;\n\t\tpublic $http = locals.http;\n\t\tpublic $renderer = locals.renderer;\n\t\tpublic $state: NgStateService;\n\t\tpublic $attrs: NgAttributes;\n\t\tpublic $element: HTMLElement;\n\n\t\tpublic get $config() {\n\t\t\treturn locals.config();\n\t\t}\n\t\tpublic get isProduction() {\n\t\t\treturn this.$config.IS_PROD;\n\t\t}\n\t\tpublic get isDevelopment() {\n\t\t\treturn this.$config.IS_DEV;\n\t\t}\n\t\tpublic get isStaging() {\n\t\t\treturn this.$config.IS_STAGING;\n\t\t}\n\t\tpublic get apiPrefix() {\n\t\t\treturn this.$config.API_HOST;\n\t\t}\n\n\t\tconstructor(\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\tpublic $scope: NgScope,\n\t\t\tpublic $injector: NgInjector,\n\t\t) {\n\t\t\tsuper();\n\n\t\t\tthis.$element = $element[0];\n\t\t\tthis.$attrs = new NgAttributes(this.$element, locals.attrs);\n\t\t\tthis.$state = this.$injector.get('$state');\n\t\t}\n\t} as new (\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\t$scope: NgScope,\n\t\t\t$injector: NgInjector,\n\t\t) => T;\n}\n"],"sourceRoot":""}