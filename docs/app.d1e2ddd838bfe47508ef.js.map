{"version":3,"sources":["webpack:///./src/inputs/shared/controller.ts","webpack:///./src/inputs/radio-list.ts","webpack:///./src/logger.ts","webpack:///./src/inputs/text-input.ts","webpack:///./src/inputs/index.ts","webpack:///./src/inputs/shared/index.ts","webpack:///./docs/src/app.ts","webpack:///./src/app.ts","webpack:///./src/inputs/date-input.ts","webpack:///./src/modal.ts","webpack:///./src/http.ts","webpack:///./src/misc/app-icon.ts","webpack:///./src/misc/app-spinner.ts","webpack:///./src/misc/index.ts","webpack:///./src/attributes.ts","webpack:///./src/icon.ts","webpack:///./src/inputs/check-box.ts","webpack:///./src/router.ts","webpack:///./src/inputs/shared/service.ts","webpack:///./src/renderer.ts","webpack:///./src/inputs/text-box.ts","webpack:///./src/inputs/select-list.ts","webpack:///./index.ts","webpack:///./src/service.ts","webpack:///./src/ng.ts","webpack:///./src/controller.ts","webpack:///./src/options.ts"],"names":["NgInputController","_super","_this","call","this","setTimeout","$contain","$element","querySelector","children","length","isIE11","removeNode","remove","$scope","$watch","ngModel","curr","prev","lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default","ngModelCtrl","$setViewValue","Object","keys","$validators","every","x","$commitViewValue","__extends","_controller__WEBPACK_IMPORTED_MODULE_1__","radioList","type","templateClass","labelClass","render","h","radio","createInput","_a","$attrs","value","setAttribute","style","setProperty","hasOwnProperty","$template","classList","add","renderLabel","text","labelText","document","createTextNode","$label","appendChild","bindings","list","ngChecked","controller","RadioListController","prototype","$postLink","fieldset","closest","legend","span","createElement","innerText","_shared__WEBPACK_IMPORTED_MODULE_0__","LogTypeToastBackgrounds","NgToast","$renderer","options","toast","createHtmlElement","toastBody","toastHeader","toastHeaderTimestamp","setBodyText","setType","container","el","innerHTML","show","timeout","animejs__WEBPACK_IMPORTED_MODULE_0__","targets","translateX","duration","easing","begin","Date","toLocaleTimeString","navigator","language","replace","Promise","resolve","hideAnimation","autoplay","complete","removeEventListener","play","resetAnimationOnMouseover","resumeAnimationOnMouseout","isAutoClose","Number","isInteger","makeTimeout","autoCloseId","undefined","wasClosing","progress","clearTimeout","restart","pause","addEventListener","hide","click","parentElement","removeChild","NgConsole","$debug","items","_i","arguments","console","debug","apply","__spread","$error","error","$info","info","$warn","warn","$log","log","$success","_service__WEBPACK_IMPORTED_MODULE_1__","NgLogger","isProd","toasts","body","clear","forEach","confirm","msg","okBtn","cancelBtn","footer","notify","reject","removeListeners","ok","cancel","isTemporary","success","warning","devWarning","then","index","findIndex","is","splice","push","TextInputController","$onInit","minlength","minVal","val","min","maxVal","max","pattern","validators","textInput","canHaveIcon","attrs","maxlength","placeholder","input","isRange","postRender","textContent","step","htmlInput","assign","__webpack_require__","d","__webpack_exports__","inputs","_check_box__WEBPACK_IMPORTED_MODULE_0__","_date_input__WEBPACK_IMPORTED_MODULE_1__","_radio_list__WEBPACK_IMPORTED_MODULE_2__","_select_list__WEBPACK_IMPORTED_MODULE_3__","_text_box__WEBPACK_IMPORTED_MODULE_4__","_text_input__WEBPACK_IMPORTED_MODULE_5__","_shared__WEBPACK_IMPORTED_MODULE_6__","o","checkBox","dateInput","selectList","textBox","_controller__WEBPACK_IMPORTED_MODULE_0__","_options__WEBPACK_IMPORTED_MODULE_1__","_service__WEBPACK_IMPORTED_MODULE_2__","ModalController","title","_index__WEBPACK_IMPORTED_MODULE_0__","AppController","openModal","modal","open","template","openConfirmToast","catch","module","makeComponentController","configure","API_HOST","bootstrap","NgApp","config","$id","$injector","_ng__WEBPACK_IMPORTED_MODULE_7__","$injector2","_angular_core__WEBPACK_IMPORTED_MODULE_1__","create","name","providers","provide","HTMLDocument","useValue","_options__WEBPACK_IMPORTED_MODULE_8__","useFactory","$config","deps","_renderer__WEBPACK_IMPORTED_MODULE_9__","_logger__WEBPACK_IMPORTED_MODULE_5__","r","c","IS_PROD","_http__WEBPACK_IMPORTED_MODULE_3__","interceptors","$httpInterceptors","onFinally","forceUpdate","_modal__WEBPACK_IMPORTED_MODULE_6__","l","$components","Map","$dependencies","$module","$bootstrap","$compileProvider","$locationProvider","$qProvider","IS_DEV","IS_STAGING","debugInfoEnabled","commentDirectivesEnabled","cssClassDirectivesEnabled","html5Mode","errorOnUnhandledRejections","$stateProvider","router","_b","__values","getRoutes","_c","next","done","definition","state","run","$animate","enabled","defineProperty","$router","Set","get","$applyAsync","strictDi","_d","_e","__read","component","class_1","_router__WEBPACK_IMPORTED_MODULE_10__","setRouter","addComponents","components","entries","entries_1","entries_1_1","isInputComponent","_inputs__WEBPACK_IMPORTED_MODULE_4__","defineInputComponent","set","addDependencies","moduleNames","addHttpInterceptor","interceptor","rawCtrl","_controller__WEBPACK_IMPORTED_MODULE_2__","http","renderer","__decorate","core_decorators__WEBPACK_IMPORTED_MODULE_0__","_service__WEBPACK_IMPORTED_MODULE_11__","isNumber","n","removeAttribute","iconInput","createIconInput","inputGroupAppend","inputGroupText","clearIcon","createIcon","minDate","maxDate","DateInputController","SUPPORTED_MODES","modelVal","valueOf","inline","mode","includes","id","join","flatpickr","flatpickr__WEBPACK_IMPORTED_MODULE_0___default","dateFormat","defaultDate","nextArrow","prevArrow","allowInput","weekNumbers","wrap","enable","parse","isNaN","onChange","selected","$onDestroy","destroy","getMinDate","toLocaleDateString","getMaxDate","_shared__WEBPACK_IMPORTED_MODULE_1__","NgModal","$http","$compile","$rootScope","backdrop","uniqueId","headerCloseButton","header","content","footerCancelButton","footerOkButton","dialog","onClose","cancelBtnText","_f","okBtnText","$new","$ctrl","escapeKeyListener","e","key","close","dismiss","removeEventListeners","window","scope","$destroy","NgHttpOptions","init","host","ssl","location","protocol","keepalive","cache","credentials","redirect","referrerPolicy","NgHttp","request","map","filter","response","responseError","Get","url","fetch","Post","data","Patch","Put","Delete","Jsonp","getFullUrl","uri","URL","toJSON","method","Response","abortCtrl_1","AbortController","Request","signal","JSON","stringify","_g","_h","onRequest","_o","sent","abortTimer","abort","json","_j","_k","onResponse","Error","_l","_m","onResponseError","clone","err_1","_service__WEBPACK_IMPORTED_MODULE_0__","appIcon","IconController","iconName","icon","width","height","appSpinner","SpinnerController","colors","app_spinner_extends","color","srDesc","spinner","misc","NgAttributes","$$element","$attr","PREFIX_REGEXP","SPECIAL_CHARS_REGEXP","Array","from","attributes","$record","$normalize","_","letter","offset","toUpperCase","$hasClass","className","contains","$addClass","$removeClass","$updateClass","newClasses","oldClasses","nu","split","old","old_1","old_1_1","nu_1","nu_1_1","$set","$observe","__","normalized","octicons","symbol","version","viewBox","class","aria-hidden","toSVG","attrObj","parseInt","trim","role","option","htmlAttributes","path","NgRouter","routes","registerRoute","partial","generateRouteMeta","parent","isNgTransitionFn","onEnter","onExit","onRetain","isAuthorized","generateIntIdParam","param","_uirouter_core__WEBPACK_IMPORTED_MODULE_0__","decode","encode","toString","equals","a","b","generateIntQueryParam","item","annotateResolveFunctions","resolveFn","isArray","params","isBase","toLowerCase","InputService","makeBaseComponent","$transclude","createSlot","getDefaultLabelText","isRadioOrCheckbox","makeBaseOptions","transclude","contain","require","ngModelOptions","ngDisabled","ngReadonly","ngRequired","modelIdentifier","pop","charAt","substring","getInputInput","$input","tagName","_renderer__WEBPACK_IMPORTED_MODULE_1__","$component","$definition","$el","isRadio","isRequired","isSrOnly","createLabel","marginTop","requiredTag","firstElementChild","$inputInput","$validationAttrs","s","startsWith","$validationExps","$isInvalid","$html","$validationBlock","$validationMessages","concat","has","$message","$newTpl","outerHTML","prop","RegExp","$invalid","$touched","$formInvalid","NgRenderer","baseInputAttrs","classes","classes_1","classes_1_1","addClass","attrs_1","attrs_1_1","$isRange","$isRadio","$isCheckbox","$class","$inputAttrs","shift","createTextArea","_icon__WEBPACK_IMPORTED_MODULE_1__","sort","svg","aria-label","$span","inputGroupAttrs","$inputGroup","$inputGroupPrepend","$inputGroupText","$icon","createText","createComment","newChild","insertBefore","refChild","removeClass","setStyle","flags","_angular_core__WEBPACK_IMPORTED_MODULE_0__","Important","removeStyle","removeProperty","setValue","node","nodeValue","parentNode","nextSibling","selectRootElement","selectorOrNode","preserveContent","listen","target","eventName","callback","textArea","TextBoxController","$mirror","element","computedStyle","getComputedStyle","boxOuter","getPropertyValue","minHeightValue","heightValue","minHeight","Math","maxHeight","mirror","adjust","requestAnimationFrame","scrollHeight","overflow","$on","styles_1","styles_1_1","SelectController","isListOpen","IsMultiple","GetPlaceholder","MultiplePlaceholder","SinglePlaceholder","_text","_value","fuzzer","innerContainer","dropdown","dropdownlist","updateSearchList","searchList","getSearchList","search","lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default","$watchCollection","fuse_js__WEBPACK_IMPORTED_MODULE_0___default","shouldSort","threshold","distance","maxPatternLength","minMatchCharLength","shouldFocusInput","onclick","HTMLButtonElement","isMultiple","HTMLElement","hidden","focus","onfocus","onblur","nodeName","HTMLDivElement","select","dataset","relatedTarget","oninput","destroyCurrentWatcher","getDisplayText","find","y","_shared__WEBPACK_IMPORTED_MODULE_2__","_service__WEBPACK_IMPORTED_MODULE_3__","IsMobile","inner","innerlist","btn","sbtn","cloneNode","app","_src_app__WEBPACK_IMPORTED_MODULE_0__","_src_inputs__WEBPACK_IMPORTED_MODULE_1__","_src_misc__WEBPACK_IMPORTED_MODULE_2__","angular_animate__WEBPACK_IMPORTED_MODULE_3___default","angular_messages__WEBPACK_IMPORTED_MODULE_4___default","_uirouter_angularjs__WEBPACK_IMPORTED_MODULE_5__","err","status","statusText","NgService","UUIDv4","innerWidth","IsIE11","_ledge_is_ie_11__WEBPACK_IMPORTED_MODULE_0__","random","splitByCapitalLetter","first","second","rest","slice","angular__WEBPACK_IMPORTED_MODULE_0__","NgController","openWebAddress","address","makeNg1Controller","ctrl","locals","Ng1Controller","_attributes__WEBPACK_IMPORTED_MODULE_1__","$state","NgAppConfig","NAME","ENV"],"mappings":"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","file":"app.d1e2ddd838bfe47508ef.js","sourcesContent":["import isEqual from 'lodash/isEqual';\r\nimport { Indexed } from '@ledge/types';\r\nimport { NgController } from '../../controller';\r\n\r\nexport class NgInputController<T = any> extends NgController {\r\n\tpublic ngModel: any;\r\n\tpublic ngModelCtrl: NgModelController<T>;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst $contain = this.$element.querySelector('[ng-transclude=\"contain\"]');\r\n\t\t\tif ($contain != null && $contain.children.length === 0) {\r\n\t\t\t\tif (this.isIE11) {\r\n\t\t\t\t\t($contain as any).removeNode(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$contain.remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.$scope.$watch(\r\n\t\t\t\t() => this.ngModel,\r\n\t\t\t\t(curr: any, prev: any) => {\r\n\t\t\t\t\tif (isEqual(curr, prev) === false) {\r\n\t\t\t\t\t\tthis.ngModelCtrl.$setViewValue(curr);\r\n\t\t\t\t\t\tconst isValid = Object\r\n\t\t\t\t\t\t\t.keys(this.ngModelCtrl.$validators)\r\n\t\t\t\t\t\t\t.every(x => {\r\n\t\t\t\t\t\t\t\treturn this.ngModelCtrl.$validators[x](curr, curr);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isValid) {\r\n\t\t\t\t\t\t\tthis.ngModelCtrl.$commitViewValue();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport interface NgModelController<T = any> {\r\n\t$viewValue: T;\r\n\t$modelValue: T;\r\n\r\n\t$error: { [validationErrorKey: string]: boolean };\r\n\t$name?: string;\r\n\r\n\treadonly $touched: boolean;\r\n\treadonly $untouched: boolean;\r\n\r\n\t$validators: {\r\n\t\t/**\r\n\t\t * viewValue is any because it can be an object that is called in the view like $viewValue.name:$viewValue.subName\r\n\t\t */\r\n\t\t[index: string]: (modelValue: any, viewValue: any) => boolean;\r\n\t};\r\n\r\n\t$pending?: { [validationErrorKey: string]: boolean };\r\n\treadonly $pristine: boolean;\r\n\treadonly $dirty: boolean;\r\n\treadonly $valid: boolean;\r\n\treadonly $invalid: boolean;\r\n\r\n\t/**\r\n\t * Documentation states viewValue and modelValue to be a string but other types do work and it's common to use them.\r\n\t */\r\n\t$setViewValue(value: any, trigger?: string): void;\r\n\t$commitViewValue(): void;\r\n\t$rollbackViewValue(): void;\r\n\t$processModelValue(): void;\r\n\t$overrideModelOptions(options: NgModelOptions): void;\r\n\r\n\t$render(): void;\r\n\t$validate(): void;\r\n\t$setDirty(): void;\r\n\t$setPristine(): void;\r\n\t$setTouched(): void;\r\n\t$setUntouched(): void;\r\n\t$setValidity(validationErrorKey: string, isValid: boolean): void;\r\n\r\n\t$isEmpty(value: any): boolean;\r\n}\r\n\r\n/**\r\n * Allows tuning how model updates are done.\r\n * @see https://docs.angularjs.org/api/ng/directive/ngModelOptions\r\n */\r\nexport interface NgModelOptions {\r\n\tupdateOn?: string;\r\n\tdebounce?: number | Indexed<number>;\r\n\tallowInvalid?: boolean;\r\n\tgetterSetter?: boolean;\r\n\ttimezone?: string;\r\n}\r\n","import { NgInputController, NgInputOptions } from './shared';\r\n\r\nclass RadioListController extends NgInputController {\r\n\tpublic $postLink() {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (this.$attrs.hasOwnProperty('required')) {\r\n\t\t\t\tconst fieldset = this.$element.closest('fieldset');\r\n\r\n\t\t\t\tif (fieldset != null) {\r\n\t\t\t\t\tconst legend = fieldset.querySelector('legend');\r\n\r\n\t\t\t\t\tif (legend != null) {\r\n\t\t\t\t\t\tconst span = document.createElement('span');\r\n\t\t\t\t\t\tspan.classList.add('text-danger');\r\n\t\t\t\t\t\tspan.innerText = ' *';\r\n\t\t\t\t\t\tlegend.appendChild(span);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const radioList: NgInputOptions = {\r\n\ttype: 'input',\r\n\ttemplateClass: 'form-check',\r\n\tlabelClass: 'form-check-label',\r\n\trender(h) {\r\n\t\tconst radio = h.createInput('radio');\r\n\t\tconst { value = 'Value' } = this.$attrs;\r\n\r\n\t\tradio.setAttribute('ng-value', `item.${value}`);\r\n\t\tradio.setAttribute('ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}_{{$index}}');\r\n\t\tradio.style.setProperty('cursor', 'pointer');\r\n\r\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\r\n\t\t\tthis.$template.classList.remove('form-check');\r\n\t\t\tthis.$template.classList.add('form-check-inline');\r\n\t\t}\r\n\r\n\t\tthis.$template.setAttribute('ng-repeat', 'item in $ctrl.list track by $index');\r\n\r\n\t\treturn radio;\r\n\t},\r\n\trenderLabel() {\r\n\t\tconst { text = 'Text' } = this.$attrs;\r\n\t\tconst labelText = document.createTextNode(`{{item.${text}}}`);\r\n\r\n\t\tthis.$label.appendChild(labelText);\r\n\t\tthis.$label.setAttribute('ng-attr-for', '{{id}}_{{$ctrl.uniqueId}}_{{$index}}');\r\n\t},\r\n\tbindings: {\r\n\t\tlist: '<',\r\n\t\tngChecked: '<',\r\n\t},\r\n\tcontroller: RadioListController,\r\n};\r\n","import anime from 'animejs';\r\nimport { NgService } from './service';\r\nimport { NgRenderer } from './renderer';\r\n\r\ntype LogType = '$log' | '$warn' | '$error' | '$info' | '$success';\r\nenum LogTypeToastBackgrounds {\r\n\t$log = 'white',\r\n\t$success = 'success',\r\n\t$info = 'info',\r\n\t$warn = 'warning',\r\n\t$error = 'danger',\r\n}\r\n\r\nexport class NgToast {\r\n\tprotected type: LogType;\r\n\tprotected readonly toast: HTMLDivElement;\r\n\tprotected readonly toastHeader: HTMLDivElement;\r\n\tprotected readonly toastBody: HTMLDivElement;\r\n\tprotected readonly toastHeaderTimestamp: HTMLElement;\r\n\r\n\tconstructor(protected readonly $renderer: NgRenderer, options: {\r\n\t\ttext: string,\r\n\t\ttype: LogType,\r\n\t\tcontainer: HTMLElement,\r\n\t}) {\r\n\t\tthis.toast = this.$renderer.createHtmlElement('div', ['toast', 'row', 'justify-content-between', 'w-100'], [['role', 'alert'], ['aria-live', 'assertive'], ['aria-atomic', 'true']]);\r\n\t\tthis.toast.style.setProperty('cursor', 'pointer');\r\n\r\n\t\tthis.toastBody = this.$renderer.createHtmlElement('div', ['toast-body', 'h5', 'col', 'mb-0', 'pb-3']);\r\n\t\tthis.toastHeader = this.$renderer.createHtmlElement('div', ['toast-header']);\r\n\t\tthis.toastHeader.style.setProperty('border-bottom', 'none');\r\n\r\n\t\tthis.toastHeaderTimestamp = this.$renderer.createHtmlElement('strong', ['text-dark']);\r\n\r\n\t\tthis.toastHeader.appendChild(this.toastHeaderTimestamp);\r\n\t\tthis.toast.appendChild(this.toastHeader);\r\n\t\tthis.toast.appendChild(this.toastBody);\r\n\r\n\t\tthis.setBodyText(options.text);\r\n\t\tthis.setType(options.type);\r\n\r\n\t\toptions.container.appendChild(this.toast);\r\n\t}\r\n\r\n\t/**\r\n\t * Append a child element to the toast element\r\n\t *\r\n\t * @param el The element to append\r\n\t */\r\n\tpublic appendChild(el: HTMLElement) {\r\n\t\tthis.toast.appendChild(el);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the inner HTML of the toast's body element\r\n\t *\r\n\t * @param text The HTML to set\r\n\t */\r\n\tpublic setBodyText(text: string) {\r\n\t\tthis.toastBody.innerHTML = text;\r\n\t}\r\n\r\n\t/**\r\n\t * Change the look & feel of the toast based on its associated log type\r\n\t *\r\n\t * @param type The log type of toast\r\n\t */\r\n\tpublic setType(type: LogType) {\r\n\t\tif (this.type != null) {\r\n\t\t\tthis.toast.classList.remove(`bg-${LogTypeToastBackgrounds[this.type]}`);\r\n\t\t}\r\n\r\n\t\tthis.type = type;\r\n\t\tthis.toast.classList.add(`bg-${LogTypeToastBackgrounds[this.type]}`);\r\n\r\n\t\tif (type === '$log') {\r\n\t\t\tthis.toastHeader.classList.add('bg-dark');\r\n\t\t\tthis.toastHeader.style.setProperty('opacity', '0.75');\r\n\t\t\tthis.toastHeaderTimestamp.classList.remove('text-dark');\r\n\t\t\tthis.toastHeaderTimestamp.classList.add('text-white');\r\n\t\t} else if (type !== '$warn') {\r\n\t\t\tthis.toast.classList.add('text-white');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Show the toast\r\n\t *\r\n\t * @param timeout Length in ms before toast disappears (`false` to set permanently)\r\n\t * @param container Optional container override\r\n\t */\r\n\tpublic show(timeout: false | number, container?: HTMLElement) {\r\n\t\tif (container != null) {\r\n\t\t\tthis.remove();\r\n\t\t\tcontainer.appendChild(this.toast);\r\n\t\t}\r\n\r\n\t\tanime({\r\n\t\t\ttargets: this.toast,\r\n\t\t\ttranslateX: [500, 0],\r\n\t\t\tduration: 1000,\r\n\t\t\teasing: 'easeOutQuint(0.5, 1)',\r\n\t\t\tbegin: () => {\r\n\t\t\t\tthis.toastHeaderTimestamp.innerText = new Date().toLocaleTimeString(navigator.language).replace(/(:\\d{2})(?=\\s[AP]M$)/, '');\r\n\t\t\t\tthis.toast.style.setProperty('opacity', '1');\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tconst hideAnimation = anime({\r\n\t\t\t\ttargets: this.toast,\r\n\t\t\t\ttranslateX: [0, 500],\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\tautoplay: false,\r\n\t\t\t\teasing: 'easeInQuint(0.5, 1)',\r\n\t\t\t\tcomplete: () => {\r\n\t\t\t\t\tthis.toast.removeEventListener('click', hideAnimation.play);\r\n\t\t\t\t\tthis.toast.removeEventListener('mouseover', resetAnimationOnMouseover);\r\n\t\t\t\t\tthis.toast.removeEventListener('mouseout', resumeAnimationOnMouseout);\r\n\t\t\t\t\tthis.remove();\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tconst isAutoClose = typeof timeout === 'number' && Number.isInteger(timeout);\r\n\t\t\tconst makeTimeout = () => (setTimeout as typeof window['setTimeout'])(hideAnimation.play, timeout as number);\r\n\r\n\t\t\tlet autoCloseId = isAutoClose ? makeTimeout() : undefined;\r\n\t\t\tlet wasClosing = false;\r\n\r\n\t\t\tconst resetAnimationOnMouseover = () => {\r\n\t\t\t\twasClosing = hideAnimation.progress > 0;\r\n\r\n\t\t\t\tclearTimeout(autoCloseId);\r\n\t\t\t\tautoCloseId = undefined;\r\n\r\n\t\t\t\thideAnimation.restart();\r\n\t\t\t\thideAnimation.pause();\r\n\t\t\t};\r\n\r\n\t\t\tconst resumeAnimationOnMouseout = () => {\r\n\t\t\t\tif (wasClosing) {\r\n\t\t\t\t\thideAnimation.play();\r\n\t\t\t\t} else if (isAutoClose && autoCloseId === undefined) {\r\n\t\t\t\t\tautoCloseId = makeTimeout();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.toast.addEventListener('click', hideAnimation.play);\r\n\t\t\tthis.toast.addEventListener('mouseover', resetAnimationOnMouseover);\r\n\t\t\tthis.toast.addEventListener('mouseout', resumeAnimationOnMouseout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the toast\r\n\t */\r\n\tpublic hide() {\r\n\t\tthis.toast.click();\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the toast from its container\r\n\t */\r\n\tpublic remove() {\r\n\t\tif (this.toast.parentElement != null) {\r\n\t\t\tthis.toast.parentElement.removeChild(this.toast);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// tslint:disable:no-console\r\nexport class NgConsole extends NgService {\r\n\t/**\r\n\t * Invokes `Console.prototype.debug`\r\n\t *\r\n\t * @param items list of items to log\r\n\t */\r\n\tpublic $debug(...items: any[]) {\r\n\t\tconsole.debug(...items);\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes `Console.prototype.error`\r\n\t *\r\n\t * @param items list of items to log\r\n\t */\r\n\tpublic $error(...items: any[]) {\r\n\t\tconsole.error(...items);\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes `Console.prototype.info`\r\n\t *\r\n\t * @param items list of items to log\r\n\t */\r\n\tpublic $info(...items: any[]) {\r\n\t\tconsole.info(...items);\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes `Console.prototype.warn`\r\n\t *\r\n\t * @param items list of items to log\r\n\t */\r\n\tpublic $warn(...items: any[]) {\r\n\t\tconsole.warn(...items);\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes `Console.prototype.log`\r\n\t *\r\n\t * @param items list of items to log\r\n\t */\r\n\tpublic $log(...items: any[]) {\r\n\t\tconsole.log(...items);\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes `Console.prototype.log`\r\n\t *\r\n\t * @param items list of items to log\r\n\t */\r\n\tpublic $success(...items: any[]) {\r\n\t\tthis.$log(...items);\r\n\t}\r\n}\r\n// tslint:enable:no-console\r\n\r\nexport class NgLogger extends NgConsole {\r\n\tprotected readonly container: HTMLDivElement;\r\n\tprotected readonly toasts: NgToast[] = [];\r\n\r\n\tconstructor(private $renderer: NgRenderer, private readonly isProd = false) {\r\n\t\tsuper();\r\n\r\n\t\tthis.container = this.$renderer.createHtmlElement('div', ['position-fixed']);\r\n\t\tthis.container.style.setProperty('top', '0.5rem');\r\n\t\tthis.container.style.setProperty('right', '-1.5rem');\r\n\t\tthis.container.style.setProperty('width', '100%');\r\n\t\tthis.container.style.setProperty('max-width', '23rem');\r\n\r\n\t\tdocument.body.appendChild(this.container);\r\n\t}\r\n\r\n\t/**\r\n\t * Clear all active notifications\r\n\t */\r\n\tpublic clear() {\r\n\t\tthis.toasts.forEach(x => x.hide());\r\n\t}\r\n\r\n\t/**\r\n\t * Prompt the user to confirm intent for a previous action\r\n\t *\r\n\t * @param msg Confirmation message\r\n\t */\r\n\tpublic confirm(msg = 'Please confirm your action') {\r\n\t\tconst okBtn = this.$renderer.createHtmlElement('button', ['btn', 'w-50', 'btn-success', 'rounded-0']);\r\n\t\tokBtn.innerText = 'Yes';\r\n\t\tconst cancelBtn = this.$renderer.createHtmlElement('button', ['btn', 'w-50', 'btn-dark', 'rounded-0']);\r\n\t\tcancelBtn.innerText = 'No';\r\n\r\n\t\tconst footer = this.$renderer.createHtmlElement('div', ['w-100']);\r\n\t\tfooter.appendChild(cancelBtn);\r\n\t\tfooter.appendChild(okBtn);\r\n\r\n\t\tconst toast = this.notify(msg, '$log', false);\r\n\t\ttoast.appendChild(footer);\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst removeListeners = () => {\r\n\t\t\t\tokBtn.removeEventListener('click', ok);\r\n\t\t\t\tcancelBtn.removeEventListener('click', cancel);\r\n\t\t\t};\r\n\r\n\t\t\tconst ok = () => {\r\n\t\t\t\ttoast.hide();\r\n\t\t\t\tremoveListeners();\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\r\n\t\t\tconst cancel = () => {\r\n\t\t\t\ttoast.hide();\r\n\t\t\t\tremoveListeners();\r\n\t\t\t\treject();\r\n\t\t\t};\r\n\r\n\t\t\tokBtn.addEventListener('click', ok);\r\n\t\t\tcancelBtn.addEventListener('click', cancel);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Display an error notification\r\n\t *\r\n\t * @param text Display text\r\n\t * @param isTemporary Whether the notification should disappear automatically (false by default)\r\n\t */\r\n\tpublic error(text: string, isTemporary = false) {\r\n\t\tthis.notify(text, '$error', isTemporary && undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Display an informational notification\r\n\t *\r\n\t * @param text Display text\r\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\r\n\t */\r\n\tpublic info(text: string, isTemporary = true) {\r\n\t\tthis.notify(text, '$info', isTemporary && undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Display a success notification\r\n\t *\r\n\t * @param text Display text\r\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\r\n\t */\r\n\tpublic success(text: string, isTemporary = true) {\r\n\t\tthis.notify(text, '$success', isTemporary && undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Display a warning notification\r\n\t *\r\n\t * @param text Display text\r\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\r\n\t */\r\n\tpublic warning(text: string, isTemporary = true) {\r\n\t\tthis.notify(text, '$warn', isTemporary && undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Display a warning notification (disabled when `process.env.NODE_ENV === 'production'`)\r\n\t *\r\n\t * @param text Display text\r\n\t */\r\n\tpublic devWarning(text: string) {\r\n\t\tif (this.isProd === false) {\r\n\t\t\tthis.warning(`[DEV] ${text}`, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Show a customizable notification to the user\r\n\t *\r\n\t * @param text Display text\r\n\t * @param type Display type\r\n\t * @param timeout Length in ms before notification disappears (`false` to set permanently)\r\n\t * @param buttons Interaction points for the user\r\n\t */\r\n\tpublic notify(text: string, type: LogType, timeout: false | number = 2323) {\r\n\t\tthis[type](`${type}: ${text}`);\r\n\r\n\t\tconst toast = new NgToast(this.$renderer, { text, type, container: this.container });\r\n\t\ttoast.show(timeout).then(() => {\r\n\t\t\tconst index = this.toasts.findIndex(x => Object.is(x, toast));\r\n\t\t\tthis.toasts.splice(index, 1);\r\n\t\t});\r\n\r\n\t\tthis.toasts.push(toast);\r\n\t\treturn toast;\r\n\t}\r\n}\r\n","import { Indexed } from '@ledge/types';\r\nimport { NgInputController, NgInputOptions } from './shared';\r\n\r\nclass TextInputController extends NgInputController {\r\n\tprivate min: number | undefined;\r\n\tprivate max: number | undefined;\r\n\r\n\tpublic $onInit() {\r\n\t\tconst { type, minlength } = this.$attrs;\r\n\r\n\t\tif (type === 'number') {\r\n\t\t\tthis.ngModelCtrl.$validators.minVal = val => {\r\n\t\t\t\treturn this.min == null || val >= this.min;\r\n\t\t\t};\r\n\t\t\tthis.ngModelCtrl.$validators.maxVal = val => {\r\n\t\t\t\treturn this.max == null || val <= this.max;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (minlength != null) {\r\n\t\t\tthis.ngModelCtrl.$validators.pattern = val => {\r\n\t\t\t\treturn val != null && val.length >= minlength;\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst validators: Indexed<string> = {\r\n\tminVal: 'Must be greater than or equal to {{$ctrl.min}}',\r\n\tmaxVal: 'Must be less than or equal to {{$ctrl.max}}',\r\n};\r\n\r\nexport const textInput: NgInputOptions = {\r\n\ttype: 'input',\r\n\tcanHaveIcon: true,\r\n\tattrs: { maxlength: 3000, placeholder: '' },\r\n\trender(h) {\r\n\t\tconst { type, minlength } = this.$attrs;\r\n\r\n\t\tconst input = h.createInput(type);\r\n\r\n\t\tconst isRange = type === 'range';\r\n\t\tif (type === 'number' || isRange) {\r\n\t\t\tinput.setAttribute('ng-attr-min', '{{$ctrl.min}}');\r\n\t\t\tinput.setAttribute('ng-attr-max', '{{$ctrl.max}}');\r\n\t\t\tinput.setAttribute('ng-attr-step', `{{$ctrl.step || '${isRange ? 1 : 'any'}'}}`);\r\n\t\t}\r\n\r\n\t\tif (minlength != null) {\r\n\t\t\tinput.setAttribute('pattern', `.{${minlength},}`);\r\n\t\t\tvalidators.pattern = `Input must be at least ${minlength} characters`;\r\n\t\t}\r\n\r\n\t\treturn input;\r\n\t},\r\n\tpostRender(h) {\r\n\t\tif (this.$attrs.type === 'range') {\r\n\t\t\tconst text = h.createHtmlElement('p', ['text-center', 'lead']);\r\n\t\t\ttext.textContent = '{{$ctrl.ngModel}}';\r\n\t\t\tthis.$template.appendChild(text);\r\n\t\t}\r\n\t\treturn this.$template;\r\n\t},\r\n\tbindings: {\r\n\t\tmin: '<',\r\n\t\tmax: '<',\r\n\t\tstep: '<',\r\n\t},\r\n\tvalidators,\r\n\tcontroller: TextInputController,\r\n};\r\n\r\nexport const htmlInput = Object.assign({ }, textInput);\r\n","import { checkBox } from './check-box';\r\nimport { dateInput } from './date-input';\r\nimport { radioList } from './radio-list';\r\nimport { selectList } from './select-list';\r\nimport { textBox } from './text-box';\r\nimport { htmlInput, textInput } from './text-input';\r\n\r\nexport const inputs = {\r\n\tcheckBox,\r\n\tdateInput,\r\n\tradioList,\r\n\tselectList,\r\n\ttextBox,\r\n\thtmlInput,\r\n\ttextInput,\r\n};\r\n\r\nexport * from './shared';\r\n","export * from './controller';\r\nexport * from './options';\r\nexport * from './service';\r\n","import { NgController, app } from '../../index';\n\nclass ModalController extends NgController {\n\tpublic title = 'Example Modal';\n\tpublic body = 'Body';\n}\n\nclass AppController extends NgController {\n\tpublic openModal() {\n\t\tapp.modal.open({\n\t\t\tcontroller: ModalController,\n\t\t\ttitle: '{{$ctrl.title}}',\n\t\t\ttemplate: '<p class=\"lead\">{{$ctrl.body}}</p>',\n\t\t});\n\t}\n\n\tpublic openConfirmToast() {\n\t\tthis.$log.confirm('Yes or No?')\n\t\t\t.then(() => this.$log.success('Yes!'))\n\t\t\t.catch(() => this.$log.info('No...'));\n\t}\n}\n\napp\n\t.module\n\t.controller(\n\t\t'AppController',\n\t\tapp.makeComponentController(AppController),\n\t);\n\napp\n\t.configure({ API_HOST: 'api.ng-app.js.org' })\n\t.bootstrap()\n\t.then(() => {\n\t\tapp.log.success('Welcome... to The World...');\n\t});\n","import { Indexed } from '@ledge/types';\nimport { StateService } from '@uirouter/core';\nimport { StateProvider } from '@uirouter/angularjs';\nimport { autobind } from 'core-decorators';\n\nimport { Injector } from '@angular/core';\n\nimport { NgController, makeNg1Controller } from './controller';\nimport { NgHttp, NgHttpInterceptor, NgHttpOptions } from './http';\nimport { InputService, NgInputOptions } from './inputs';\nimport { NgConsole, NgLogger } from './logger';\nimport { NgModal } from './modal';\nimport { NgInjector, bootstrap, injector, module } from './ng';\nimport { NgAppConfig, NgComponentOptions } from './options';\nimport { NgRenderer } from './renderer';\nimport { NgRouter } from './router';\nimport { NgService } from './service';\n\n@autobind\nexport class NgApp extends NgService {\n\tpublic get module() {\n\t\treturn this.$module;\n\t}\n\n\tpublic get router() {\n\t\treturn this.$router;\n\t}\n\n\tpublic get components() {\n\t\treturn new Set(this.$components.keys());\n\t}\n\n\tpublic get dependencies() {\n\t\treturn new Set(this.$dependencies);\n\t}\n\n\tpublic get state() {\n\t\treturn this.$injector.get<StateService>('$state');\n\t}\n\n\tpublic get config() {\n\t\treturn this.$injector2.get<NgAppConfig>(NgAppConfig);\n\t}\n\n\tpublic get http() {\n\t\treturn this.$injector2.get<NgHttp>(NgHttp);\n\t}\n\n\tpublic get console() {\n\t\treturn this.$injector2.get<NgConsole>(NgConsole);\n\t}\n\n\tpublic get log() {\n\t\treturn this.$injector2.get<NgLogger>(NgLogger);\n\t}\n\n\tpublic get modal() {\n\t\treturn this.$injector2.get<NgModal>(NgModal);\n\t}\n\n\tpublic get renderer() {\n\t\treturn this.$injector2.get<NgRenderer>(NgRenderer);\n\t}\n\n\tpublic readonly $id = '$core';\n\tpublic readonly $injector = injector(['ng']);\n\tpublic readonly $injector2 = Injector.create({\n\t\tname: this.$id,\n\t\tproviders: [\n\t\t\t{ provide: HTMLDocument, useValue: document },\n\t\t\t{ provide: NgAppConfig, useFactory: () => this.$config, deps: [] },\n\t\t\t{ provide: NgRenderer, deps: [HTMLDocument] },\n\t\t\t{ provide: NgConsole, deps: [] },\n\t\t\t{\n\t\t\t\tprovide: NgLogger,\n\t\t\t\tuseFactory: (r: NgRenderer, c: NgAppConfig) =>\n\t\t\t\t\tnew NgLogger(r, c.IS_PROD),\n\t\t\t\tdeps: [NgRenderer, NgAppConfig],\n\t\t\t},\n\t\t\t{\n\t\t\t\tprovide: NgHttpOptions,\n\t\t\t\tuseFactory: (config: NgAppConfig) =>\n\t\t\t\t\tnew NgHttpOptions(config, {\n\t\t\t\t\t\tinterceptors: this.$httpInterceptors,\n\t\t\t\t\t\tonFinally: this.forceUpdate,\n\t\t\t\t\t}),\n\t\t\t\tdeps: [NgAppConfig],\n\t\t\t},\n\t\t\t{ provide: NgHttp, deps: [NgHttpOptions] },\n\t\t\t{\n\t\t\t\tprovide: NgModal,\n\t\t\t\tdeps: [NgRenderer, NgLogger, NgHttp, NgAppConfig],\n\t\t\t\tuseFactory: (r: NgRenderer, l: NgLogger, h: NgHttp, c: NgAppConfig) =>\n\t\t\t\t\tnew NgModal(r, l, h, c, this.$injector),\n\t\t\t},\n\t\t],\n\t});\n\n\tprotected readonly $components = new Map<string, NgComponentOptions>();\n\tprotected readonly $httpInterceptors: NgHttpInterceptor[] = [];\n\tprotected readonly $dependencies: string[] = [];\n\n\tprotected readonly $module = module(this.$id, this.$dependencies);\n\tprotected readonly $bootstrap = bootstrap;\n\n\tprotected $router: NgRouter;\n\tprotected $config: NgAppConfig;\n\n\tconstructor(config: Partial<NgAppConfig>) {\n\t\tsuper();\n\n\t\tthis\n\t\t\t.configure(config)\n\t\t\t.$module\n\t\t\t.config([\n\t\t\t\t'$compileProvider',\n\t\t\t\t'$locationProvider',\n\t\t\t\t'$qProvider',\n\t\t\t\t(\n\t\t\t\t\t$compileProvider: {\n\t\t\t\t\t\tdebugInfoEnabled(active: boolean): any;\n\t\t\t\t\t\tcommentDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t\tcssClassDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$locationProvider: {\n\t\t\t\t\t\thtml5Mode(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$qProvider: {\n\t\t\t\t\t\terrorOnUnhandledRejections(active: boolean): any,\n\t\t\t\t\t},\n\t\t\t\t) => {\n\t\t\t\t\tconst { IS_DEV, IS_STAGING } = this.$config;\n\n\t\t\t\t\t$compileProvider.debugInfoEnabled(!!(IS_DEV || IS_STAGING));\n\t\t\t\t\t$compileProvider.commentDirectivesEnabled(false);\n\t\t\t\t\t$compileProvider.cssClassDirectivesEnabled(false);\n\n\t\t\t\t\t$locationProvider.html5Mode(true);\n\t\t\t\t\t$qProvider.errorOnUnhandledRejections(false);\n\t\t\t\t},\n\t\t\t])\n\t\t\t.config(['$stateProvider', ($stateProvider: StateProvider) => {\n\t\t\t\tif (this.router == null) {\n\t\t\t\t\treturn this.log.$warn('No router. Use `app.setRouter(r)` to disable this warning.');\n\t\t\t\t}\n\n\t\t\t\tfor (const definition of this.router.getRoutes()) {\n\t\t\t\t\t$stateProvider.state(definition);\n\t\t\t\t}\n\t\t\t}])\n\t\t\t.run([\n\t\t\t\t'$injector',\n\t\t\t\t'$animate',\n\t\t\t\t(\n\t\t\t\t\t$injector: NgInjector,\n\t\t\t\t\t$animate: {\n\t\t\t\t\t\tenabled(active: boolean): any,\n\t\t\t\t\t},\n\t\t\t\t) => {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tthis.$injector = $injector;\n\t\t\t\t\t$animate.enabled(true);\n\t\t\t\t},\n\t\t\t]);\n\t}\n\n\t/**\n\t * Force the application to run an update cycle\n\t */\n\tpublic async forceUpdate() {\n\t\tthis.$injector.get('$rootScope').$applyAsync();\n\t}\n\n\tpublic async bootstrap({ strictDi }: { strictDi?: boolean; } = { strictDi: true }) {\n\t\tfor (const [name, definition] of this.$components) {\n\t\t\tthis.$module.component(name, definition);\n\t\t}\n\t\tif (this.$router == null) {\n\t\t\tthis.$router = new (class extends NgRouter { })();\n\t\t}\n\n\t\tsetTimeout(() => document.body.classList.add('bootstrapped'));\n\t\treturn this.$bootstrap(document.body, [this.$id], { strictDi });\n\t}\n\n\tpublic configure(config: Partial<NgAppConfig>) {\n\t\tthis.$config = new NgAppConfig(config);\n\t\treturn this;\n\t}\n\n\tpublic setRouter(router: NgRouter) {\n\t\tthis.$router = router;\n\t\treturn this;\n\t}\n\n\tpublic addComponents(components: Map<string, NgComponentOptions> | Indexed<NgComponentOptions>) {\n\t\tconst entries =\n\t\t\tcomponents instanceof Map\n\t\t\t\t? components.entries()\n\t\t\t\t: Object.entries(components);\n\n\t\tfor (let [name, component] of entries) {\n\t\t\tif (this.isInputComponent(component)) {\n\t\t\t\tcomponent = InputService.defineInputComponent(component);\n\t\t\t}\n\n\t\t\tif (typeof component.controller === 'function') {\n\t\t\t\tcomponent.controller = this.makeComponentController(component.controller);\n\t\t\t}\n\n\t\t\tthis.$components.set(name, component);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic isInputComponent(\n\t\tcomponent: NgComponentOptions & { type?: 'input' },\n\t): component is NgInputOptions {\n\t\treturn component.type === 'input';\n\t}\n\n\tpublic addDependencies(...moduleNames: string[]) {\n\t\tthis.$dependencies.push(...moduleNames);\n\t\treturn this;\n\t}\n\n\tpublic addHttpInterceptor(interceptor: NgHttpInterceptor) {\n\t\tthis.$httpInterceptors.push(interceptor);\n\t\treturn this;\n\t}\n\n\tpublic makeComponentController<T extends NgController>(rawCtrl: new () => T) {\n\t\tconst controller = [\n\t\t\t'$element',\n\t\t\t'$scope',\n\t\t\t'$injector',\n\t\t\tmakeNg1Controller<T>(rawCtrl, {\n\t\t\t\tlog: this.log,\n\t\t\t\thttp: this.http,\n\t\t\t\trenderer: this.renderer,\n\t\t\t\tconfig: () => this.config,\n\t\t\t}),\n\t\t] as const;\n\n\t\ttype Writeable<Y> = { -readonly [P in keyof Y]-?: Y[P] };\n\t\treturn controller as Writeable<typeof controller>;\n\t}\n}\n","import flatpickr from 'flatpickr';\r\nimport { NgInputController, NgInputOptions } from './shared';\r\n\r\nfunction isNumber(n: any): n is number {\r\n\treturn Number.isInteger(n);\r\n}\r\n\r\nclass DateInputController extends NgInputController {\r\n\tprivate readonly SUPPORTED_MODES = ['single', 'multiple', 'range'];\r\n\tprivate minDate?: Date | number | string;\r\n\tprivate maxDate?: Date | number | string;\r\n\tprivate flatpickr: flatpickr.Instance;\r\n\r\n\tpublic $onInit() {\r\n\t\tthis.ngModelCtrl.$validators.minDate = modelVal => {\r\n\t\t\tif (modelVal != null) {\r\n\t\t\t\tif (isNumber(this.minDate)) {\r\n\t\t\t\t\treturn this.minDate <= modelVal.valueOf();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.minDate instanceof Date) {\r\n\t\t\t\t\treturn this.minDate.valueOf() <= modelVal.valueOf();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tthis.ngModelCtrl.$validators.maxDate = modelVal => {\r\n\t\t\tif (modelVal != null) {\r\n\t\t\t\tif (isNumber(this.maxDate)) {\r\n\t\t\t\t\treturn this.maxDate >= modelVal.valueOf();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.maxDate instanceof Date) {\r\n\t\t\t\t\treturn this.maxDate.valueOf() >= modelVal.valueOf();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tconst { inline, mode = 'single' } = this.$attrs;\r\n\t\tif (this.SUPPORTED_MODES.includes(mode) === false) {\r\n\t\t\tthis.$log.devWarning(`Unsupported date-input \\`mode\\` ('${mode}') for #${this.$element.id}. Expected one of ${this.SUPPORTED_MODES.join(', ')}.`);\r\n\t\t}\r\n\r\n\t\tthis.flatpickr = flatpickr(this.$element, {\r\n\t\t\tdateFormat: 'M n Y (l)',\r\n\t\t\tdefaultDate: this.ngModel,\r\n\t\t\tinline: inline === 'true',\r\n\t\t\tmode,\r\n\t\t\tnextArrow: '&raquo;',\r\n\t\t\tprevArrow: '&laquo;',\r\n\t\t\tallowInput: true,\r\n\t\t\tweekNumbers: true,\r\n\t\t\twrap: true,\r\n\t\t\tenable: [\r\n\t\t\t\td => {\r\n\t\t\t\t\tconst maxDate = Date.parse(this.maxDate as any);\r\n\t\t\t\t\treturn Number.isNaN(maxDate) || d.valueOf() < maxDate;\r\n\t\t\t\t},\r\n\t\t\t\td => {\r\n\t\t\t\t\tconst minDate = Date.parse(this.minDate as any);\r\n\t\t\t\t\treturn Number.isNaN(minDate) || d.valueOf() > minDate;\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tonChange: selected => {\r\n\t\t\t\tthis.ngModel = selected.length > 1\r\n\t\t\t\t\t? selected\r\n\t\t\t\t\t: selected[0];\r\n\r\n\t\t\t\tthis.$scope.$applyAsync();\r\n\t\t\t},\r\n\t\t}) as flatpickr.Instance;\r\n\t}\r\n\r\n\tpublic $onDestroy() {\r\n\t\tif (this.flatpickr != null && typeof this.flatpickr.destroy === 'function') {\r\n\t\t\tthis.flatpickr.destroy();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getMinDate() {\r\n\t\treturn new Date(this.minDate as number).toLocaleDateString();\r\n\t}\r\n\r\n\tpublic getMaxDate() {\r\n\t\treturn new Date(this.maxDate as number).toLocaleDateString();\r\n\t}\r\n}\r\n\r\nexport const dateInput: NgInputOptions = {\r\n\ttype: 'input',\r\n\trender(h) {\r\n\t\tconst input = h.createInput('text');\r\n\r\n\t\t// flatpickr requires control of the input element\r\n\t\tinput.removeAttribute('ng-model');\r\n\t\tinput.setAttribute('data-input', 'true');\r\n\r\n\t\tconst iconInput = h.createIconInput(input, 'calendar', [\r\n\t\t\t['data-toggle', 'true'],\r\n\t\t\t['style', 'cursor: pointer;'],\r\n\t\t]);\r\n\r\n\t\tconst inputGroupAppend = h.createHtmlElement('div', ['input-group-append']);\r\n\t\tinputGroupAppend.setAttribute('data-clear', 'true');\r\n\t\tinputGroupAppend.style.setProperty('cursor', 'pointer');\r\n\r\n\t\tconst inputGroupText = h.createHtmlElement('span', ['input-group-text']);\r\n\t\tconst clearIcon = h.createIcon('x');\r\n\r\n\t\tinputGroupText.appendChild(clearIcon);\r\n\t\tinputGroupAppend.appendChild(inputGroupText);\r\n\t\ticonInput.appendChild(inputGroupAppend);\r\n\r\n\t\treturn iconInput;\r\n\t},\r\n\tbindings: {\r\n\t\tminDate: '<',\r\n\t\tmaxDate: '<',\r\n\t},\r\n\tvalidators: {\r\n\t\tminDate: 'Date must be on or after {{$ctrl.getMinDate()}}',\r\n\t\tmaxDate: 'Date must be on or before {{$ctrl.getMaxDate()}}',\r\n\t},\r\n\tcontroller: DateInputController,\r\n};\r\n","import { NgController, makeNg1Controller } from './controller';\r\nimport { NgLogger } from './logger';\r\nimport { NgService } from './service';\r\nimport { NgHttp } from './http';\r\nimport { NgAppConfig } from './options';\r\nimport { NgRenderer } from './renderer';\r\nimport { NgInjector, NgScope } from './ng';\r\n\r\nexport class NgModal extends NgService {\r\n\tprotected readonly backdrop: HTMLDivElement;\r\n\tprotected readonly container: HTMLDivElement;\r\n\tprotected readonly content: HTMLDivElement;\r\n\tprotected readonly dialog: HTMLDivElement;\r\n\tprotected readonly header: HTMLDivElement;\r\n\tprotected readonly headerCloseButton: HTMLButtonElement;\r\n\tprotected readonly title: HTMLHeadingElement;\r\n\tprotected readonly body: HTMLDivElement;\r\n\tprotected readonly footer: HTMLDivElement;\r\n\tprotected readonly footerCancelButton: HTMLButtonElement;\r\n\tprotected readonly footerOkButton: HTMLButtonElement;\r\n\r\n\tprotected readonly $compile: (element: Element) => (scope: NgScope) => { [i: number]: HTMLElement };\r\n\tprotected readonly $rootScope: NgScope;\r\n\r\n\tconstructor(\r\n\t\tprotected readonly $renderer: NgRenderer,\r\n\t\tprotected readonly $log: NgLogger,\r\n\t\tprotected readonly $http: NgHttp,\r\n\t\tprotected readonly $config: NgAppConfig,\r\n\t\tprotected readonly $injector: NgInjector,\r\n\t) {\r\n\t\tsuper();\r\n\r\n\t\tthis.$compile = this.$injector.get('$compile');\r\n\t\tthis.$rootScope = this.$injector.get('$rootScope');\r\n\r\n\t\tthis.backdrop = this.$renderer.createHtmlElement('div', ['modal-backdrop', 'fade']);\r\n\t\tthis.title = this.$renderer.createHtmlElement('h5', ['modal-title'], [['id', `modal-title-${this.uniqueId}`]]);\r\n\r\n\t\tthis.headerCloseButton = this.$renderer.createHtmlElement('button', ['close'], [['type', 'button'], ['aria-label', 'close']]);\r\n\t\tthis.headerCloseButton.innerHTML = '&times;';\r\n\r\n\t\tthis.header = this.$renderer.createHtmlElement('div', ['modal-header']);\r\n\t\tthis.body = this.$renderer.createHtmlElement('div', ['modal-body']);\r\n\t\tthis.footer = this.$renderer.createHtmlElement('div', ['modal-footer']);\r\n\t\tthis.content = this.$renderer.createHtmlElement('div', ['modal-content']);\r\n\r\n\t\tthis.header.appendChild(this.title);\r\n\t\tthis.header.appendChild(this.headerCloseButton);\r\n\r\n\t\tthis.content.appendChild(this.header);\r\n\t\tthis.content.appendChild(this.body);\r\n\t\tthis.content.appendChild(this.footer);\r\n\r\n\t\tthis.footerCancelButton = this.$renderer.createHtmlElement('button', ['btn', 'btn-info'], [['type', 'button']]);\r\n\t\tthis.footerOkButton = this.$renderer.createHtmlElement('button', ['btn', 'btn-success'], [['type', 'button']]);\r\n\r\n\t\tthis.footer.appendChild(this.footerCancelButton);\r\n\t\tthis.footer.appendChild(this.footerOkButton);\r\n\r\n\t\tthis.dialog = this.$renderer.createHtmlElement('div', ['modal-dialog'], [['role', 'document']]);\r\n\t\tthis.dialog.appendChild(this.content);\r\n\r\n\t\tthis.container = this.$renderer.createHtmlElement('div', ['fade', 'modal'], [\r\n\t\t\t['aria-hidden', 'true'],\r\n\t\t\t['aria-labelledby', 'modal-title'],\r\n\t\t\t['role', 'dialog'],\r\n\t\t\t['tabindex', '-1'],\r\n\t\t]);\r\n\t\tthis.container.appendChild(this.dialog);\r\n\r\n\t\tdocument.body.appendChild(this.container);\r\n\t}\r\n\r\n\tpublic open<T extends typeof NgController>(options: NgModalOptions<T> = { }) {\r\n\t\tconst { $log } = this;\r\n\t\tconst {\r\n\t\t\ttitle = 'Set the <code>title</code> property to replace me :)',\r\n\t\t\ttemplate = '<p class=\"lead\">Set the <code>template</code> property to replace me :)</p>',\r\n\t\t\tcontroller = NgController,\r\n\t\t\tonClose = () => {\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t} = options;\r\n\r\n\t\tconst defaultCancelBtnText = 'Cancel';\r\n\t\tconst defaultOkBtnText = 'Ok';\r\n\t\tlet {\r\n\t\t\tcancelBtnText = defaultCancelBtnText,\r\n\t\t\tokBtnText = defaultOkBtnText,\r\n\t\t} = options;\r\n\r\n\t\tif (cancelBtnText !== false) {\r\n\t\t\tif (cancelBtnText === true) {\r\n\t\t\t\tcancelBtnText = defaultCancelBtnText;\r\n\t\t\t}\r\n\t\t\tthis.footerCancelButton.innerText = cancelBtnText;\r\n\t\t}\r\n\t\tif (okBtnText !== false) {\r\n\t\t\tif (okBtnText === true) {\r\n\t\t\t\tokBtnText = defaultOkBtnText;\r\n\t\t\t}\r\n\t\t\tthis.footerOkButton.innerText = okBtnText;\r\n\t\t}\r\n\r\n\t\tthis.title.innerHTML = typeof title === 'function' ? title() : title;\r\n\t\tthis.body.innerHTML =\r\n\t\t\ttypeof template === 'function' ? template() : template;\r\n\r\n\t\tconst $scope = this.$rootScope.$new(true) as Parameters<NgModal['hide']>[1];\r\n\t\tconst $element = this.$compile(this.container)($scope);\r\n\t\tconst $ctrl = makeNg1Controller(controller, {\r\n\t\t\tlog: this.$log,\r\n\t\t\thttp: this.$http,\r\n\t\t\trenderer: this.$renderer,\r\n\t\t\tconfig: () => this.$config,\r\n\t\t});\r\n\r\n\t\t$scope.$ctrl = new $ctrl($element, $scope, this.$injector) as NgController;\r\n\t\t$scope.$applyAsync();\r\n\r\n\t\tconst escapeKeyListener = (e: KeyboardEvent) => {\r\n\t\t\tif (e.key === 'Escape' || e.key === 'Esc') {\r\n\t\t\t\tclose();\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst dismiss = () => {\r\n\t\t\tremoveEventListeners();\r\n\t\t\tthis.hide(escapeKeyListener, $scope);\r\n\t\t};\r\n\r\n\t\tthis.show(escapeKeyListener);\r\n\r\n\t\tconst removeEventListeners = () => {\r\n\t\t\tthis.headerCloseButton.removeEventListener('click', dismiss);\r\n\t\t\tthis.footerCancelButton.removeEventListener('click', dismiss);\r\n\t\t\tthis.footerOkButton.removeEventListener('click', close);\r\n\t\t\tthis.backdrop.removeEventListener('click', close);\r\n\t\t};\r\n\r\n\t\tconst close = () => {\r\n\t\t\tif (onClose.call({ $log }, controller as T)) {\r\n\t\t\t\tdismiss();\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.headerCloseButton.addEventListener('click', dismiss);\r\n\t\tthis.footerCancelButton.addEventListener('click', dismiss);\r\n\t\tthis.footerOkButton.addEventListener('click', close);\r\n\t\tthis.backdrop.addEventListener('click', close);\r\n\r\n\t\treturn { close, dismiss };\r\n\t}\r\n\r\n\tprotected show(escapeKeyListener: (e: KeyboardEvent) => void) {\r\n\t\tthis.backdrop.style.setProperty('display', 'block');\r\n\r\n\t\tthis.container.style.setProperty('display', 'block');\r\n\t\tthis.container.classList.remove('show');\r\n\t\tthis.container.removeAttribute('aria-hidden');\r\n\t\tthis.container.setAttribute('aria-modal', 'true');\r\n\t\tthis.container.style.setProperty('padding-right', '17px');\r\n\t\tthis.container.style.setProperty('pointer-events', 'none');\r\n\r\n\t\twindow.addEventListener('keydown', escapeKeyListener);\r\n\t\tdocument.body.appendChild(this.backdrop);\r\n\t\tdocument.body.classList.add('modal-open');\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.backdrop.classList.add('show');\r\n\t\t\tthis.container.classList.add('show');\r\n\t\t}, 23);\r\n\t}\r\n\r\n\tprotected hide(\r\n\t\tescapeKeyListener: (e: KeyboardEvent) => void,\r\n\t\tscope: NgScope & { $ctrl: NgController; },\r\n\t) {\r\n\t\tthis.backdrop.classList.remove('show');\r\n\t\tthis.container.classList.remove('show');\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.container.style.setProperty('display', 'none');\r\n\t\t\tthis.backdrop.style.setProperty('display', 'none');\r\n\t\t}, 150);\r\n\r\n\t\tscope.$destroy();\r\n\t\twindow.removeEventListener('keydown', escapeKeyListener);\r\n\t\tdocument.body.classList.remove('modal-open');\r\n\t}\r\n}\r\n\r\nexport interface NgModalOptions<T extends typeof NgController> {\r\n\t/**\r\n\t * String representing the modal's title\r\n\t */\r\n\ttitle?: string | (() => string);\r\n\r\n\t/**\r\n\t * Inline template representing the modal's content\r\n\t */\r\n\ttemplate?: string | (() => string);\r\n\r\n\t/**\r\n\t * Ok button text (false to hide)\r\n\t */\r\n\tokBtnText?: string | boolean;\r\n\r\n\t/**\r\n\t * Cancel button text (false to hide, true for default)\r\n\t */\r\n\tcancelBtnText?: string | boolean;\r\n\r\n\t/**\r\n\t * A controller for a modal instance.\r\n\t */\r\n\tcontroller?: T;\r\n\r\n\tonClose?(this: { $log: NgLogger }, controller: T): boolean;\r\n}\r\n","import { PatchPayload } from '@ledge/types/patch';\nimport { NgService } from './service';\nimport { NgAppConfig } from './options';\n\nexport interface NgHttpInterceptor {\n\trequest?(config: Request): Request | Promise<Request>;\n\tresponse?(response: any): any;\n\tresponseError?<T extends Error>(response: Response, err: T): void;\n}\n\nexport class NgHttpOptions implements NgHttpInit {\n\tpublic host = this.config.API_HOST;\n\tpublic timeout = 10000;\n\n\tpublic ssl = location.protocol === 'https:';\n\tpublic keepalive = false;\n\n\tpublic cache = 'no-store' as const;\n\tpublic credentials = 'include' as const;\n\tpublic mode = 'cors' as const;\n\tpublic redirect = 'manual' as const;\n\tpublic referrerPolicy = 'origin-when-cross-origin' as const;\n\n\tpublic interceptors: NgHttpInterceptor[];\n\tpublic body?: BodyInit | null;\n\tpublic headers?: HeadersInit;\n\tpublic integrity?: string;\n\tpublic method?: string;\n\tpublic window?: any;\n\n\tpublic referrer?: never;\n\tpublic signal?: never;\n\n\tpublic onFinally: () => void;\n\n\tconstructor(private config: NgAppConfig, init: NgHttpInit) {\n\t\tfor (const [key, value] of Object.entries(init)) {\n\t\t\tif (typeof value === typeof this[key as keyof NgHttpOptions]) {\n\t\t\t\tthis[key as keyof NgHttpOptions] = value;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// tslint:disable:no-redundant-jsdoc\nexport interface NgHttpInit extends RequestInit {\n\t/**\n\t * @default `location.host`\n\t */\n\thost?: string;\n\n\t/**\n\t * If true, use `https://`. Otherwise, use `http://`\n\t * @default false\n\t */\n\tssl?: boolean;\n\n\t/**\n\t * How many milliseconds to wait before aborting the request\n\t * @default 10000\n\t */\n\ttimeout?: number;\n\n\tinterceptors?: NgHttpInterceptor[];\n\n\t/**\n\t * Unsupported\n\t */\n\treferrer?: never;\n\n\t/**\n\t * Unsupported\n\t */\n\tsignal?: never;\n\n\tonFinally?(): void;\n}\n// tslint:enable:no-redundant-jsdoc\n\nexport type NgRequestInterceptor = (config: Request) => Request | Promise<Request>;\nexport type NgResponseInterceptor = (response: any) => any;\nexport type NgResponseErrorInterceptor = <T extends Error>(response: Response, err: T) => void;\n\nexport class NgHttp extends NgService {\n\tprivate interceptors: {\n\t\trequest: NgRequestInterceptor[];\n\t\tresponse: NgResponseInterceptor[];\n\t\tresponseError: NgResponseErrorInterceptor[];\n\t};\n\n\tconstructor(private options: NgHttpInit) {\n\t\tsuper();\n\t\tconst { interceptors = [] } = options;\n\n\t\tthis.interceptors = {\n\t\t\trequest: interceptors\n\t\t\t\t.map(x => x.request)\n\t\t\t\t.filter(x => typeof x === 'function') as NgRequestInterceptor[],\n\n\t\t\tresponse: interceptors\n\t\t\t\t.map(x => x.response)\n\t\t\t\t.filter(x => typeof x === 'function') as NgResponseInterceptor[],\n\n\t\t\tresponseError: interceptors\n\t\t\t\t.map(x => x.responseError)\n\t\t\t\t.filter(x => typeof x === 'function') as NgResponseErrorInterceptor[],\n\t\t};\n\t}\n\n\tpublic async Get<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'GET');\n\t}\n\n\tpublic async Post<T = any>(url: string, data: any = null) {\n\t\treturn this.fetch<T>(url, 'POST', data);\n\t}\n\n\tpublic async Patch<T = any>(url: string, data: PatchPayload) {\n\t\treturn this.fetch<T>(url, 'PATCH', data);\n\t}\n\n\tpublic async Put<T = any>(url: string, data: T) {\n\t\treturn this.fetch(url, 'PUT', data);\n\t}\n\n\tpublic async Delete<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'DELETE');\n\t}\n\n\tpublic async Jsonp<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'JSONP');\n\t}\n\n\tpublic getFullUrl(uri: string, host: string, ssl: boolean) {\n\t\treturn new URL(`http${ssl ? 's' : ''}://${host}/${uri}`).toJSON();\n\t}\n\n\tprivate async fetch<T>(\n\t\turi: string,\n\t\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE' | 'JSONP',\n\t\tdata?: any,\n\t) {\n\t\tlet response = new Response();\n\t\ttry {\n\t\t\tconst {\n\t\t\t\thost = location.host,\n\t\t\t\tssl = false,\n\t\t\t\ttimeout,\n\t\t\t} = this.options;\n\n\t\t\tconst url = this.getFullUrl(uri, host, ssl);\n\t\t\tconst abortCtrl = new AbortController();\n\n\t\t\tlet request = new Request(url, Object.assign({\n\t\t\t\tmethod,\n\t\t\t\tsignal: abortCtrl.signal,\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t}, this.options));\n\n\t\t\tfor (const onRequest of this.interceptors.request) {\n\t\t\t\trequest = await onRequest(request);\n\t\t\t}\n\n\t\t\tconst abortTimer = setTimeout(() => abortCtrl.abort(), timeout);\n\t\t\tresponse = await fetch(request);\n\t\t\tclearTimeout(abortTimer);\n\n\t\t\tif (response.ok) {\n\t\t\t\tlet value: T = await response.json();\n\t\t\t\tfor (const onResponse of this.interceptors.response) {\n\t\t\t\t\tvalue = await onResponse(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tthrow new Error();\n\t\t} catch (err) {\n\t\t\tfor (const onResponseError of this.interceptors.responseError) {\n\t\t\t\tawait onResponseError(response.clone(), err);\n\t\t\t}\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tif (typeof this.options.onFinally === 'function') {\n\t\t\t\tthis.options.onFinally();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { NgController } from '../controller';\r\nimport { NgComponentOptions } from '../options';\r\n\r\nclass IconController extends NgController {\r\n\tpublic $onInit() {\r\n\t\tconst { icon: iconName, width = 23, height = 23 } = this.$attrs;\r\n\t\tconst icon = this.$renderer.createIcon(iconName, { width, height });\r\n\t\tthis.$element.appendChild(icon);\r\n\t}\r\n}\r\n\r\nexport const appIcon: NgComponentOptions = {\r\n\tcontroller: IconController,\r\n};\r\n","import { NgController } from '../controller';\r\nimport { NgComponentOptions } from '../options';\r\n\r\nclass SpinnerController extends NgController {\r\n\tprivate readonly colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\r\n\r\n\tpublic $onInit() {\r\n\t\tconst { color = 'primary' } = this.$attrs;\r\n\r\n\t\tif (this.colors.includes(color) === false) {\r\n\t\t\tthrow new Error(`Color not supported: ${color}.\\nSupported colors: ${this.colors.join(', ')}`);\r\n\t\t}\r\n\r\n\t\tconst srDesc = this.$renderer.createHtmlElement('span', ['sr-only']);\r\n\t\tsrDesc.innerText = 'Loading...';\r\n\r\n\t\tconst spinner = this.$renderer.createHtmlElement('div', ['spinner-border', `text-${color}`, 'mx-1'], [['role', 'status']]);\r\n\t\tspinner.appendChild(srDesc);\r\n\t\tspinner.style.setProperty('margin-top', '0.23rem');\r\n\r\n\t\tthis.$element.appendChild(spinner);\r\n\t}\r\n}\r\n\r\nexport const appSpinner: NgComponentOptions = {\r\n\tcontroller: SpinnerController,\r\n};\r\n","import { appIcon } from './app-icon';\r\nimport { appSpinner } from './app-spinner';\r\n\r\nexport const misc = {\r\n\tappIcon,\r\n\tappSpinner,\r\n};\r\n","import { Indexed } from '@ledge/types';\r\n\r\nexport class NgAttributes {\r\n\t[name: string]: any;\r\n\tpublic readonly $attr: Indexed<string> = { };\r\n\r\n\tpublic PREFIX_REGEXP = /^((?:x|data)[:\\-_])/i;\r\n\tpublic SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\r\n\r\n\tconstructor(private readonly $$element: Element, attrs: Indexed = { }) {\r\n\t\tfor (const { name: key, value } of Array.from($$element.attributes)) {\r\n\t\t\tthis.$record(key, value);\r\n\t\t}\r\n\r\n\t\tfor (const [key, value] of Object.entries(attrs)) {\r\n\t\t\tthis.$record(key, value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with x- or data-) to its normalized, camelCase form.\r\n\t *\r\n\t * Also there is special case for Moz prefix starting with upper case letter.\r\n\t *\r\n\t * For further information check out the guide on @see https://docs.angularjs.org/guide/directive#matching-directives\r\n\t */\r\n\tpublic $normalize(name: string) {\r\n\t\treturn name\r\n\t\t\t.replace(this.PREFIX_REGEXP, '')\r\n\t\t\t.replace(this.SPECIAL_CHARS_REGEXP, (_, letter, offset) => offset ? letter.toUpperCase() : letter);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the CSS class value is present on the element.\r\n\t */\r\n\tpublic $hasClass(className: string) {\r\n\t\treturn this.$$element.classList.contains(className);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the specified CSS class value to the element.\r\n\t * If animations are enabled then an animation will be triggered for the class addition.\r\n\t */\r\n\tpublic $addClass(className: string) {\r\n\t\tif (this.$hasClass(className)) {\r\n\t\t\tthis.$$element.classList.add(className);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified CSS class value from the element.\r\n\t * If animations are enabled then an animation will be triggered for the class removal.\r\n\t */\r\n\tpublic $removeClass(className: string) {\r\n\t\tif (this.$hasClass(className)) {\r\n\t\t\tthis.$$element.classList.remove(className);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds and removes CSS class values to the element based on the difference between\r\n\t * two space-delimited strings of CSS class values.\r\n\t *\r\n\t * @param newClasses: The space-delimited list of CSS classes to add or retain\r\n\t * @param oldClasses: The space-delimited list of CSS classes to remove if not contained within newClasses\r\n\t */\r\n\tpublic $updateClass(newClasses: string, oldClasses: string) {\r\n\t\tconst nu = newClasses.split(/\\s/g).filter(x => x.length > 0);\r\n\t\tconst old = oldClasses.split(/\\s/g).filter(x => x.length > 0);\r\n\r\n\t\tfor (const o of old) {\r\n\t\t\tif (nu.includes(o)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.$removeClass(o);\r\n\t\t}\r\n\r\n\t\tfor (const n of nu) {\r\n\t\t\tthis.$addClass(n);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set DOM element attribute value.\r\n\t */\r\n\tpublic $set(key: string, value: any) {\r\n\t\tthis.$$element.setAttribute(key, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\tpublic $observe<T>(_: string, __: (value?: T) => any) {\r\n\t\t// tslint:disable-next-line:no-console\r\n\t\tconsole.warn('$observe is a noop');\r\n\t\treturn () => { return; };\r\n\t}\r\n\r\n\tprotected $record(key: string, value: string) {\r\n\t\tconst normalized = this.$normalize(key);\r\n\t\tthis[normalized] = value;\r\n\t\tthis.$attr[key] = normalized;\r\n\t}\r\n}\r\n","import { Indexed } from '@ledge/types';\r\n\r\n// tslint:disable:no-var-requires\r\nconst data = require('octicons/build/data.json');\r\nconst octicons: Indexed = { };\r\n\r\nfor (const key of Object.keys(data)) {\r\n\tconst icon = octicons[key] = Object.assign({ }, data[key]);\r\n\r\n\t// Returns a string representation of html attributes\r\n\tconst htmlAttributes = (options?: any) => {\r\n\t\tconst attributes: string[] = [];\r\n\t\tconst attrObj = Object.assign({ }, icon.options, options);\r\n\r\n\t\t// If the user passed in options\r\n\t\tif (options) {\r\n\t\t\t// If any of the width or height is passed in\r\n\t\t\tif (options.width || options.height) {\r\n\t\t\t\tattrObj.width = options.width ? options.width : (parseInt(options.height, 10) * icon.options.width / icon.options.height);\r\n\t\t\t\tattrObj.height = options.height ? options.height : (parseInt(options.width, 10) * icon.options.height / icon.options.width);\r\n\t\t\t}\r\n\r\n\t\t\t// If the user passed in class\r\n\t\t\tif (options.class) {\r\n\t\t\t\tattrObj.class = `octicon octicon-${key} ${options.class}`;\r\n\t\t\t\tattrObj.class.trim();\r\n\t\t\t}\r\n\r\n\t\t\t// If the user passed in aria-label\r\n\t\t\tif (options['aria-label']) {\r\n\t\t\t\tattrObj['aria-label'] = options['aria-label'];\r\n\t\t\t\tattrObj.role = 'img';\r\n\r\n\t\t\t\t// Un-hide the icon\r\n\t\t\t\tdelete attrObj['aria-hidden'];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tObject.keys(attrObj).forEach(option => {\r\n\t\t\tattributes.push(`${option}=\"${attrObj[option]}\"`);\r\n\t\t});\r\n\r\n\t\treturn attributes.join(' ').trim();\r\n\t};\r\n\r\n\t// Set the symbol for easy access\r\n\ticon.symbol = key;\r\n\r\n\t// Set all the default options\r\n\ticon.options = {\r\n\t\tversion: '1.1',\r\n\t\twidth: icon.width,\r\n\t\theight: icon.height,\r\n\t\tviewBox: `0 0 ${icon.width} ${icon.height}`,\r\n\t\tclass: `octicon octicon-${key}`,\r\n\t\t'aria-hidden': 'true',\r\n\t};\r\n\r\n\t// Function to return an SVG object\r\n\ticon.toSVG = (options: any) => `<svg ${htmlAttributes(options)}>${icon.path}</svg>`;\r\n}\r\n\r\nexport { octicons };\r\n","import { NgInputOptions } from './shared';\r\n\r\nexport const checkBox: NgInputOptions = {\r\n\ttype: 'input',\r\n\ttemplateClass: 'form-check',\r\n\tlabelClass: 'form-check-label',\r\n\trender(h) {\r\n\t\tconst input = h.createInput('checkbox');\r\n\t\tinput.style.setProperty('cursor', 'pointer');\r\n\r\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\r\n\t\t\tthis.$template.classList.remove('form-check');\r\n\t\t\tthis.$template.classList.add('form-check-inline');\r\n\t\t}\r\n\r\n\t\treturn input;\r\n\t},\r\n\tbindings: {\r\n\t\tngChecked: '<',\r\n\t},\r\n};\r\n","import { Indexed } from '@ledge/types';\r\nimport { ParamType, ResolveTypes, StateDeclaration, StateService, TargetState, Transition } from '@uirouter/core';\r\n\r\nimport { NgService } from './service';\r\n\r\nexport class NgRouter<T extends NgRoute = NgRoute> extends NgService {\r\n\tpublic routes: T[] = [];\r\n\r\n\tpublic getRoutes() {\r\n\t\treturn this.routes;\r\n\t}\r\n\r\n\tpublic registerRoute(partial: Partial<T>) {\r\n\t\tconst { name, parent, url } = this.generateRouteMeta(partial);\r\n\r\n\t\tconst state = Object.assign({\r\n\t\t\tname,\r\n\t\t\tparent,\r\n\t\t\turl,\r\n\t\t}, partial);\r\n\r\n\t\tif (this.isNgTransitionFn(state.onEnter)) {\r\n\t\t\tstate.onEnter = ['$transition$', state.onEnter];\r\n\t\t}\r\n\t\tif (this.isNgTransitionFn(state.onExit)) {\r\n\t\t\tstate.onExit = ['$transition$', state.onExit];\r\n\t\t}\r\n\t\tif (this.isNgTransitionFn(state.onRetain)) {\r\n\t\t\tstate.onRetain = ['$transition$', state.onRetain];\r\n\t\t}\r\n\r\n\t\tthis.routes.push(state as T);\r\n\r\n\t\treturn state as T;\r\n\t}\r\n\r\n\tpublic async isAuthorized() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic generateIntIdParam() {\r\n\t\tconst param = {\r\n\t\t\ttype: new ParamType({\r\n\t\t\t\tdecode(value) {\r\n\t\t\t\t\treturn parseInt(value, 10);\r\n\t\t\t\t},\r\n\t\t\t\tencode(value) {\r\n\t\t\t\t\treturn value && value.toString();\r\n\t\t\t\t},\r\n\t\t\t\tequals(a, b) {\r\n\t\t\t\t\treturn this.is(a) && a === b;\r\n\t\t\t\t},\r\n\t\t\t\tis(value) {\r\n\t\t\t\t\treturn Number.isInteger(this.decode(value));\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t};\r\n\r\n\t\tparam.type.name = 'path';\r\n\t\treturn param;\r\n\t}\r\n\r\n\tpublic generateIntQueryParam() {\r\n\t\tconst param = {\r\n\t\t\ttype: new ParamType({\r\n\t\t\t\tdecode(value) {\r\n\t\t\t\t\treturn parseInt(value, 10);\r\n\t\t\t\t},\r\n\t\t\t\tencode(value) {\r\n\t\t\t\t\treturn value && value.toString();\r\n\t\t\t\t},\r\n\t\t\t\tequals(a, b) {\r\n\t\t\t\t\treturn this.is(a) && a === b;\r\n\t\t\t\t},\r\n\t\t\t\tis(value) {\r\n\t\t\t\t\treturn Number.isInteger(this.decode(value));\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t};\r\n\r\n\t\tparam.type.name = 'query';\r\n\t\treturn param;\r\n\t}\r\n\r\n\tprotected isNgTransitionFn(item?: NgResolveFn | NgAnnotatedResolveFn): item is NgResolveFn {\r\n\t\treturn typeof item === 'function';\r\n\t}\r\n\r\n\tprotected annotateResolveFunctions({ resolve = { } }: NgRoute) {\r\n\t\tfor (const [ id, resolveFn ] of Object.entries(resolve)) {\r\n\t\t\tif (Array.isArray(resolve)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (this.isNgTransitionFn(resolveFn)) {\r\n\t\t\t\tresolve[id] = ['$transition$', resolveFn];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn resolve;\r\n\t}\r\n\r\n\tprotected generateRouteMeta(\r\n\t\t{\r\n\t\t\tparams = { },\r\n\t\t\tdata = { },\r\n\t\t\tname = '',\r\n\t\t\tcomponent = '',\r\n\t\t\tparent = '',\r\n\t\t}: Partial<T>,\r\n\t) {\r\n\t\tname = (name || component);\r\n\r\n\t\tlet url = `/${data.isBase ? name : name.split(/(?=[A-Z])/).join('/').toLowerCase()}`\r\n\t\t\t.replace(/View$/, '');\r\n\r\n\t\tfor (const [key, { type = { } }] of Object.entries<any>(params)) {\r\n\t\t\turl += type.name === 'path' ? '/:' : (url.includes('?') ? '&' : '?');\r\n\t\t\turl += key;\r\n\t\t}\r\n\r\n\t\treturn { name, parent, url };\r\n\t}\r\n}\r\n\r\n/**\r\n * @internalapi\r\n * an intermediate interface.\r\n *\r\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\r\n */\r\n// tslint:disable-next-line:class-name\r\ninterface _NgStateService extends StateService {\r\n\tcurrent: any;\r\n}\r\n\r\nexport interface NgStateService extends _NgStateService {\r\n\tcurrent: NgRoute;\r\n\tlabel: string;\r\n\tparent: string;\r\n}\r\n\r\n/**\r\n * @internalapi\r\n * an intermediate interface.\r\n *\r\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\r\n */\r\n// tslint:disable-next-line:class-name\r\ninterface _NgRoute extends StateDeclaration {\r\n\tonExit?: any;\r\n\tonRetain?: any;\r\n\tonEnter?: any;\r\n\tviews?: any;\r\n\tresolve?: any;\r\n}\r\n\r\nexport type NgResolveFn<T = any> = ($trans: Transition) => Promise<T>;\r\nexport type NgAnnotatedResolveFn<T = any> = [string, NgResolveFn<T>];\r\nexport type NgTransition = NgResolveFn<TargetState | Transition> | NgAnnotatedResolveFn<TargetState | Transition>;\r\n\r\nexport interface NgRoute extends _NgRoute {\r\n\t/**\r\n\t * The name of the component to use for this view.\r\n\t */\r\n\tcomponent?: string;\r\n\r\n\t/**\r\n\t * An object which maps `resolve`s to component `bindings`.\r\n\t *\r\n\t * When using a component declaration (`component: 'myComponent'`),\r\n\t * each input binding for the component is supplied data from a resolve of\r\n\t * the same name, by default.\r\n\t *\r\n\t * You may supply data from a different resolve name by mapping it here.\r\n\t */\r\n\tbindings?: {\r\n\t\t[key: string]: string;\r\n\t};\r\n\r\n\tresolve?: Indexed<NgResolveFn | NgAnnotatedResolveFn> | ResolveTypes[];\r\n\r\n\t/**\r\n\t * Injected function which returns the HTML template.\r\n\t * The template will be used to render the corresponding component.\r\n\t *\r\n\t * #### Examples:\r\n\t * ```ts\r\n\t * {\r\n\t * \t// other props\r\n\t * \ttemplate: require('./template.pug');\r\n\t * }\r\n\t * ```\r\n\t * ```ts\r\n\t * {\r\n\t * \t// other props\r\n\t * \ttemplate: '<div>Hello, world!</div>';\r\n\t * }\r\n\t * ```\r\n\t */\r\n\ttemplate?: string | (() => string);\r\n\r\n\turl: string;\r\n\tparent: string;\r\n\tlabel: string;\r\n\r\n\tonEnter?: NgTransition;\r\n\tonExit?: NgTransition;\r\n\tonRetain?: NgTransition;\r\n}\r\n","import { NgInputController } from './controller';\r\nimport { NgInputOptions } from './options';\r\n\r\nimport { NgAttributes } from '../../attributes';\r\nimport { NgComponentOptions } from '../../options';\r\nimport { NgRenderer } from '../../renderer';\r\nimport { NgService } from '../../service';\r\n\r\nexport class InputService extends NgService {\r\n\tpublic static readonly $validationAttrs = [\r\n\t\t'required', 'ngRequired',\r\n\t\t'disabled', 'ngDisabled',\r\n\t\t'readonly', 'ngReadonly',\r\n\t];\r\n\r\n\tpublic static readonly $validationMessages = new Map<string, string>([\r\n\t\t['email', 'Email address must be in the following form: email@address.com'],\r\n\t\t['required', 'This field is required'],\r\n\t\t['minlength', 'Input is not long enough'],\r\n\t\t['maxlength', 'Input is too long'],\r\n\t]);\r\n\tpublic static readonly $validationExps = {\r\n\t\t$error: '$ctrl.ngModelCtrl.$error',\r\n\t\t$invalid: '$ctrl.ngModelCtrl.$invalid',\r\n\t\t$touched: '$ctrl.ngModelCtrl.$touched',\r\n\t\t$formInvalid: `$ctrl.ngModelCtrl.$$parentForm.$submitted`,\r\n\t\tget $isInvalid() {\r\n\t\t\t// tslint:disable-next-line: static-this\r\n\t\t\treturn `(${this.$touched} || ${this.$formInvalid}) && ${this.$invalid}`;\r\n\t\t},\r\n\t};\r\n\r\n\t// tslint:disable: static-this\r\n\tpublic static makeBaseComponent() {\r\n\t\treturn {\r\n\t\t\tlabelClass: 'form-control-label',\r\n\t\t\ttemplateClass: 'form-group',\r\n\t\t\tattrs: { },\r\n\t\t\tcontroller: NgInputController,\r\n\t\t\trenderLabel: function defaultRenderLabel(h) {\r\n\t\t\t\tconst $transclude = h.createSlot();\r\n\t\t\t\t$transclude.textContent = InputService.getDefaultLabelText(this.$attrs);\r\n\t\t\t\tthis.$label.appendChild($transclude);\r\n\t\t\t} as NgInputOptions['renderLabel'],\r\n\t\t\tpostRender: function defaultPostRender(_h) {\r\n\t\t\t\treturn this.$template;\r\n\t\t\t} as NgInputOptions['postRender'],\r\n\t\t\tget isRadioOrCheckbox() {\r\n\t\t\t\treturn this.labelClass === 'form-check-label';\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tpublic static makeBaseOptions(): NgComponentOptions {\r\n\t\treturn {\r\n\t\t\ttransclude: {\r\n\t\t\t\tcontain: '?contain',\r\n\t\t\t},\r\n\t\t\trequire: {\r\n\t\t\t\tngModelCtrl: 'ngModel',\r\n\t\t\t},\r\n\t\t\tbindings: {\r\n\t\t\t\tngModel: '=',\r\n\t\t\t\tngModelOptions: '<',\r\n\t\t\t\tngDisabled: '<',\r\n\t\t\t\tngReadonly: '<',\r\n\t\t\t\tngRequired: '<',\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the identifying name for an ngModel (e.g., `$ctrl.example` in `ng-model=\"$ctrl.example\"`)\r\n\t */\r\n\tpublic static modelIdentifier($attrs: NgAttributes) {\r\n\t\treturn ($attrs.ngModel as string).split('.').pop() as string;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates label text from the identifying name for an ngModel (e.g., `$ctrl.example` in `ng-model=\"$ctrl.example\"`)\r\n\t */\r\n\tpublic static getDefaultLabelText($attrs: NgAttributes) {\r\n\t\treturn InputService.modelIdentifier($attrs)\r\n\t\t\t.split(/(?=[A-Z0-9])/)\r\n\t\t\t.map(x => isNaN(Number(x)) ? x.charAt(0).toUpperCase() + x.substring(1) : x)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * @param $input - The input to set attributes on\r\n\t */\r\n\tpublic static getInputInput($input: HTMLElement) {\r\n\t\treturn (\r\n\t\t\t['INPUT', 'TEXTAREA', 'SELECT'].includes($input.tagName)\r\n\t\t\t\t? $input\r\n\t\t\t\t: $input.querySelector('select') || $input.querySelector('input')\r\n\t\t) as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Transform an input component definition into an ng component definition\r\n\t * @param component An object representing the requested component definition\r\n\t */\r\n\tpublic static defineInputComponent(component: NgInputOptions) {\r\n\t\t// 'h' identifier (and many other ideas) taken from the virtual-dom ecosystem\r\n\t\tconst h = new NgRenderer(document);\r\n\r\n\t\tconst $component = Object.assign(InputService.makeBaseComponent(), component);\r\n\t\tconst $definition = Object.assign(InputService.makeBaseOptions(), { controller: $component.controller });\r\n\r\n\t\t// assign child objects\r\n\t\tObject.assign($definition.bindings, $component.bindings);\r\n\t\tObject.assign($definition.transclude, $component.transclude);\r\n\r\n\t\t// assign template\r\n\t\t$definition.template = ['$element', '$attrs', ($element: [HTMLElement], $attrs: NgAttributes) => {\r\n\t\t\tconst $el = $element[0];\r\n\r\n\t\t\tconst $template = h.createHtmlElement('div', [$component.templateClass]);\r\n\r\n\t\t\t// allow consumer to access $template and $attrs attributes from `this`\r\n\t\t\tconst $input = $component.render.call({ $template, $attrs }, h);\r\n\r\n\t\t\tconst isRadio = ($input as HTMLInputElement).type === 'radio';\r\n\t\t\tconst isRequired = $attrs.hasOwnProperty('required');\r\n\t\t\tconst isSrOnly = $attrs.hasOwnProperty('srOnly');\r\n\r\n\t\t\t// all inputs must have labels\r\n\t\t\tconst $label = h.createLabel([$component.labelClass], { isRequired, isSrOnly, isRadio });\r\n\r\n\t\t\tif ($component.isRadioOrCheckbox === false) {\r\n\t\t\t\t$template.appendChild($label);\r\n\t\t\t}\r\n\r\n\t\t\tif ($component.canHaveIcon === true) {\r\n\t\t\t\t$template.appendChild(h.createIconInput($input, $attrs.icon));\r\n\t\t\t} else {\r\n\t\t\t\t$template.appendChild($input);\r\n\t\t\t}\r\n\r\n\t\t\tif ($el.closest('contain') != null) {\r\n\t\t\t\t$input.style.marginTop = '8px';\r\n\t\t\t\t$label.classList.add('sr-only');\r\n\t\t\t}\r\n\r\n\t\t\tconst requiredTag = $label.firstElementChild;\r\n\t\t\tif (requiredTag != null) {\r\n\t\t\t\t$label.removeChild(requiredTag);\r\n\t\t\t}\r\n\r\n\t\t\t($component.renderLabel as NonNullable<NgInputOptions['renderLabel']>)\r\n\t\t\t\t.call({ $label, $attrs }, h);\r\n\r\n\t\t\tif (requiredTag != null) {\r\n\t\t\t\t$label.appendChild(requiredTag);\r\n\t\t\t}\r\n\r\n\t\t\t// add a transclusion slot for e.g. nesting inputs\r\n\t\t\t$template.appendChild(h.createSlot('contain'));\r\n\r\n\t\t\tif ($component.isRadioOrCheckbox === true) {\r\n\t\t\t\t$label.style.setProperty('cursor', 'pointer');\r\n\t\t\t\t$template.appendChild($label);\r\n\t\t\t}\r\n\r\n\t\t\t($component.postRender as NonNullable<NgInputOptions['postRender']>)\r\n\t\t\t\t.call({ $template, $attrs }, h);\r\n\r\n\t\t\t// that's right, i named it after filterFilter. fight me.\r\n\t\t\tconst $inputInput = InputService.getInputInput($input);\r\n\r\n\t\t\tInputService.$validationAttrs\r\n\t\t\t\t.filter(x => $attrs.hasOwnProperty(x) === true)\r\n\t\t\t\t.forEach(x => {\r\n\t\t\t\t\t$inputInput.setAttribute(\r\n\t\t\t\t\t\tx.replace(/[A-Z]/, s => `-${s.toLowerCase()}`),\r\n\t\t\t\t\t\tx.startsWith('ng') ? `$ctrl.${x}` : 'true',\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\r\n\t\t\tif ($inputInput.tagName !== 'SELECT') {\r\n\t\t\t\t$inputInput.setAttribute('ng-class', `{ 'is-invalid': ${InputService.$validationExps.$isInvalid} }`);\r\n\t\t\t\t$inputInput.setAttribute('ng-blur', '$ctrl.ngModelCtrl.$setTouched()');\r\n\t\t\t}\r\n\r\n\t\t\tconst $validationBlock = h.createHtmlElement('div', [], [\r\n\t\t\t\t['ng-messages', InputService.$validationExps.$error],\r\n\t\t\t\t['ng-show', InputService.$validationExps.$isInvalid],\r\n\t\t\t\t['role', 'alert'],\r\n\t\t\t]);\r\n\r\n\t\t\tconst { validators = { } } = $component;\r\n\t\t\tconst attrs = Object.keys($component.attrs);\r\n\r\n\t\t\tfor (const [key, value] of Object.entries(validators)) {\r\n\t\t\t\tInputService.$validationMessages.set(key, value);\r\n\t\t\t\tattrs.push(key);\r\n\t\t\t}\r\n\r\n\t\t\tInputService.$validationAttrs\r\n\t\t\t\t.concat(...attrs, 'email')\r\n\t\t\t\t.filter(x => x.startsWith('ng') === false)\r\n\t\t\t\t.filter(x => InputService.$validationMessages.has(x) === true)\r\n\t\t\t\t.filter(x => x !== 'email' || $inputInput.type === x)\r\n\t\t\t\t.forEach(x => {\r\n\t\t\t\t\tconst $message = h.createHtmlElement('div', ['text-danger'], [['ng-message', x]]);\r\n\t\t\t\t\t$message.innerText = InputService.$validationMessages.get(x) as string;\r\n\t\t\t\t\t$validationBlock.appendChild($message);\r\n\t\t\t\t});\r\n\r\n\t\t\tlet $html: string;\r\n\t\t\tif (isRadio === true) {\r\n\t\t\t\tconst $newTpl = h.createHtmlElement('div', ['form-group']);\r\n\t\t\t\t$newTpl.appendChild($template);\r\n\t\t\t\t$newTpl.appendChild($validationBlock);\r\n\t\t\t\t$html = $newTpl.outerHTML;\r\n\t\t\t} else {\r\n\t\t\t\t$template.appendChild($validationBlock);\r\n\t\t\t\t$html = $template.outerHTML;\r\n\t\t\t}\r\n\r\n\t\t\t$html = $html.replace(/{{id}}/g, InputService.modelIdentifier($attrs));\r\n\r\n\t\t\tattrs\r\n\t\t\t\t.forEach(prop => {\r\n\t\t\t\t\t$html = $html.replace(\r\n\t\t\t\t\t\tnew RegExp(`{{${prop}}}`, 'g'),\r\n\t\t\t\t\t\t$attrs[prop] || $component.attrs[prop],\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn $html;\r\n\t\t}];\r\n\r\n\t\treturn $definition;\r\n\t}\r\n}\r\n","import { Indexed, WritableKeysOf } from '@ledge/types';\r\nimport { Renderer2, RendererStyleFlags2 } from '@angular/core';\r\nimport { octicons } from './icon';\r\n\r\nexport class NgRenderer extends Renderer2 {\r\n\tpublic baseInputAttrs: [string, string][] = [\r\n\t\t['ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}'],\r\n\t\t['ng-attr-name', '{{id}}_{{$ctrl.uniqueId}}'],\r\n\t\t['ng-model', '$ctrl.ngModel'],\r\n\t\t['ng-model-options', '$ctrl.ngModelOptions'],\r\n\t];\r\n\r\n\tconstructor(private document: HTMLDocument) { super(); }\r\n\r\n\tpublic createHtmlElement<T extends keyof HTMLElementTagNameMap | 'ng-transclude'>(\r\n\t\ttagName: T,\r\n\t\tclasses: string[] = [],\r\n\t\tattrs: [string, string][] = [],\r\n\t) {\r\n\t\tconst $el = this.createElement(tagName);\r\n\r\n\t\tfor (const c of classes) {\r\n\t\t\tthis.addClass($el, c);\r\n\t\t}\r\n\r\n\t\tfor (const [key, value] of attrs) {\r\n\t\t\t$el.setAttribute(key, value);\r\n\t\t}\r\n\r\n\t\treturn $el as T extends keyof HTMLElementTagNameMap\r\n\t\t\t? HTMLElementTagNameMap[T]\r\n\t\t\t: HTMLUnknownElement;\r\n\t}\r\n\r\n\tpublic createInput(type: string = 'text', attrs: [string, string][] = []) {\r\n\t\tconst $isRange = type === 'range';\r\n\t\tconst $isRadio = type === 'radio';\r\n\t\tconst $isCheckbox = type === 'checkbox';\r\n\t\tconst $isFormCheck = $isRadio || $isCheckbox;\r\n\r\n\t\tconst $class =\r\n\t\t\t$isFormCheck\r\n\t\t\t\t? ['form-check-input']\r\n\t\t\t\t: $isRange\r\n\t\t\t\t\t? ['custom-range']\r\n\t\t\t\t\t: ['form-control'];\r\n\r\n\t\tconst $inputAttrs: [string, string][] = [\r\n\t\t\t...this.baseInputAttrs,\r\n\t\t\t...attrs,\r\n\t\t\t['type', type],\r\n\t\t];\r\n\r\n\t\tif ($isRadio) {\r\n\t\t\t$inputAttrs.shift(); // we'll set the id in render\r\n\t\t} else if ($isCheckbox === false && $isRange === false) {\r\n\t\t\t$inputAttrs.push(['maxlength', '{{maxlength}}'], ['placeholder', '{{placeholder}}']);\r\n\t\t}\r\n\r\n\t\treturn this.createHtmlElement('input', $class, $inputAttrs);\r\n\t}\r\n\r\n\tpublic createTextArea() {\r\n\t\treturn this.createHtmlElement('textarea', ['form-control'], [\r\n\t\t\t...this.baseInputAttrs,\r\n\t\t\t['maxlength', '{{maxlength}}'],\r\n\t\t\t['placeholder', '{{placeholder}}'],\r\n\t\t]);\r\n\t}\r\n\r\n\tpublic createIcon(iconName: string, options: Indexed = { }) {\r\n\t\tif (octicons.hasOwnProperty(iconName) === false) {\r\n\t\t\tthrow new Error(`\r\n\t\t\t\tIcon not supported: ${iconName}.\\nSupported icons: ${Object.keys(octicons).sort().join(', ')}\r\n\t\t\t`.trim());\r\n\t\t}\r\n\r\n\t\tconst svg = octicons[iconName].toSVG(Object.assign(options, { 'aria-label': iconName }));\r\n\t\tconst container = this.createHtmlElement('div', ['d-inline-flex', 'px-1']);\r\n\t\tcontainer.setAttribute('aria-hidden', 'true');\r\n\t\tcontainer.setAttribute('title', iconName);\r\n\t\tcontainer.innerHTML = svg;\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\tpublic createLabel(classList: string[], {\r\n\t\tisRequired = false,\r\n\t\tisSrOnly = false,\r\n\t\tisRadio = false,\r\n\t}: {\r\n\t\tisRequired?: boolean,\r\n\t\tisSrOnly?: boolean,\r\n\t\tisRadio?: boolean,\r\n\t} = {\r\n\t\t\tisRequired: false,\r\n\t\t\tisSrOnly: false,\r\n\t\t\tisRadio: false,\r\n\t\t},\r\n\t) {\r\n\t\tconst $label = this.createHtmlElement(\r\n\t\t\t'label',\r\n\t\t\tclassList,\r\n\t\t\t[['ng-attr-for', '{{id}}_{{$ctrl.uniqueId}}']],\r\n\t\t);\r\n\r\n\t\tif (isRequired === true && !isRadio) {\r\n\t\t\tconst $span = this.createHtmlElement('span', ['text-danger']);\r\n\t\t\t$span.textContent = ' *';\r\n\t\t\t$label.appendChild($span);\r\n\t\t}\r\n\r\n\t\tif (isSrOnly === true) {\r\n\t\t\t$label.classList.add('sr-only');\r\n\t\t}\r\n\r\n\t\treturn $label;\r\n\t}\r\n\r\n\tpublic createSlot(name?: string) {\r\n\t\treturn name != null\r\n\t\t\t? this.createHtmlElement('div', [], [['ng-transclude', name]])\r\n\t\t\t: this.createHtmlElement('ng-transclude') as HTMLDivElement;\r\n\t}\r\n\r\n\tpublic createIconInput($input: HTMLElement, icon?: string, inputGroupAttrs: [string, string][] = []) {\r\n\t\tif (icon == null) {\r\n\t\t\treturn $input;\r\n\t\t}\r\n\r\n\t\tconst $inputGroup = this.createHtmlElement('div', ['input-group']);\r\n\t\tconst $inputGroupPrepend = this.createHtmlElement('div', ['input-group-prepend'], inputGroupAttrs);\r\n\t\tconst $inputGroupText = this.createHtmlElement('span', ['input-group-text']);\r\n\t\tconst $icon = this.createIcon(icon);\r\n\r\n\t\t$inputGroupText.appendChild($icon);\r\n\t\t$inputGroupPrepend.appendChild($inputGroupText);\r\n\r\n\t\t$inputGroup.appendChild($inputGroupPrepend);\r\n\t\t$inputGroup.appendChild($input);\r\n\r\n\t\treturn $inputGroup;\r\n\t}\r\n\r\n\t/**\r\n\t * Renderer2 implementations\r\n\t */\r\n\r\n\t// tslint:disable-next-line: member-ordering\r\n\tpublic data: {  [key: string]: any} = Object.create(null);\r\n\r\n\t// tslint:disable-next-line: member-ordering\r\n\tpublic destroyNode: null;\r\n\r\n\tpublic destroy() {\r\n\t\treturn;\r\n\t}\r\n\r\n\tpublic createElement<T extends keyof HTMLElementTagNameMap>(tagName: T): HTMLElementTagNameMap[T];\r\n\tpublic createElement(tagName: string): HTMLUnknownElement;\r\n\tpublic createElement<T extends keyof HTMLElementTagNameMap>(tagName: T) {\r\n\t\treturn this.document.createElement(tagName);\r\n\t}\r\n\r\n\tpublic createText(value: string) {\r\n\t\treturn this.document.createTextNode(value);\r\n\t}\r\n\r\n\tpublic createComment(value: string) {\r\n\t\treturn this.document.createComment(value);\r\n\t}\r\n\r\n\tpublic appendChild(parent: HTMLElement, newChild: HTMLElement) {\r\n\t\tparent.appendChild(newChild);\r\n\t}\r\n\r\n\tpublic removeChild(parent: HTMLElement, newChild: HTMLElement) {\r\n\t\tparent.removeChild(newChild);\r\n\t}\r\n\r\n\tpublic insertBefore(parent: HTMLElement, newChild: HTMLElement, refChild: HTMLElement) {\r\n\t\tparent.insertBefore(newChild, refChild);\r\n\t}\r\n\r\n\tpublic addClass<T extends HTMLElement>(el: T, name: string) {\r\n\t\tel.classList.add(name);\r\n\t}\r\n\r\n\tpublic removeClass<T extends HTMLElement>(el: T, name: string) {\r\n\t\tel.classList.remove(name);\r\n\t}\r\n\r\n\tpublic setStyle<T extends HTMLElement>(el: T, style: string, value: any, flags?: RendererStyleFlags2) {\r\n\t\tel.style.setProperty(style, value, flags == null ? undefined : flags === RendererStyleFlags2.Important ? 'important' : '');\r\n\t}\r\n\r\n\tpublic removeStyle<T extends HTMLElement>(el: T, style: string) {\r\n\t\tel.style.removeProperty(style);\r\n\t}\r\n\r\n\tpublic setAttribute<T extends HTMLElement>(el: T, name: string, value: string) {\r\n\t\tel.setAttribute(name, value);\r\n\t}\r\n\r\n\tpublic removeAttribute<T extends HTMLElement>(el: T, name: string) {\r\n\t\tel.removeAttribute(name);\r\n\t}\r\n\r\n\tpublic setProperty<T extends HTMLElement, U extends Exclude<WritableKeysOf<T>, number | symbol>>(el: T, name: U, value: any) {\r\n\t\tel[name] = value;\r\n\t}\r\n\r\n\tpublic setValue<T extends HTMLElement>(node: T, value: string) {\r\n\t\tnode.nodeValue = value;\r\n\t}\r\n\r\n\tpublic parentNode(node: HTMLElement) {\r\n\t\treturn node.parentNode;\r\n\t}\r\n\r\n\tpublic nextSibling(node: HTMLElement) {\r\n\t\treturn node.nextSibling;\r\n\t}\r\n\r\n\tpublic selectRootElement(selectorOrNode: string | HTMLElement, preserveContent = false): HTMLElement {\r\n\t\tconst el: HTMLElement | null = typeof selectorOrNode === 'string'\r\n\t\t\t? this.document.querySelector(selectorOrNode)\r\n\t\t\t: selectorOrNode;\r\n\r\n\t\tif (el == null) {\r\n\t\t\tthrow new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\r\n\t\t}\r\n\r\n\t\tif (preserveContent === false) {\r\n\t\t\tel.textContent = '';\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tpublic listen<T extends keyof GlobalEventHandlersEventMap>(\r\n\t\ttarget: HTMLElement,\r\n\t\teventName: T,\r\n\t\tcallback: (event: GlobalEventHandlersEventMap[T]) => boolean | void,\r\n\t) {\r\n\t\ttarget.addEventListener(eventName, callback);\r\n\t\treturn () => target.removeEventListener(eventName, callback);\r\n\t}\r\n}\r\n","import { NgInputController, NgInputOptions } from './shared';\r\n\r\nclass TextBoxController extends NgInputController {\r\n\tpublic $element: HTMLTextAreaElement;\r\n\tpublic $mirror = document.createElement('textarea');\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.$mirror.setAttribute('aria-hidden', 'true');\r\n\t\tthis.$mirror.setAttribute('aria-label', 'Hidden TextArea');\r\n\t\tthis.$mirror.setAttribute('tabindex', '-1');\r\n\r\n\t\tthis.$mirror.style.setProperty('position', 'absolute');\r\n\t\tthis.$mirror.style.setProperty('top', '-999px');\r\n\t\tthis.$mirror.style.setProperty('right', 'auto');\r\n\t\tthis.$mirror.style.setProperty('bottom', 'auto');\r\n\t\tthis.$mirror.style.setProperty('left', '0');\r\n\t\tthis.$mirror.style.setProperty('overflow', 'hidden');\r\n\t\tthis.$mirror.style.setProperty('box-sizing', 'content-box');\r\n\t\tthis.$mirror.style.setProperty('min-height', '0', 'important');\r\n\t\tthis.$mirror.style.setProperty('height', '0', 'important');\r\n\t\tthis.$mirror.style.setProperty('padding', '0');\r\n\t\tthis.$mirror.style.setProperty('word-wrap', 'break-word');\r\n\t\tthis.$mirror.style.setProperty('border', '0');\r\n\r\n\t\t// append mirror to the DOM\r\n\t\tdocument.body.appendChild(this.$mirror);\r\n\t}\r\n\r\n\tpublic $onInit() {\r\n\t\t// the query *must* return an element or nothing we've done so far matters\r\n\t\tconst element = this.$element.querySelector('textarea') as HTMLTextAreaElement;\r\n\t\tlet computedStyle = window.getComputedStyle(element);\r\n\r\n\t\tconst boxOuter = {\r\n\t\t\twidth:\r\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-right-width'), 10) +\r\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-right'), 10) +\r\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-left'), 10) +\r\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-left-width'), 10),\r\n\t\t\theight:\r\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-top-width'), 10) +\r\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-top'), 10) +\r\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-bottom'), 10) +\r\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-bottom-width'), 10),\r\n\t\t};\r\n\r\n\t\tconst minHeightValue = parseInt(computedStyle.getPropertyValue('min-height'), 10);\r\n\t\tconst heightValue = parseInt(computedStyle.getPropertyValue('height'), 10);\r\n\t\tconst minHeight = Math.max(minHeightValue, heightValue) - boxOuter.height;\r\n\r\n\t\t// Opera returns max-height of -1 if not set\r\n\t\tlet maxHeight = parseInt(computedStyle.getPropertyValue('max-height'), 10);\r\n\t\tmaxHeight = maxHeight && maxHeight > 0 ? maxHeight : 9e4;\r\n\r\n\t\t// set resize and apply elastic\r\n\t\telement.style.setProperty('resize', 'none');\r\n\r\n\t\tconst mirror = this.$mirror;\r\n\t\tfunction adjust() {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tcomputedStyle = window.getComputedStyle(element);\r\n\r\n\t\t\t\tconst width = (parseInt(computedStyle.getPropertyValue('width'), 10) - boxOuter.width) + 'px';\r\n\t\t\t\tmirror.style.setProperty('width', width);\r\n\t\t\t\tmirror.style.setProperty('overflow-y', computedStyle.getPropertyValue('overflow-y'));\r\n\r\n\t\t\t\tmirror.value = element.value;\r\n\r\n\t\t\t\tlet { scrollHeight } = mirror;\r\n\t\t\t\tlet overflow = 'hidden';\r\n\r\n\t\t\t\tif (scrollHeight > maxHeight) {\r\n\t\t\t\t\tscrollHeight = maxHeight;\r\n\t\t\t\t\toverflow = 'scroll';\r\n\t\t\t\t} else if (scrollHeight < minHeight) {\r\n\t\t\t\t\tscrollHeight = minHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement.style.setProperty('overflow-y', overflow);\r\n\r\n\t\t\t\tscrollHeight += boxOuter.height;\r\n\t\t\t\tif (parseInt(computedStyle.getPropertyValue('height'), 10) !== scrollHeight) {\r\n\t\t\t\t\telement.style.setProperty('height', scrollHeight + 'px');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', adjust);\r\n\t\telement.addEventListener('keydown', adjust);\r\n\r\n\t\tthis.$scope.$on('$destroy', () => {\r\n\t\t\tif (this.isIE11) {\r\n\t\t\t\t(this.$mirror as any).removeNode(true);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$mirror.remove();\r\n\t\t\t}\r\n\t\t\twindow.removeEventListener('resize', adjust);\r\n\t\t\telement.removeEventListener('keydown', adjust);\r\n\t\t});\r\n\r\n\t\t// copy the essential styles from the textarea to the mirror\r\n\t\tconst styles = [\r\n\t\t\t'font-family',\r\n\t\t\t'font-size',\r\n\t\t\t'font-weight',\r\n\t\t\t'font-style',\r\n\t\t\t'letter-spacing',\r\n\t\t\t'line-height',\r\n\t\t\t'text-transform',\r\n\t\t\t'word-spacing',\r\n\t\t\t'text-indent',\r\n\t\t\t'white-space',\r\n\t\t];\r\n\r\n\t\tfor (const style of styles) {\r\n\t\t\tthis.$mirror.style.setProperty(style, computedStyle.getPropertyValue(style));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const textBox: NgInputOptions = {\r\n\ttype: 'input',\r\n\tattrs: { maxlength: 3000, placeholder: '' },\r\n\trender(h) {\r\n\t\tconst textArea = h.createTextArea();\r\n\r\n\t\ttextArea.style.setProperty('overflow', 'hidden');\r\n\t\ttextArea.style.setProperty('overflow-y', 'hidden');\r\n\t\ttextArea.style.setProperty('word-wrap', 'break-word');\r\n\r\n\t\treturn textArea;\r\n\t},\r\n\tcontroller: TextBoxController,\r\n};\r\n","import Fuse from 'fuse.js';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nimport { NgInputController, NgInputOptions } from './shared';\r\nimport { NgAttributes } from '../attributes';\r\nimport { NgService } from '../service';\r\n\r\nclass SelectController extends NgInputController {\r\n\tpublic static readonly SinglePlaceholder = '----Select One----';\r\n\tpublic static readonly MultiplePlaceholder = '----Select All That Apply----';\r\n\r\n\tpublic static IsMultiple($attrs: NgAttributes) {\r\n\t\treturn $attrs.hasOwnProperty('multiple') || $attrs.type === 'multiple';\r\n\t}\r\n\r\n\tpublic static GetPlaceholder($attrs: NgAttributes) {\r\n\t\treturn $attrs.placeholder ||\r\n\t\t\tSelectController.IsMultiple($attrs)\r\n\t\t\t? SelectController.MultiplePlaceholder\r\n\t\t\t: SelectController.SinglePlaceholder;\r\n\t}\r\n\r\n\tprotected isListOpen = false;\r\n\tprotected list: any[];\r\n\tprotected searchList: any[];\r\n\r\n\tprivate _text: string;\r\n\tprivate _value: string;\r\n\r\n\tpublic get text() {\r\n\t\tif (typeof this._text !== 'string') {\r\n\t\t\tconst { text = 'Text' } = this.$attrs;\r\n\t\t\tthis._text = text;\r\n\t\t}\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic get value() {\r\n\t\tif (typeof this._value !== 'string') {\r\n\t\t\tconst { value = 'Value' } = this.$attrs;\r\n\t\t\tthis._value = value;\r\n\t\t}\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tprivate destroyCurrentWatcher: () => void;\r\n\r\n\tprivate get isMultiple() {\r\n\t\treturn SelectController.IsMultiple(this.$attrs);\r\n\t}\r\n\r\n\tpublic $onInit() {\r\n\t\tconst container = this.$element.querySelector('.select-container') as HTMLDivElement;\r\n\t\tconst innerContainer = this.$element.querySelector('.select-inner-container') as HTMLDivElement;\r\n\t\tconst dropdown = this.$element.querySelector('.select-dropdown') as HTMLDivElement;\r\n\t\tconst dropdownlist = this.$element.querySelector('.select-dropdown-list') as HTMLDivElement;\r\n\t\tconst input = this.$element.querySelector('input') as HTMLInputElement;\r\n\r\n\t\tconst updateSearchList = () => {\r\n\t\t\tif (input.value) {\r\n\t\t\t\tthis.searchList = this.getSearchList(fuzzer.search(input.value));\r\n\t\t\t} else {\r\n\t\t\t\tthis.searchList = cloneDeep(this.list);\r\n\t\t\t}\r\n\t\t\tthis.$scope.$applyAsync();\r\n\t\t};\r\n\r\n\t\tlet fuzzer: Fuse<any, any>;\r\n\t\tthis.$scope.$watchCollection(\r\n\t\t\t() => this.list,\r\n\t\t\t_ => {\r\n\t\t\t\tfuzzer = new Fuse(_, {\r\n\t\t\t\t\tshouldSort: true,\r\n\t\t\t\t\tthreshold: 0.3,\r\n\t\t\t\t\tlocation: 0,\r\n\t\t\t\t\tdistance: 100,\r\n\t\t\t\t\tmaxPatternLength: 32,\r\n\t\t\t\t\tminMatchCharLength: 1,\r\n\t\t\t\t\tkeys: [this.text],\r\n\t\t\t\t});\r\n\r\n\t\t\t\tupdateSearchList();\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tlet shouldFocusInput = true;\r\n\t\tinnerContainer.onclick = e => {\r\n\t\t\tif (e.target instanceof HTMLButtonElement ||\r\n\t\t\t\t(this.isMultiple &&\r\n\t\t\t\t\te.target instanceof HTMLElement &&\r\n\t\t\t\t\te.target.classList.contains('select-item') &&\r\n\t\t\t\t\te.target.classList.contains('placeholder') === false)) {\r\n\t\t\t\tshouldFocusInput = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (shouldFocusInput) {\r\n\t\t\t\tinput.hidden = false;\r\n\t\t\t\tinput.focus();\r\n\t\t\t}\r\n\r\n\t\t\tshouldFocusInput = true;\r\n\t\t};\r\n\r\n\t\tinput.onfocus = () => {\r\n\t\t\tdropdown.classList.remove('border-top-0');\r\n\t\t\tdropdown.classList.remove('border-bottom-0');\r\n\t\t\tdropdownlist.hidden = false;\r\n\t\t};\r\n\r\n\t\tinput.onblur = e => {\r\n\t\t\tlet target = e.target as HTMLElement;\r\n\t\t\tif (target.nodeName === '#text') {\r\n\t\t\t\ttarget = target.parentElement as HTMLElement;\r\n\t\t\t}\r\n\r\n\t\t\tconst targetIsItem =\r\n\t\t\t\ttarget instanceof HTMLDivElement &&\r\n\t\t\t\ttarget.classList.contains('select-item') &&\r\n\t\t\t\ttarget.parentElement instanceof HTMLDivElement &&\r\n\t\t\t\ttarget.parentElement.classList.contains('select-dropdown-list');\r\n\r\n\t\t\tif (targetIsItem) {\r\n\t\t\t\tinput.value = '';\r\n\t\t\t\tthis.select(target.dataset.value);\r\n\t\t\t\tshouldFocusInput = true;\r\n\t\t\t} else {\r\n\t\t\t\tshouldFocusInput = e.relatedTarget !== container && e.relatedTarget !== innerContainer;\r\n\t\t\t}\r\n\r\n\t\t\tdropdown.classList.add('border-top-0');\r\n\t\t\tdropdown.classList.add('border-bottom-0');\r\n\t\t\tdropdownlist.hidden = true;\r\n\r\n\t\t\tinput.hidden = true;\r\n\t\t};\r\n\r\n\t\tinput.oninput = () => {\r\n\t\t\tupdateSearchList();\r\n\t\t};\r\n\t}\r\n\r\n\tpublic $onDestroy() {\r\n\t\tif (typeof this.destroyCurrentWatcher === 'function') {\r\n\t\t\tthis.destroyCurrentWatcher();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getDisplayText(value: any) {\r\n\t\tif (value == null) {\r\n\t\t\treturn SelectController.GetPlaceholder(this.$attrs);\r\n\t\t}\r\n\r\n\t\t// tslint:disable-next-line:triple-equals\r\n\t\treturn this.list.find(x => x[this.value] == value)[this.text];\r\n\t}\r\n\r\n\tpublic remove(item: any) {\r\n\t\t// tslint:disable-next-line:triple-equals\r\n\t\tthis.ngModel = this.ngModel.filter((x: any) => x != item);\r\n\t}\r\n\r\n\tpublic clear() {\r\n\t\tthis.ngModel = undefined;\r\n\t\tthis.searchList = this.getSearchList(this.list);\r\n\t}\r\n\r\n\tpublic select(value: any) {\r\n\t\tif (this.isMultiple) {\r\n\t\t\tthis.ngModel = Array.isArray(this.ngModel)\r\n\t\t\t\t? this.ngModel.includes(value)\r\n\t\t\t\t\t? this.ngModel\r\n\t\t\t\t\t: this.ngModel.concat(value)\r\n\t\t\t\t: [value];\r\n\t\t} else {\r\n\t\t\tthis.ngModel = value;\r\n\t\t}\r\n\r\n\t\tthis.searchList = this.getSearchList(this.list);\r\n\t\tthis.$scope.$applyAsync();\r\n\t}\r\n\r\n\tprivate getSearchList(list: any[]) {\r\n\t\t// tslint:disable:triple-equals\r\n\t\treturn Array.isArray(this.ngModel)\r\n\t\t\t? list.filter(x => this.ngModel.every((y: any) => x[this.value] != y))\r\n\t\t\t: this.ngModel == null\r\n\t\t\t\t? cloneDeep(list)\r\n\t\t\t\t: list.filter(x => x[this.value] != this.ngModel);\r\n\t\t// tslint:enable:triple-equals\r\n\t}\r\n}\r\n\r\nexport const selectList: NgInputOptions = {\r\n\ttype: 'input',\r\n\trender(h) {\r\n\t\tconst select = h.createHtmlElement(\r\n\t\t\t'select',\r\n\t\t\t['form-control', 'select-input', 'd-none'],\r\n\t\t\t[\r\n\t\t\t\t['ng-attr-name', '{{id}}_{{$ctrl.uniqueId}}'],\r\n\t\t\t\t['ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}'],\r\n\t\t\t\t['ng-model', '$ctrl.ngModel'],\r\n\t\t\t],\r\n\t\t);\r\n\r\n\t\tconst isMultiple = SelectController.IsMultiple(this.$attrs);\r\n\t\tif (isMultiple) {\r\n\t\t\tselect.setAttribute('multiple', 'true');\r\n\t\t} else {\r\n\t\t\tconst placeholder = h.createHtmlElement('option');\r\n\r\n\t\t\tplaceholder.setAttribute('placeholder', 'true');\r\n\t\t\tplaceholder.text = SelectController.GetPlaceholder(this.$attrs);\r\n\t\t\tplaceholder.value = '';\r\n\r\n\t\t\tselect.appendChild(placeholder);\r\n\t\t}\r\n\r\n\t\tif (NgService.IsMobile()) {\r\n\t\t\tselect.classList.remove('d-none');\r\n\t\t\tselect.setAttribute(\r\n\t\t\t\t'ng-options',\r\n\t\t\t\t'item[\\'{{$ctrl.value}}\\'] as item[\\'{{$ctrl.text}}\\'] for item in $ctrl.searchList track by $index',\r\n\t\t\t);\r\n\t\t\treturn select;\r\n\t\t}\r\n\r\n\t\tconst inner = h.createHtmlElement('div', ['select-inner-container']);\r\n\t\tconst innerlist = h.createHtmlElement('div', ['select-list', isMultiple ? 'multiple' : 'single']);\r\n\t\tconst selected = h.createHtmlElement('div', ['select-item']);\r\n\r\n\t\tconst btn = h.createHtmlElement('button', ['select-button'],\r\n\t\t\t[\r\n\t\t\t\t['ng-attr-aria-label', 'Remove item: \\'{{$ctrl.getDisplayText($ctrl.ngModel)}}\\''],\r\n\t\t\t\t['ng-click', '$ctrl.clear()'],\r\n\t\t\t],\r\n\t\t);\r\n\r\n\t\tif (isMultiple) {\r\n\t\t\tconst sbtn = btn.cloneNode() as HTMLButtonElement;\r\n\t\t\tsbtn.setAttribute('ng-attr-aria-label', 'Remove item: \\'{{$ctrl.getDisplayText(item)}}\\'');\r\n\t\t\tsbtn.setAttribute('ng-click', '$ctrl.remove(item)');\r\n\r\n\t\t\tselected.setAttribute('ng-repeat', 'item in $ctrl.ngModel track by $index');\r\n\t\t\tselected.setAttribute('aria-selected', 'true');\r\n\t\t\tselected.innerHTML = `{{$ctrl.getDisplayText(item)}}${sbtn.outerHTML}`;\r\n\r\n\t\t\tconst placeholder = h.createHtmlElement('div', ['select-item', 'placeholder'], [['ng-if', '$ctrl.ngModel == null || $ctrl.ngModel.length === 0']]);\r\n\t\t\tplaceholder.innerText = SelectController.GetPlaceholder(this.$attrs);\r\n\r\n\t\t\tinnerlist.appendChild(placeholder);\r\n\t\t} else {\r\n\t\t\tselected.setAttribute('ng-class', '{ \\'placeholder\\': $ctrl.ngModel == null }');\r\n\t\t\tselected.innerText = '{{$ctrl.getDisplayText($ctrl.ngModel)}}';\r\n\t\t}\r\n\r\n\t\tconst item = h.createHtmlElement('div', ['select-item'],\r\n\t\t\t[\r\n\t\t\t\t['ng-repeat', 'item in $ctrl.searchList track by $index'],\r\n\t\t\t\t['ng-attr-data-value', '{{item[$ctrl.value]}}'],\r\n\t\t\t\t['role', 'option'],\r\n\t\t\t],\r\n\t\t);\r\n\t\titem.innerText = '{{item[$ctrl.text]}}';\r\n\r\n\t\tconst list = h.createHtmlElement('div', ['select-dropdown-list'],\r\n\t\t\t[\r\n\t\t\t\t['dir', 'ltr'],\r\n\t\t\t\t['role', 'listbox'],\r\n\t\t\t\t['hidden', 'true'],\r\n\t\t\t],\r\n\t\t);\r\n\r\n\t\tconst input = h.createHtmlElement('input', ['select-input'],\r\n\t\t\t[\r\n\t\t\t\t['type', 'text'],\r\n\t\t\t\t['autocomplete', 'off'],\r\n\t\t\t\t['autocapitalize', 'off'],\r\n\t\t\t\t['spellcheck', 'false'],\r\n\t\t\t\t['role', 'textbox'],\r\n\t\t\t\t['aria-autocomplete', 'list'],\r\n\t\t\t\t['placeholder', ''],\r\n\t\t\t\t['aria-label', 'Select List'],\r\n\t\t\t\t['hidden', 'true'],\r\n\t\t\t],\r\n\t\t);\r\n\r\n\t\tconst type = `select-${isMultiple ? 'multiple' : 'one'}`;\r\n\t\tconst container = h.createHtmlElement('div', ['select-container'],\r\n\t\t\t[\r\n\t\t\t\t['data-type', type],\r\n\t\t\t\t['role', 'combobox'],\r\n\t\t\t\t['tabindex', '0'],\r\n\t\t\t\t['aria-autocomplete', 'list'],\r\n\t\t\t\t['aria-haspopup', 'true'],\r\n\t\t\t\t['aria-expanded', 'false'],\r\n\t\t\t\t['dir', 'ltr'],\r\n\t\t\t\t['ng-attr-name', `${type}_{{$ctrl.uniqueId}}`],\r\n\t\t\t\t['ng-attr-id', `${type}_{{$ctrl.uniqueId}}`],\r\n\t\t\t],\r\n\t\t);\r\n\r\n\t\tconst dropdown = h.createHtmlElement('div', ['select-dropdown', 'border-bottom-0', 'border-top-0'], [['aria-expanded', 'false']]);\r\n\r\n\t\tinnerlist.appendChild(selected);\r\n\t\tinnerlist.appendChild(btn);\r\n\t\tinner.appendChild(select);\r\n\t\tinner.appendChild(innerlist);\r\n\r\n\t\tlist.appendChild(item);\r\n\r\n\t\tdropdown.appendChild(input);\r\n\t\tdropdown.appendChild(list);\r\n\r\n\t\tcontainer.appendChild(inner);\r\n\t\tcontainer.appendChild(dropdown);\r\n\r\n\t\treturn container;\r\n\t},\r\n\tcontroller: SelectController,\r\n\tbindings: {\r\n\t\tlist: '<',\r\n\t},\r\n};\r\n","import { NgApp } from './src/app';\nimport { inputs } from './src/inputs';\nimport { misc } from './src/misc';\nimport { NgAppConfig } from './src/options';\n\n// @ts-ignore\nimport ngAnimate from 'angular-animate';\n// @ts-ignore\nimport ngMessages from 'angular-messages';\nimport uirouter from '@uirouter/angularjs';\n\nexport const app = makeDefaultApp({ });\n\nexport function makeDefaultApp(config: Partial<NgAppConfig>) {\n\treturn new NgApp(config)\n\t\t.addComponents(inputs)\n\t\t.addComponents(misc)\n\t\t.addDependencies(\n\t\t\tngAnimate,\n\t\t\tngMessages,\n\t\t\tuirouter,\n\t\t)\n\t\t.addHttpInterceptor({\n\t\t\tasync responseError(response, err) {\n\t\t\t\tconst { status, statusText, url } = response;\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase 404:\n\t\t\t\t\t\tapp.log.error(`Route '${url}' not found`);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 400:\n\t\t\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\t\t\tapp.log.error(data);\n\t\t\t\t\t\t} else if (data != null && data.toString() === '[object Object]') {\n\t\t\t\t\t\t\tapp.log.error(Object.keys(data).map(x => `${x}: ${data[x]}`).join('\\n\\n'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 401:\n\t\t\t\t\tcase 403:\n\t\t\t\t\tcase 500:\n\t\t\t\t\t\tapp.log.warning(statusText);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase -1:\n\t\t\t\t\t\tapp.log.warning('Server timed out.');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tapp.log.error(`The request to '${url}' returned an error (code: ${status})`);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\treturn err;\n\t\t\t},\n\t\t});\n}\n\nexport * from './src/app';\nexport * from './src/attributes';\nexport * from './src/controller';\nexport * from './src/http';\nexport * from './src/icon';\nexport * from './src/logger';\nexport * from './src/modal';\nexport * from './src/ng';\nexport * from './src/options';\nexport * from './src/renderer';\nexport * from './src/router';\nexport * from './src/service';\n\nexport * from './src/inputs';\nexport * from './src/misc';\n","import isIE11 from '@ledge/is-ie-11';\r\n\r\nexport class NgService {\r\n\tpublic static IsMobile() {\r\n\t\treturn typeof window === 'object' && window.innerWidth < 767;\r\n\t}\r\n\r\n\tpublic static IsIE11() {\r\n\t\treturn isIE11();\r\n\t}\r\n\r\n\t/**\r\n\t * @see https://stackoverflow.com/a/2117523\r\n\t */\r\n\tpublic static UUIDv4() {\r\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n\t\t\t// tslint:disable:no-bitwise\r\n\t\t\tconst r = Math.random() * 16 | 0;\r\n\t\t\tconst v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n\t\t\t// tslint:enable:no-bitwise\r\n\t\t\treturn v.toString(16);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic readonly uniqueId = this.UUIDv4().replace(/[-]|[,]/g, '');\r\n\r\n\tpublic UUIDv4() {\r\n\t\treturn NgService.UUIDv4();\r\n\t}\r\n\r\n\tprotected get isMobile() {\r\n\t\treturn NgService.IsMobile();\r\n\t}\r\n\r\n\tprotected get isIE11() {\r\n\t\treturn NgService.IsIE11();\r\n\t}\r\n\r\n\t/**\r\n\t * Separates words in a string by capital letters. Also capitalizes the first letter.\r\n\t *\r\n\t * The following exceptions apply:\r\n\t * 1) If string is all-caps, it's returned as-is\r\n\t * 2) Any embedded acronyms (such as F.A.Q.) are returned as-is\r\n\t * 3) Consecutive capital letters are returned as-is\r\n\t * 3) Hyphenated words retain concatenation\r\n\t *\r\n\t * @param item - The string value to be split\r\n\t */\r\n\tpublic splitByCapitalLetter(item: string) {\r\n\t\tconst split = item.split(/(?=[A-Z])/);\r\n\t\treturn split.every(x => x.length === 1)\r\n\t\t\t? item\r\n\t\t\t: split\r\n\t\t\t\t.map(x => x.trim())\r\n\t\t\t\t.map(x =>\r\n\t\t\t\t\tx.length === 1 || (x.length === 2 && x.charAt(1) === '.')\r\n\t\t\t\t\t\t? (x.toUpperCase() + '\\uFFFF')\r\n\t\t\t\t\t\t: (x.charAt(0).toUpperCase() + x.substring(1)),\r\n\t\t\t\t)\r\n\t\t\t\t.join(' ')\r\n\t\t\t\t.replace(\r\n\t\t\t\t\t/\\w{1}\\.?(\\uFFFF){1}\\s?/g,\r\n\t\t\t\t\t([first, second]) =>\r\n\t\t\t\t\t\tsecond === '.'\r\n\t\t\t\t\t\t\t? first + second\r\n\t\t\t\t\t\t\t: first,\r\n\t\t\t\t)\r\n\t\t\t\t.replace(\r\n\t\t\t\t\t/\\.{1}\\w{2,}/g,\r\n\t\t\t\t\t([first, second, ...rest]) =>\r\n\t\t\t\t\t\t`${first} ${second.toUpperCase()}${rest.join('')}`,\r\n\t\t\t\t)\r\n\t\t\t\t.replace(/- /g, '-');\r\n\t}\r\n}\r\n","import { injector } from 'angular';\r\n\r\nexport type NgInjector = ReturnType<typeof injector>;\r\nexport type NgScope = angular.IScope;\r\n\r\nexport { injector };\r\nexport { bootstrap, module } from 'angular';\r\n","import { NgAppConfig } from './options';\nimport { Indexed } from '@ledge/types';\nimport { autobind } from 'core-decorators';\n\nimport { NgAttributes } from './attributes';\nimport { NgHttp } from './http';\nimport { NgLogger } from './logger';\nimport { NgService } from './service';\nimport { NgInjector, NgScope } from './ng';\nimport { NgRenderer } from './renderer';\nimport { NgStateService } from './router';\n\nexport class NgController extends NgService {\n\tpublic readonly $scope: NgScope;\n\tpublic readonly $attrs: NgAttributes;\n\tpublic readonly $injector: NgInjector;\n\n\tpublic readonly $config: NgAppConfig;\n\tpublic readonly $log: NgLogger;\n\tpublic readonly $http: NgHttp;\n\tpublic readonly $state: NgStateService;\n\tpublic readonly $renderer: NgRenderer;\n\tpublic readonly $element: HTMLElement;\n\n\tpublic readonly isProduction: boolean;\n\tpublic readonly isDevelopment: boolean;\n\tpublic readonly isStaging: boolean;\n\tpublic readonly apiPrefix: string;\n\n\tpublic openWebAddress(address: string) {\n\t\tthis.$log.confirm(`You are being sent to ${address}. Continue?`).then(() => window.open(`http://${address}`));\n\t}\n\n\t/**\n\t * Called on each controller after all the controllers on an element have been constructed and had their bindings\n\t * initialized (and before the pre & post linking functions for the directives on this element). This is a good\n\t * place to put initialization code for your controller.\n\t */\n\tpublic $onInit?(): void;\n\n\t/**\n\t * Called on each turn of the digest cycle. Provides an opportunity to detect and act on changes.\n\t * Any actions that you wish to take in response to the changes that you detect must be invoked from this hook;\n\t * implementing this has no effect on when `$onChanges` is called. For example, this hook could be useful if you wish\n\t * to perform a deep equality check, or to check a `Date` object, changes to which would not be detected by Angular's\n\t * change detector and thus not trigger `$onChanges`. This hook is invoked with no arguments; if detecting changes,\n\t * you must store the previous value(s) for comparison to the current values.\n\t */\n\tpublic $doCheck?(): void;\n\n\t/**\n\t * Called whenever one-way bindings are updated. The onChangesObj is a hash whose keys are the names of the bound\n\t * properties that have changed, and the values are an object of the form { currentValue, previousValue, isFirstChange() }.\n\t * Use this hook to trigger updates within a component such as cloning the bound value to prevent accidental mutation of the outer value.\n\t */\n\tpublic $onChanges?<T = any>(onChangesObj: {\n\t\t[property: string]: {\n\t\t\tcurrentValue: T;\n\t\t\tpreviousValue: T;\n\t\t\tisFirstChange(): boolean;\n\t\t},\n\t}): void;\n\n\t/**\n\t * Called on a controller when its containing scope is destroyed. Use this hook for releasing external resources,\n\t * watches and event handlers.\n\t */\n\tpublic $onDestroy?(): void;\n\n\t/**\n\t * Called after this controller's element and its children have been linked. Similar to the post-link function this\n\t * hook can be used to set up DOM event handlers and do direct DOM manipulation. Note that child elements that contain\n\t * templateUrl directives will not have been compiled and linked since they are waiting for their template to load\n\t * asynchronously and their own compilation and linking has been suspended until that occurs. This hook can be considered\n\t * analogous to the ngAfterViewInit and ngAfterContentInit hooks in Angular 2. Since the compilation process is rather\n\t * different in Angular 1 there is no direct mapping and care should be taken when upgrading.\n\t */\n\tpublic $postLink?(): void;\n}\n\nexport function makeNg1Controller<T extends NgController>(ctrl: new () => T, locals: {\n\tlog: NgLogger,\n\thttp: NgHttp,\n\trenderer: NgRenderer,\n\tattrs?: Indexed,\n\tconfig(): NgAppConfig;\n}) {\n\tautobind(ctrl);\n\treturn class Ng1Controller extends (ctrl as new () => any) {\n\t\tpublic $log = locals.log;\n\t\tpublic $http = locals.http;\n\t\tpublic $renderer = locals.renderer;\n\t\tpublic $state: NgStateService;\n\t\tpublic $attrs: NgAttributes;\n\t\tpublic $element: HTMLElement;\n\n\t\tpublic get $config() {\n\t\t\treturn locals.config();\n\t\t}\n\t\tpublic get isProduction() {\n\t\t\treturn this.$config.IS_PROD;\n\t\t}\n\t\tpublic get isDevelopment() {\n\t\t\treturn this.$config.IS_DEV;\n\t\t}\n\t\tpublic get isStaging() {\n\t\t\treturn this.$config.IS_STAGING;\n\t\t}\n\t\tpublic get apiPrefix() {\n\t\t\treturn this.$config.API_HOST;\n\t\t}\n\n\t\tconstructor(\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\tpublic $scope: NgScope,\n\t\t\tpublic $injector: NgInjector,\n\t\t) {\n\t\t\tsuper();\n\n\t\t\tthis.$element = $element[0];\n\t\t\tthis.$attrs = new NgAttributes(this.$element, locals.attrs);\n\t\t\tthis.$state = this.$injector.get('$state');\n\t\t}\n\t} as new (\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\t$scope: NgScope,\n\t\t\t$injector: NgInjector,\n\t\t) => T;\n}\n","import { IConfig, Indexed } from '@ledge/types';\nimport { autobind } from 'core-decorators';\n\nimport { NgAttributes } from './attributes';\nimport { NgController, makeNg1Controller } from './controller';\n\n@autobind\nexport class NgAppConfig implements IConfig {\n\tpublic readonly IS_PROD: boolean;\n\tpublic readonly IS_DEV: boolean;\n\tpublic readonly IS_STAGING: boolean;\n\n\t/**\n\t * The name of the library or application.\n\t */\n\tpublic readonly NAME: string;\n\n\t/**\n\t * The current library or application version, either as a string (e.g. 1.0.0 or v1) or as a number (e.g. 1 or 2.3)\n\t */\n\tpublic readonly VERSION: string | number;\n\n\t/**\n\t * The host environment for the library or application.\n\t */\n\tpublic readonly ENV: string;\n\n\t/**\n\t * The hostname for the API\n\t */\n\tpublic readonly API_HOST: string;\n\n\tconstructor({\n\t\tNAME = 'ng-app',\n\t\tENV = '',\n\t\tAPI_HOST = '',\n\t}: Partial<NgAppConfig> = { }) {\n\t\tif (ENV == null || ENV.length === 0) {\n\t\t\tENV = process.env.NODE_ENV as string;\n\t\t}\n\t\tthis.ENV = ENV;\n\n\t\tthis.IS_PROD = ENV === 'production';\n\t\tthis.IS_DEV = ENV === 'development';\n\t\tthis.IS_STAGING = ENV === 'staging';\n\n\t\tthis.NAME = NAME;\n\t\tthis.API_HOST = API_HOST;\n\t}\n}\n\n/**\n * Component definition object (a simplified directive definition object)\n */\nexport interface NgComponentOptions<T = typeof NgController> {\n\t/**\n\t * Controller constructor function that should be associated with newly created scope or the name of a registered\n\t * controller if passed as a string. Empty function by default.\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\tcontroller?: T | ['$element', '$scope', '$injector', ReturnType<typeof makeNg1Controller>];\n\n\t/**\n\t * @deprecated For consistency this will always be the historical default `$ctrl`. ng-app's architecture ensures all scopes are isolates, so there's no risk of scope leakage.\n\t *\n\t * An identifier name for a reference to the controller. If present, the controller will be published to its scope under\n\t * the specified name. If not present, this will default to `$ctrl`.\n\t */\n\tcontrollerAs?: never;\n\n\t/**\n\t * html template as a string or a function that returns an html template as a string which should be used as the\n\t * contents of this component. Empty string by default.\n\t * If template is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplate?: string | (() => string) | (string | (($element: [HTMLElement], $attrs: NgAttributes) => string))[];\n\n\t/**\n\t * Path or function that returns a path to an html template that should be used as the contents of this component.\n\t * If templateUrl is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplateUrl?: never;\n\n\t/**\n\t * Define DOM attribute binding to component properties. Component properties are always bound to the component\n\t * controller and not to the scope.\n\t */\n\tbindings?: Indexed<string>;\n\n\t/**\n\t * Whether transclusion is enabled. Disabled by default.\n\t */\n\ttransclude?: boolean | Indexed<string>;\n\n\t/**\n\t * Requires the controllers of other directives and binds them to this component's controller.\n\t * The object keys specify the property names under which the required controllers (object values) will be bound.\n\t * Note that the required controllers will not be available during the instantiation of the controller,\n\t * but they are guaranteed to be available just before the $onInit method is executed!\n\t */\n\trequire?: Indexed<string>;\n}\n"],"sourceRoot":""}