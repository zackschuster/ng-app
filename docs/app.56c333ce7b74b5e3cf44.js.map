{"version":3,"sources":["webpack:///./src/inputs/shared/controller.ts","webpack:///./src/inputs/radio-list.ts","webpack:///./src/logger.ts","webpack:///./src/inputs/text-input.ts","webpack:///./src/inputs/index.ts","webpack:///./src/inputs/shared/index.ts","webpack:///./src/inputs/shared/factory.ts","webpack:///./docs/src/app.ts","webpack:///./src/app.ts","webpack:///./src/inputs/date-input.ts","webpack:///./src/modal.ts","webpack:///./src/http.ts","webpack:///./src/misc/app-icon.ts","webpack:///./src/misc/app-spinner.ts","webpack:///./src/misc/index.ts","webpack:///./src/attributes.ts","webpack:///./src/icon.ts","webpack:///./src/inputs/check-box.ts","webpack:///./src/router.ts","webpack:///./src/renderer.ts","webpack:///./src/inputs/text-box.ts","webpack:///./src/inputs/select-list.ts","webpack:///./index.ts","webpack:///./src/service.ts","webpack:///./src/ng.ts","webpack:///./src/controller.ts","webpack:///./src/options.ts"],"names":["NgInputController","_super","_this","call","this","setTimeout","$contain","$element","querySelector","children","length","isIE11","removeNode","remove","$scope","$watch","ngModel","curr","prev","lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default","ngModelCtrl","$setViewValue","Object","keys","$validators","every","x","$commitViewValue","__extends","_controller__WEBPACK_IMPORTED_MODULE_1__","radioList","type","templateClass","labelClass","render","h","radio","createInput","_a","$attrs","value","setAttribute","style","setProperty","hasOwnProperty","$template","classList","add","renderLabel","text","labelText","document","createTextNode","$label","appendChild","bindings","list","ngChecked","controller","RadioListController","prototype","$postLink","fieldset","closest","legend","span","createElement","innerText","_shared__WEBPACK_IMPORTED_MODULE_0__","LogTypeToastBackgrounds","NgToast","$renderer","options","toast","createHtmlElement","toastBody","toastHeader","toastHeaderTimestamp","setBodyText","setType","container","el","innerHTML","show","timeout","animejs__WEBPACK_IMPORTED_MODULE_0__","targets","translateX","duration","easing","begin","Date","toLocaleTimeString","navigator","language","replace","Promise","resolve","hideAnimation","autoplay","complete","removeEventListener","play","resetAnimationOnMouseover","resumeAnimationOnMouseout","isAutoClose","Number","isInteger","makeTimeout","autoCloseId","undefined","wasClosing","progress","clearTimeout","restart","pause","addEventListener","hide","click","parentElement","removeChild","NgConsole","$debug","items","_i","arguments","console","debug","apply","__spread","$error","error","$info","info","$warn","warn","$log","log","$success","_service__WEBPACK_IMPORTED_MODULE_1__","NgLogger","isProd","toasts","body","clear","forEach","confirm","msg","okBtn","cancelBtn","footer","notify","reject","removeListeners","ok","cancel","isTemporary","success","warning","devWarning","then","index","findIndex","is","splice","push","TextInputController","$onInit","minlength","minVal","val","min","maxVal","max","pattern","validators","textInput","canHaveIcon","attrs","maxlength","placeholder","input","isRange","postRender","textContent","step","htmlInput","assign","__webpack_require__","d","__webpack_exports__","inputs","_check_box__WEBPACK_IMPORTED_MODULE_0__","_date_input__WEBPACK_IMPORTED_MODULE_1__","_radio_list__WEBPACK_IMPORTED_MODULE_2__","_select_list__WEBPACK_IMPORTED_MODULE_3__","_text_box__WEBPACK_IMPORTED_MODULE_4__","_text_input__WEBPACK_IMPORTED_MODULE_5__","_shared__WEBPACK_IMPORTED_MODULE_6__","o","checkBox","dateInput","selectList","textBox","_controller__WEBPACK_IMPORTED_MODULE_0__","_options__WEBPACK_IMPORTED_MODULE_1__","_factory__WEBPACK_IMPORTED_MODULE_2__","NgInputFactory","renderer","$validationAttrs","$validationMessages","Map","$validationExps","$invalid","$touched","$formInvalid","$isInvalid","makeBaseComponent","$transclude","createSlot","getDefaultLabelText","_h","isRadioOrCheckbox","makeBaseOptions","transclude","contain","require","ngModelOptions","ngDisabled","ngReadonly","ngRequired","modelIdentifier","split","pop","map","isNaN","charAt","toUpperCase","substring","join","getInputInput","$input","includes","tagName","defineInputComponent","component","$component","$definition","template","$el","isRadio","isRequired","isSrOnly","createLabel","createIconInput","icon","marginTop","requiredTag","firstElementChild","$inputInput","filter","s","toLowerCase","startsWith","$html","$validationBlock","_c","_d","__values","entries","_e","next","done","_f","__read","key","set","_b","concat","has","$message","get","$newTpl","outerHTML","prop","RegExp","ModalController","title","_index__WEBPACK_IMPORTED_MODULE_0__","AppController","openModal","modal","open","openConfirmToast","catch","module","makeComponentController","configure","API_HOST","bootstrap","NgApp","config","$id","ng1injector","_ng__WEBPACK_IMPORTED_MODULE_7__","$components","$httpInterceptors","$dependencies","$module","$bootstrap","$injector","_angular_core__WEBPACK_IMPORTED_MODULE_1__","create","name","providers","provide","HTMLDocument","useValue","_options__WEBPACK_IMPORTED_MODULE_8__","useFactory","$config","deps","_service__WEBPACK_IMPORTED_MODULE_11__","_renderer__WEBPACK_IMPORTED_MODULE_9__","_inputs__WEBPACK_IMPORTED_MODULE_4__","_logger__WEBPACK_IMPORTED_MODULE_5__","r","c","IS_PROD","_http__WEBPACK_IMPORTED_MODULE_3__","interceptors","onFinally","forceUpdate","_modal__WEBPACK_IMPORTED_MODULE_6__","l","$compileProvider","$locationProvider","$qProvider","IS_DEV","IS_STAGING","debugInfoEnabled","commentDirectivesEnabled","cssClassDirectivesEnabled","html5Mode","errorOnUnhandledRejections","$stateProvider","router","getRoutes","definition","state","run","$animate","enabled","defineProperty","$router","Set","injector","$applyAsync","strictDi","class_1","_router__WEBPACK_IMPORTED_MODULE_10__","setRouter","addComponents","components","entries_1","entries_1_1","isInputComponent","addDependencies","moduleNames","addHttpInterceptor","interceptor","rawCtrl","_controller__WEBPACK_IMPORTED_MODULE_2__","http","__decorate","core_decorators__WEBPACK_IMPORTED_MODULE_0__","isNumber","n","removeAttribute","iconInput","inputGroupAppend","inputGroupText","clearIcon","createIcon","minDate","maxDate","DateInputController","SUPPORTED_MODES","modelVal","valueOf","inline","mode","id","flatpickr","flatpickr__WEBPACK_IMPORTED_MODULE_0___default","dateFormat","defaultDate","nextArrow","prevArrow","allowInput","weekNumbers","wrap","enable","parse","onChange","selected","$onDestroy","destroy","getMinDate","toLocaleDateString","getMaxDate","_shared__WEBPACK_IMPORTED_MODULE_1__","NgModal","$http","$compile","$rootScope","backdrop","uniqueId","headerCloseButton","header","content","footerCancelButton","footerOkButton","dialog","onClose","cancelBtnText","okBtnText","$new","$ctrl","escapeKeyListener","e","close","dismiss","removeEventListeners","window","scope","$destroy","NgHttpOptions","init","host","ssl","location","protocol","keepalive","cache","credentials","redirect","referrerPolicy","NgHttp","request","response","responseError","Get","url","fetch","Post","data","Patch","Put","Delete","Jsonp","getFullUrl","uri","URL","toJSON","method","Response","abortCtrl_1","AbortController","Request","signal","JSON","stringify","_g","onRequest","_o","sent","abortTimer","abort","json","_j","_k","onResponse","Error","_l","_m","onResponseError","clone","err_1","_service__WEBPACK_IMPORTED_MODULE_0__","appIcon","IconController","iconName","width","height","appSpinner","SpinnerController","colors","app_spinner_extends","color","srDesc","spinner","misc","NgAttributes","$$element","$attr","PREFIX_REGEXP","SPECIAL_CHARS_REGEXP","Array","from","attributes","$record","$normalize","_","letter","offset","$hasClass","className","contains","$addClass","$removeClass","$updateClass","newClasses","oldClasses","nu","old","old_1","old_1_1","nu_1","nu_1_1","$set","$observe","__","normalized","octicons","symbol","version","viewBox","class","aria-hidden","toSVG","attrObj","parseInt","trim","role","option","htmlAttributes","path","NgRouter","routes","registerRoute","partial","generateRouteMeta","parent","isNgTransitionFn","onEnter","onExit","onRetain","isAuthorized","generateIntIdParam","param","_uirouter_core__WEBPACK_IMPORTED_MODULE_0__","decode","encode","toString","equals","a","b","generateIntQueryParam","item","annotateResolveFunctions","resolveFn","isArray","params","isBase","NgRenderer","baseInputAttrs","classes","classes_1","classes_1_1","addClass","attrs_1","attrs_1_1","$isRange","$isRadio","$isCheckbox","$class","$inputAttrs","shift","createTextArea","_icon__WEBPACK_IMPORTED_MODULE_1__","sort","svg","aria-label","$span","inputGroupAttrs","$inputGroup","$inputGroupPrepend","$inputGroupText","$icon","createText","createComment","newChild","insertBefore","refChild","removeClass","setStyle","flags","_angular_core__WEBPACK_IMPORTED_MODULE_0__","Important","removeStyle","removeProperty","setValue","node","nodeValue","parentNode","nextSibling","selectRootElement","selectorOrNode","preserveContent","listen","target","eventName","callback","textArea","TextBoxController","$mirror","element","computedStyle","getComputedStyle","boxOuter","getPropertyValue","minHeightValue","heightValue","minHeight","Math","maxHeight","mirror","adjust","requestAnimationFrame","scrollHeight","overflow","$on","styles_1","styles_1_1","SelectController","isListOpen","IsMultiple","GetPlaceholder","MultiplePlaceholder","SinglePlaceholder","_text","_value","fuzzer","innerContainer","dropdown","dropdownlist","updateSearchList","searchList","getSearchList","search","lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default","$watchCollection","fuse_js__WEBPACK_IMPORTED_MODULE_0___default","shouldSort","threshold","distance","maxPatternLength","minMatchCharLength","shouldFocusInput","onclick","HTMLButtonElement","isMultiple","HTMLElement","hidden","focus","onfocus","onblur","nodeName","HTMLDivElement","select","dataset","relatedTarget","oninput","destroyCurrentWatcher","getDisplayText","find","y","_shared__WEBPACK_IMPORTED_MODULE_3__","_ledge_is_mobile__WEBPACK_IMPORTED_MODULE_2__","inner","innerlist","btn","sbtn","cloneNode","app","_src_app__WEBPACK_IMPORTED_MODULE_0__","_src_inputs__WEBPACK_IMPORTED_MODULE_1__","_src_misc__WEBPACK_IMPORTED_MODULE_2__","angular_animate__WEBPACK_IMPORTED_MODULE_3___default","angular_messages__WEBPACK_IMPORTED_MODULE_4___default","_uirouter_angularjs__WEBPACK_IMPORTED_MODULE_5__","err","status","statusText","NgService","UUIDv4","_ledge_is_mobile__WEBPACK_IMPORTED_MODULE_1__","_ledge_is_ie_11__WEBPACK_IMPORTED_MODULE_0__","random","splitByCapitalLetter","first","second","rest","slice","angular__WEBPACK_IMPORTED_MODULE_0__","NgController","openWebAddress","address","_service__WEBPACK_IMPORTED_MODULE_2__","makeNg1Controller","ctrl","locals","Ng1Controller","_attributes__WEBPACK_IMPORTED_MODULE_1__","$state","NgAppConfig","NAME","ENV"],"mappings":"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","file":"app.56c333ce7b74b5e3cf44.js","sourcesContent":["import isEqual from 'lodash/isEqual';\nimport { Indexed } from '@ledge/types';\nimport { NgController } from '../../controller';\n\nexport class NgInputController<T = any> extends NgController {\n\tpublic ngModel: any;\n\tpublic ngModelCtrl: NgModelController<T>;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tsetTimeout(() => {\n\t\t\tconst $contain = this.$element.querySelector('[ng-transclude=\"contain\"]');\n\t\t\tif ($contain != null && $contain.children.length === 0) {\n\t\t\t\tif (this.isIE11) {\n\t\t\t\t\t($contain as any).removeNode(true);\n\t\t\t\t} else {\n\t\t\t\t\t$contain.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.$scope.$watch(\n\t\t\t\t() => this.ngModel,\n\t\t\t\t(curr: any, prev: any) => {\n\t\t\t\t\tif (isEqual(curr, prev) === false) {\n\t\t\t\t\t\tthis.ngModelCtrl.$setViewValue(curr);\n\t\t\t\t\t\tconst isValid = Object\n\t\t\t\t\t\t\t.keys(this.ngModelCtrl.$validators)\n\t\t\t\t\t\t\t.every(x => {\n\t\t\t\t\t\t\t\treturn this.ngModelCtrl.$validators[x](curr, curr);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tif (isValid) {\n\t\t\t\t\t\t\tthis.ngModelCtrl.$commitViewValue();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n}\n\nexport interface NgModelController<T = any> {\n\t$viewValue: T;\n\t$modelValue: T;\n\n\t$error: { [validationErrorKey: string]: boolean };\n\t$name?: string;\n\n\treadonly $touched: boolean;\n\treadonly $untouched: boolean;\n\n\t$validators: {\n\t\t/**\n\t\t * viewValue is any because it can be an object that is called in the view like $viewValue.name:$viewValue.subName\n\t\t */\n\t\t[index: string]: (modelValue: any, viewValue: any) => boolean;\n\t};\n\n\t$pending?: { [validationErrorKey: string]: boolean };\n\treadonly $pristine: boolean;\n\treadonly $dirty: boolean;\n\treadonly $valid: boolean;\n\treadonly $invalid: boolean;\n\n\t/**\n\t * Documentation states viewValue and modelValue to be a string but other types do work and it's common to use them.\n\t */\n\t$setViewValue(value: any, trigger?: string): void;\n\t$commitViewValue(): void;\n\t$rollbackViewValue(): void;\n\t$processModelValue(): void;\n\t$overrideModelOptions(options: NgModelOptions): void;\n\n\t$render(): void;\n\t$validate(): void;\n\t$setDirty(): void;\n\t$setPristine(): void;\n\t$setTouched(): void;\n\t$setUntouched(): void;\n\t$setValidity(validationErrorKey: string, isValid: boolean): void;\n\n\t$isEmpty(value: any): boolean;\n}\n\n/**\n * Allows tuning how model updates are done.\n * @see https://docs.angularjs.org/api/ng/directive/ngModelOptions\n */\nexport interface NgModelOptions {\n\tupdateOn?: string;\n\tdebounce?: number | Indexed<number>;\n\tallowInvalid?: boolean;\n\tgetterSetter?: boolean;\n\ttimezone?: string;\n}\n","import { NgInputController, NgInputOptions } from './shared';\n\nclass RadioListController extends NgInputController {\n\tpublic $postLink() {\n\t\tsetTimeout(() => {\n\t\t\tif (this.$attrs.hasOwnProperty('required')) {\n\t\t\t\tconst fieldset = this.$element.closest('fieldset');\n\n\t\t\t\tif (fieldset != null) {\n\t\t\t\t\tconst legend = fieldset.querySelector('legend');\n\n\t\t\t\t\tif (legend != null) {\n\t\t\t\t\t\tconst span = document.createElement('span');\n\t\t\t\t\t\tspan.classList.add('text-danger');\n\t\t\t\t\t\tspan.innerText = ' *';\n\t\t\t\t\t\tlegend.appendChild(span);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport const radioList: NgInputOptions = {\n\ttype: 'input',\n\ttemplateClass: 'form-check',\n\tlabelClass: 'form-check-label',\n\trender(h) {\n\t\tconst radio = h.createInput('radio');\n\t\tconst { value = 'Value' } = this.$attrs;\n\n\t\tradio.setAttribute('ng-value', `item.${value}`);\n\t\tradio.setAttribute('ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}_{{$index}}');\n\t\tradio.style.setProperty('cursor', 'pointer');\n\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\n\t\t\tthis.$template.classList.remove('form-check');\n\t\t\tthis.$template.classList.add('form-check-inline');\n\t\t}\n\n\t\tthis.$template.setAttribute('ng-repeat', 'item in $ctrl.list track by $index');\n\n\t\treturn radio;\n\t},\n\trenderLabel() {\n\t\tconst { text = 'Text' } = this.$attrs;\n\t\tconst labelText = document.createTextNode(`{{item.${text}}}`);\n\n\t\tthis.$label.appendChild(labelText);\n\t\tthis.$label.setAttribute('ng-attr-for', '{{id}}_{{$ctrl.uniqueId}}_{{$index}}');\n\t},\n\tbindings: {\n\t\tlist: '<',\n\t\tngChecked: '<',\n\t},\n\tcontroller: RadioListController,\n};\n","import anime from 'animejs';\nimport { NgService } from './service';\nimport { NgRenderer } from './renderer';\n\ntype LogType = '$log' | '$warn' | '$error' | '$info' | '$success';\nenum LogTypeToastBackgrounds {\n\t$log = 'white',\n\t$success = 'success',\n\t$info = 'info',\n\t$warn = 'warning',\n\t$error = 'danger',\n}\n\nexport class NgToast {\n\tprotected type: LogType;\n\tprotected readonly toast: HTMLDivElement;\n\tprotected readonly toastHeader: HTMLDivElement;\n\tprotected readonly toastBody: HTMLDivElement;\n\tprotected readonly toastHeaderTimestamp: HTMLElement;\n\n\tconstructor(protected readonly $renderer: NgRenderer, options: {\n\t\ttext: string,\n\t\ttype: LogType,\n\t\tcontainer: HTMLElement,\n\t}) {\n\t\tthis.toast = this.$renderer.createHtmlElement('div', ['toast', 'row', 'justify-content-between', 'w-100'], [['role', 'alert'], ['aria-live', 'assertive'], ['aria-atomic', 'true']]);\n\t\tthis.toast.style.setProperty('cursor', 'pointer');\n\n\t\tthis.toastBody = this.$renderer.createHtmlElement('div', ['toast-body', 'h5', 'col', 'mb-0', 'pb-3']);\n\t\tthis.toastHeader = this.$renderer.createHtmlElement('div', ['toast-header']);\n\t\tthis.toastHeader.style.setProperty('border-bottom', 'none');\n\n\t\tthis.toastHeaderTimestamp = this.$renderer.createHtmlElement('strong', ['text-dark']);\n\n\t\tthis.toastHeader.appendChild(this.toastHeaderTimestamp);\n\t\tthis.toast.appendChild(this.toastHeader);\n\t\tthis.toast.appendChild(this.toastBody);\n\n\t\tthis.setBodyText(options.text);\n\t\tthis.setType(options.type);\n\n\t\toptions.container.appendChild(this.toast);\n\t}\n\n\t/**\n\t * Append a child element to the toast element\n\t *\n\t * @param el The element to append\n\t */\n\tpublic appendChild(el: HTMLElement) {\n\t\tthis.toast.appendChild(el);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the inner HTML of the toast's body element\n\t *\n\t * @param text The HTML to set\n\t */\n\tpublic setBodyText(text: string) {\n\t\tthis.toastBody.innerHTML = text;\n\t}\n\n\t/**\n\t * Change the look & feel of the toast based on its associated log type\n\t *\n\t * @param type The log type of toast\n\t */\n\tpublic setType(type: LogType) {\n\t\tif (this.type != null) {\n\t\t\tthis.toast.classList.remove(`bg-${LogTypeToastBackgrounds[this.type]}`);\n\t\t}\n\n\t\tthis.type = type;\n\t\tthis.toast.classList.add(`bg-${LogTypeToastBackgrounds[this.type]}`);\n\n\t\tif (type === '$log') {\n\t\t\tthis.toastHeader.classList.add('bg-dark');\n\t\t\tthis.toastHeader.style.setProperty('opacity', '0.75');\n\t\t\tthis.toastHeaderTimestamp.classList.remove('text-dark');\n\t\t\tthis.toastHeaderTimestamp.classList.add('text-white');\n\t\t} else if (type !== '$warn') {\n\t\t\tthis.toast.classList.add('text-white');\n\t\t}\n\t}\n\n\t/**\n\t * Show the toast\n\t *\n\t * @param timeout Length in ms before toast disappears (`false` to set permanently)\n\t * @param container Optional container override\n\t */\n\tpublic show(timeout: false | number, container?: HTMLElement) {\n\t\tif (container != null) {\n\t\t\tthis.remove();\n\t\t\tcontainer.appendChild(this.toast);\n\t\t}\n\n\t\tanime({\n\t\t\ttargets: this.toast,\n\t\t\ttranslateX: [500, 0],\n\t\t\tduration: 1000,\n\t\t\teasing: 'easeOutQuint(0.5, 1)',\n\t\t\tbegin: () => {\n\t\t\t\tthis.toastHeaderTimestamp.innerText = new Date().toLocaleTimeString(navigator.language).replace(/(:\\d{2})(?=\\s[AP]M$)/, '');\n\t\t\t\tthis.toast.style.setProperty('opacity', '1');\n\t\t\t},\n\t\t});\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst hideAnimation = anime({\n\t\t\t\ttargets: this.toast,\n\t\t\t\ttranslateX: [0, 500],\n\t\t\t\tduration: 1000,\n\t\t\t\tautoplay: false,\n\t\t\t\teasing: 'easeInQuint(0.5, 1)',\n\t\t\t\tcomplete: () => {\n\t\t\t\t\tthis.toast.removeEventListener('click', hideAnimation.play);\n\t\t\t\t\tthis.toast.removeEventListener('mouseover', resetAnimationOnMouseover);\n\t\t\t\t\tthis.toast.removeEventListener('mouseout', resumeAnimationOnMouseout);\n\t\t\t\t\tthis.remove();\n\t\t\t\t\tresolve();\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst isAutoClose = typeof timeout === 'number' && Number.isInteger(timeout);\n\t\t\tconst makeTimeout = () => (setTimeout as typeof window['setTimeout'])(hideAnimation.play, timeout as number);\n\n\t\t\tlet autoCloseId = isAutoClose ? makeTimeout() : undefined;\n\t\t\tlet wasClosing = false;\n\n\t\t\tconst resetAnimationOnMouseover = () => {\n\t\t\t\twasClosing = hideAnimation.progress > 0;\n\n\t\t\t\tclearTimeout(autoCloseId);\n\t\t\t\tautoCloseId = undefined;\n\n\t\t\t\thideAnimation.restart();\n\t\t\t\thideAnimation.pause();\n\t\t\t};\n\n\t\t\tconst resumeAnimationOnMouseout = () => {\n\t\t\t\tif (wasClosing) {\n\t\t\t\t\thideAnimation.play();\n\t\t\t\t} else if (isAutoClose && autoCloseId === undefined) {\n\t\t\t\t\tautoCloseId = makeTimeout();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.toast.addEventListener('click', hideAnimation.play);\n\t\t\tthis.toast.addEventListener('mouseover', resetAnimationOnMouseover);\n\t\t\tthis.toast.addEventListener('mouseout', resumeAnimationOnMouseout);\n\t\t});\n\t}\n\n\t/**\n\t * Hide the toast\n\t */\n\tpublic hide() {\n\t\tthis.toast.click();\n\t}\n\n\t/**\n\t * Remove the toast from its container\n\t */\n\tpublic remove() {\n\t\tif (this.toast.parentElement != null) {\n\t\t\tthis.toast.parentElement.removeChild(this.toast);\n\t\t}\n\t}\n}\n\n// tslint:disable:no-console\nexport class NgConsole extends NgService {\n\t/**\n\t * Invokes `Console.prototype.debug`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $debug(...items: any[]) {\n\t\tconsole.debug(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.error`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $error(...items: any[]) {\n\t\tconsole.error(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.info`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $info(...items: any[]) {\n\t\tconsole.info(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.warn`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $warn(...items: any[]) {\n\t\tconsole.warn(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.log`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $log(...items: any[]) {\n\t\tconsole.log(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.log`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $success(...items: any[]) {\n\t\tthis.$log(...items);\n\t}\n}\n// tslint:enable:no-console\n\nexport class NgLogger extends NgConsole {\n\tprotected readonly container: HTMLDivElement;\n\tprotected readonly toasts: NgToast[] = [];\n\n\tconstructor(private $renderer: NgRenderer, private readonly isProd = false) {\n\t\tsuper();\n\n\t\tthis.container = this.$renderer.createHtmlElement('div', ['position-fixed']);\n\t\tthis.container.style.setProperty('top', '0.5rem');\n\t\tthis.container.style.setProperty('right', '-1.5rem');\n\t\tthis.container.style.setProperty('width', '100%');\n\t\tthis.container.style.setProperty('max-width', '23rem');\n\n\t\tdocument.body.appendChild(this.container);\n\t}\n\n\t/**\n\t * Clear all active notifications\n\t */\n\tpublic clear() {\n\t\tthis.toasts.forEach(x => x.hide());\n\t}\n\n\t/**\n\t * Prompt the user to confirm intent for a previous action\n\t *\n\t * @param msg Confirmation message\n\t */\n\tpublic confirm(msg = 'Please confirm your action') {\n\t\tconst okBtn = this.$renderer.createHtmlElement('button', ['btn', 'w-50', 'btn-success', 'rounded-0']);\n\t\tokBtn.innerText = 'Yes';\n\t\tconst cancelBtn = this.$renderer.createHtmlElement('button', ['btn', 'w-50', 'btn-dark', 'rounded-0']);\n\t\tcancelBtn.innerText = 'No';\n\n\t\tconst footer = this.$renderer.createHtmlElement('div', ['w-100']);\n\t\tfooter.appendChild(cancelBtn);\n\t\tfooter.appendChild(okBtn);\n\n\t\tconst toast = this.notify(msg, '$log', false);\n\t\ttoast.appendChild(footer);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst removeListeners = () => {\n\t\t\t\tokBtn.removeEventListener('click', ok);\n\t\t\t\tcancelBtn.removeEventListener('click', cancel);\n\t\t\t};\n\n\t\t\tconst ok = () => {\n\t\t\t\ttoast.hide();\n\t\t\t\tremoveListeners();\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\tconst cancel = () => {\n\t\t\t\ttoast.hide();\n\t\t\t\tremoveListeners();\n\t\t\t\treject();\n\t\t\t};\n\n\t\t\tokBtn.addEventListener('click', ok);\n\t\t\tcancelBtn.addEventListener('click', cancel);\n\t\t});\n\t}\n\n\t/**\n\t * Display an error notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (false by default)\n\t */\n\tpublic error(text: string, isTemporary = false) {\n\t\tthis.notify(text, '$error', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display an informational notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic info(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$info', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a success notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic success(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$success', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a warning notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic warning(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$warn', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a warning notification (disabled when `process.env.NODE_ENV === 'production'`)\n\t *\n\t * @param text Display text\n\t */\n\tpublic devWarning(text: string) {\n\t\tif (this.isProd === false) {\n\t\t\tthis.warning(`[DEV] ${text}`, false);\n\t\t}\n\t}\n\n\t/**\n\t * Show a customizable notification to the user\n\t *\n\t * @param text Display text\n\t * @param type Display type\n\t * @param timeout Length in ms before notification disappears (`false` to set permanently)\n\t * @param buttons Interaction points for the user\n\t */\n\tpublic notify(text: string, type: LogType, timeout: false | number = 2323) {\n\t\tthis[type](`${type}: ${text}`);\n\n\t\tconst toast = new NgToast(this.$renderer, { text, type, container: this.container });\n\t\ttoast.show(timeout).then(() => {\n\t\t\tconst index = this.toasts.findIndex(x => Object.is(x, toast));\n\t\t\tthis.toasts.splice(index, 1);\n\t\t});\n\n\t\tthis.toasts.push(toast);\n\t\treturn toast;\n\t}\n}\n","import { Indexed } from '@ledge/types';\nimport { NgInputController, NgInputOptions } from './shared';\n\nclass TextInputController extends NgInputController {\n\tprivate min: number | undefined;\n\tprivate max: number | undefined;\n\n\tpublic $onInit() {\n\t\tconst { type, minlength } = this.$attrs;\n\n\t\tif (type === 'number') {\n\t\t\tthis.ngModelCtrl.$validators.minVal = val => {\n\t\t\t\treturn this.min == null || val >= this.min;\n\t\t\t};\n\t\t\tthis.ngModelCtrl.$validators.maxVal = val => {\n\t\t\t\treturn this.max == null || val <= this.max;\n\t\t\t};\n\t\t}\n\n\t\tif (minlength != null) {\n\t\t\tthis.ngModelCtrl.$validators.pattern = val => {\n\t\t\t\treturn val != null && val.length >= minlength;\n\t\t\t};\n\t\t}\n\t}\n}\n\nconst validators: Indexed<string> = {\n\tminVal: 'Must be greater than or equal to {{$ctrl.min}}',\n\tmaxVal: 'Must be less than or equal to {{$ctrl.max}}',\n};\n\nexport const textInput: NgInputOptions = {\n\ttype: 'input',\n\tcanHaveIcon: true,\n\tattrs: { maxlength: 3000, placeholder: '' },\n\trender(h) {\n\t\tconst { type, minlength } = this.$attrs;\n\n\t\tconst input = h.createInput(type);\n\n\t\tconst isRange = type === 'range';\n\t\tif (type === 'number' || isRange) {\n\t\t\tinput.setAttribute('ng-attr-min', '{{$ctrl.min}}');\n\t\t\tinput.setAttribute('ng-attr-max', '{{$ctrl.max}}');\n\t\t\tinput.setAttribute('ng-attr-step', `{{$ctrl.step || '${isRange ? 1 : 'any'}'}}`);\n\t\t}\n\n\t\tif (minlength != null) {\n\t\t\tinput.setAttribute('pattern', `.{${minlength},}`);\n\t\t\tvalidators.pattern = `Input must be at least ${minlength} characters`;\n\t\t}\n\n\t\treturn input;\n\t},\n\tpostRender(h) {\n\t\tif (this.$attrs.type === 'range') {\n\t\t\tconst text = h.createHtmlElement('p', ['text-center', 'lead']);\n\t\t\ttext.textContent = '{{$ctrl.ngModel}}';\n\t\t\tthis.$template.appendChild(text);\n\t\t}\n\t\treturn this.$template;\n\t},\n\tbindings: {\n\t\tmin: '<',\n\t\tmax: '<',\n\t\tstep: '<',\n\t},\n\tvalidators,\n\tcontroller: TextInputController,\n};\n\nexport const htmlInput = Object.assign({ }, textInput);\n","import { checkBox } from './check-box';\nimport { dateInput } from './date-input';\nimport { radioList } from './radio-list';\nimport { selectList } from './select-list';\nimport { textBox } from './text-box';\nimport { htmlInput, textInput } from './text-input';\n\nexport const inputs = {\n\tcheckBox,\n\tdateInput,\n\tradioList,\n\tselectList,\n\ttextBox,\n\thtmlInput,\n\ttextInput,\n};\n\nexport * from './shared';\n","export * from './controller';\nexport * from './options';\nexport * from './factory';\n","import { NgInputController } from './controller';\nimport { NgInputOptions } from './options';\n\nimport { NgAttributes } from '../../attributes';\nimport { NgComponentOptions } from '../../options';\nimport { NgRenderer } from '../../renderer';\nimport { NgService } from '../../service';\n\nexport class NgInputFactory extends NgService {\n\tpublic readonly $validationAttrs = [\n\t\t'required', 'ngRequired',\n\t\t'disabled', 'ngDisabled',\n\t\t'readonly', 'ngReadonly',\n\t];\n\n\tpublic readonly $validationMessages = new Map<string, string>([\n\t\t['email', 'Email address must be in the following form: email@address.com'],\n\t\t['required', 'This field is required'],\n\t\t['minlength', 'Input is not long enough'],\n\t\t['maxlength', 'Input is too long'],\n\t]);\n\tpublic readonly $validationExps = {\n\t\t$error: '$ctrl.ngModelCtrl.$error',\n\t\t$invalid: '$ctrl.ngModelCtrl.$invalid',\n\t\t$touched: '$ctrl.ngModelCtrl.$touched',\n\t\t$formInvalid: `$ctrl.ngModelCtrl.$$parentForm.$submitted`,\n\t\tget $isInvalid() {\n\t\t\t// tslint:disable-next-line: static-this\n\t\t\treturn `(${this.$touched} || ${this.$formInvalid}) && ${this.$invalid}`;\n\t\t},\n\t};\n\n\tconstructor(private renderer: NgRenderer) {\n\t\tsuper();\n\t}\n\n\t// tslint:disable: static-this\n\tpublic makeBaseComponent() {\n\t\tconst getDefaultLabelText = (attrs: NgAttributes) => this.getDefaultLabelText(attrs);\n\t\treturn {\n\t\t\tlabelClass: 'form-control-label',\n\t\t\ttemplateClass: 'form-group',\n\t\t\tattrs: { },\n\t\t\tcontroller: NgInputController,\n\t\t\trenderLabel: function defaultRenderLabel(h) {\n\t\t\t\tconst $transclude = h.createSlot();\n\t\t\t\t$transclude.textContent = getDefaultLabelText(this.$attrs);\n\t\t\t\tthis.$label.appendChild($transclude);\n\t\t\t} as NgInputOptions['renderLabel'],\n\t\t\tpostRender: function defaultPostRender(_h) {\n\t\t\t\treturn this.$template;\n\t\t\t} as NgInputOptions['postRender'],\n\t\t\tget isRadioOrCheckbox() {\n\t\t\t\treturn this.labelClass === 'form-check-label';\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic makeBaseOptions(): NgComponentOptions {\n\t\treturn {\n\t\t\ttransclude: {\n\t\t\t\tcontain: '?contain',\n\t\t\t},\n\t\t\trequire: {\n\t\t\t\tngModelCtrl: 'ngModel',\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tngModel: '=',\n\t\t\t\tngModelOptions: '<',\n\t\t\t\tngDisabled: '<',\n\t\t\t\tngReadonly: '<',\n\t\t\t\tngRequired: '<',\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * Retrieves the identifying name for an ngModel (e.g., `$ctrl.example` in `ng-model=\"$ctrl.example\"`)\n\t */\n\tpublic modelIdentifier($attrs: NgAttributes) {\n\t\treturn ($attrs.ngModel as string).split('.').pop() as string;\n\t}\n\n\t/**\n\t * Generates label text from the identifying name for an ngModel (e.g., `$ctrl.example` in `ng-model=\"$ctrl.example\"`)\n\t */\n\tpublic getDefaultLabelText($attrs: NgAttributes) {\n\t\treturn this.modelIdentifier($attrs)\n\t\t\t.split(/(?=[A-Z0-9])/)\n\t\t\t.map(x => isNaN(Number(x)) ? x.charAt(0).toUpperCase() + x.substring(1) : x)\n\t\t\t.join(' ');\n\t}\n\n\t/**\n\t * @param $input - The input to set attributes on\n\t */\n\tpublic getInputInput($input: HTMLElement) {\n\t\treturn (\n\t\t\t['INPUT', 'TEXTAREA', 'SELECT'].includes($input.tagName)\n\t\t\t\t? $input\n\t\t\t\t: $input.querySelector('select') || $input.querySelector('input')\n\t\t) as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\n\t}\n\n\t/**\n\t * Transform an input component definition into an ng component definition\n\t * @param component An object representing the requested component definition\n\t */\n\tpublic defineInputComponent(component: NgInputOptions) {\n\t\tconst $component = Object.assign(this.makeBaseComponent(), component);\n\t\tconst $definition = Object.assign(this.makeBaseOptions(), { controller: $component.controller });\n\n\t\t// assign child objects\n\t\tObject.assign($definition.bindings, $component.bindings);\n\t\tObject.assign($definition.transclude, $component.transclude);\n\n\t\t// assign template\n\t\t$definition.template = ['$element', '$attrs', ($element: [HTMLElement], $attrs: NgAttributes) => {\n\t\t\tconst $el = $element[0];\n\n\t\t\tconst $template = this.renderer.createHtmlElement('div', [$component.templateClass]);\n\n\t\t\t// allow consumer to access $template and $attrs attributes from `this`\n\t\t\tconst $input = $component.render.call({ $template, $attrs }, this.renderer);\n\n\t\t\tconst isRadio = ($input as HTMLInputElement).type === 'radio';\n\t\t\tconst isRequired = $attrs.hasOwnProperty('required');\n\t\t\tconst isSrOnly = $attrs.hasOwnProperty('srOnly');\n\n\t\t\t// all inputs must have labels\n\t\t\tconst $label = this.renderer.createLabel([$component.labelClass], { isRequired, isSrOnly, isRadio });\n\n\t\t\tif ($component.isRadioOrCheckbox === false) {\n\t\t\t\t$template.appendChild($label);\n\t\t\t}\n\n\t\t\tif ($component.canHaveIcon === true) {\n\t\t\t\t$template.appendChild(this.renderer.createIconInput($input, $attrs.icon));\n\t\t\t} else {\n\t\t\t\t$template.appendChild($input);\n\t\t\t}\n\n\t\t\tif ($el.closest('contain') != null) {\n\t\t\t\t$input.style.marginTop = '8px';\n\t\t\t\t$label.classList.add('sr-only');\n\t\t\t}\n\n\t\t\tconst requiredTag = $label.firstElementChild;\n\t\t\tif (requiredTag != null) {\n\t\t\t\t$label.removeChild(requiredTag);\n\t\t\t}\n\n\t\t\t($component.renderLabel as NonNullable<NgInputOptions['renderLabel']>)\n\t\t\t\t.call({ $label, $attrs }, this.renderer);\n\n\t\t\tif (requiredTag != null) {\n\t\t\t\t$label.appendChild(requiredTag);\n\t\t\t}\n\n\t\t\t// add a transclusion slot for e.g. nesting inputs\n\t\t\t$template.appendChild(this.renderer.createSlot('contain'));\n\n\t\t\tif ($component.isRadioOrCheckbox === true) {\n\t\t\t\t$label.style.setProperty('cursor', 'pointer');\n\t\t\t\t$template.appendChild($label);\n\t\t\t}\n\n\t\t\t($component.postRender as NonNullable<NgInputOptions['postRender']>)\n\t\t\t\t.call({ $template, $attrs }, this.renderer);\n\n\t\t\t// that's right, i named it after filterFilter. fight me.\n\t\t\tconst $inputInput = this.getInputInput($input);\n\n\t\t\tthis.$validationAttrs\n\t\t\t\t.filter(x => $attrs.hasOwnProperty(x) === true)\n\t\t\t\t.forEach(x => {\n\t\t\t\t\t$inputInput.setAttribute(\n\t\t\t\t\t\tx.replace(/[A-Z]/, s => `-${s.toLowerCase()}`),\n\t\t\t\t\t\tx.startsWith('ng') ? `$ctrl.${x}` : 'true',\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\tif ($inputInput.tagName !== 'SELECT') {\n\t\t\t\t$inputInput.setAttribute('ng-class', `{ 'is-invalid': ${this.$validationExps.$isInvalid} }`);\n\t\t\t\t$inputInput.setAttribute('ng-blur', '$ctrl.ngModelCtrl.$setTouched()');\n\t\t\t}\n\n\t\t\tconst $validationBlock = this.renderer.createHtmlElement('div', [], [\n\t\t\t\t['ng-messages', this.$validationExps.$error],\n\t\t\t\t['ng-show', this.$validationExps.$isInvalid],\n\t\t\t\t['role', 'alert'],\n\t\t\t]);\n\n\t\t\tconst { validators = { } } = $component;\n\t\t\tconst attrs = Object.keys($component.attrs);\n\n\t\t\tfor (const [key, value] of Object.entries(validators)) {\n\t\t\t\tthis.$validationMessages.set(key, value);\n\t\t\t\tattrs.push(key);\n\t\t\t}\n\n\t\t\tthis.$validationAttrs\n\t\t\t\t.concat(...attrs, 'email')\n\t\t\t\t.filter(x => x.startsWith('ng') === false)\n\t\t\t\t.filter(x => this.$validationMessages.has(x) === true)\n\t\t\t\t.filter(x => x !== 'email' || $inputInput.type === x)\n\t\t\t\t.forEach(x => {\n\t\t\t\t\tconst $message = this.renderer.createHtmlElement('div', ['text-danger'], [['ng-message', x]]);\n\t\t\t\t\t$message.innerText = this.$validationMessages.get(x) as string;\n\t\t\t\t\t$validationBlock.appendChild($message);\n\t\t\t\t});\n\n\t\t\tlet $html: string;\n\t\t\tif (isRadio === true) {\n\t\t\t\tconst $newTpl = this.renderer.createHtmlElement('div', ['form-group']);\n\t\t\t\t$newTpl.appendChild($template);\n\t\t\t\t$newTpl.appendChild($validationBlock);\n\t\t\t\t$html = $newTpl.outerHTML;\n\t\t\t} else {\n\t\t\t\t$template.appendChild($validationBlock);\n\t\t\t\t$html = $template.outerHTML;\n\t\t\t}\n\n\t\t\t$html = $html.replace(/{{id}}/g, this.modelIdentifier($attrs));\n\n\t\t\tattrs\n\t\t\t\t.forEach(prop => {\n\t\t\t\t\t$html = $html.replace(\n\t\t\t\t\t\tnew RegExp(`{{${prop}}}`, 'g'),\n\t\t\t\t\t\t$attrs[prop] || $component.attrs[prop],\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\treturn $html;\n\t\t}];\n\n\t\treturn $definition;\n\t}\n}\n","import { NgController, app } from '../../index';\n\nclass ModalController extends NgController {\n\tpublic title = 'Example Modal';\n\tpublic body = 'Body';\n}\n\nclass AppController extends NgController {\n\tpublic openModal() {\n\t\tapp.modal.open({\n\t\t\tcontroller: ModalController,\n\t\t\ttitle: '{{$ctrl.title}}',\n\t\t\ttemplate: '<p class=\"lead\">{{$ctrl.body}}</p>',\n\t\t});\n\t}\n\n\tpublic openConfirmToast() {\n\t\tthis.$log.confirm('Yes or No?')\n\t\t\t.then(() => this.$log.success('Yes!'))\n\t\t\t.catch(() => this.$log.info('No...'));\n\t}\n}\n\napp\n\t.module\n\t.controller(\n\t\t'AppController',\n\t\tapp.makeComponentController(AppController),\n\t);\n\napp\n\t.configure({ API_HOST: 'api.ng-app.js.org' })\n\t.bootstrap()\n\t.then(() => {\n\t\tapp.log.success('Welcome... to The World...');\n\t});\n","import { Indexed } from '@ledge/types';\nimport { StateService } from '@uirouter/core';\nimport { StateProvider } from '@uirouter/angularjs';\nimport { autobind } from 'core-decorators';\n\nimport { Injector } from '@angular/core';\n\nimport { NgController, makeNg1Controller } from './controller';\nimport { NgHttp, NgHttpInterceptor, NgHttpOptions } from './http';\nimport { NgInputFactory, NgInputOptions } from './inputs';\nimport { NgConsole, NgLogger } from './logger';\nimport { NgModal } from './modal';\nimport { NgInjector, bootstrap, injector, module } from './ng';\nimport { NgAppConfig, NgComponentOptions } from './options';\nimport { NgRenderer } from './renderer';\nimport { NgRouter } from './router';\nimport { NgService } from './service';\n\n@autobind\nexport class NgApp {\n\tpublic get module() {\n\t\treturn this.$module;\n\t}\n\n\tpublic get router() {\n\t\treturn this.$router;\n\t}\n\n\tpublic get components() {\n\t\treturn new Set(this.$components.keys());\n\t}\n\n\tpublic get dependencies() {\n\t\treturn new Set(this.$dependencies);\n\t}\n\n\tpublic get state() {\n\t\treturn this.ng1injector.get<StateService>('$state');\n\t}\n\n\tpublic get config() {\n\t\treturn this.injector.get<NgAppConfig>(NgAppConfig);\n\t}\n\n\tpublic get http() {\n\t\treturn this.injector.get<NgHttp>(NgHttp);\n\t}\n\n\tpublic get console() {\n\t\treturn this.injector.get<NgConsole>(NgConsole);\n\t}\n\n\tpublic get log() {\n\t\treturn this.injector.get<NgLogger>(NgLogger);\n\t}\n\n\tpublic get modal() {\n\t\treturn this.injector.get<NgModal>(NgModal);\n\t}\n\n\tpublic get renderer() {\n\t\treturn this.injector.get<NgRenderer>(NgRenderer);\n\t}\n\n\tpublic get inputs() {\n\t\treturn this.injector.get<NgInputFactory>(NgInputFactory);\n\t}\n\n\tpublic get util() {\n\t\treturn this.injector.get<NgService>(NgService);\n\t}\n\n\tpublic get injector() {\n\t\treturn this.$injector;\n\t}\n\n\tpublic readonly $id = '$core';\n\tpublic readonly ng1injector = injector(['ng']);\n\n\tprotected readonly $components = new Map<string, NgComponentOptions>();\n\tprotected readonly $httpInterceptors: NgHttpInterceptor[] = [];\n\tprotected readonly $dependencies: string[] = [];\n\n\tprotected readonly $module = module(this.$id, this.$dependencies);\n\tprotected readonly $bootstrap = bootstrap;\n\n\tprotected $router: NgRouter;\n\tprotected $config: NgAppConfig;\n\n\tprotected readonly $injector = Injector.create({\n\t\tname: this.$id,\n\t\tproviders: [\n\t\t\t{ provide: HTMLDocument, useValue: document },\n\t\t\t{ provide: NgAppConfig, useFactory: () => this.$config, deps: [] },\n\t\t\t{ provide: NgService, deps: [] },\n\t\t\t{ provide: NgRenderer, deps: [HTMLDocument] },\n\t\t\t{ provide: NgInputFactory, deps: [NgRenderer] },\n\t\t\t{ provide: NgConsole, deps: [] },\n\t\t\t{\n\t\t\t\tprovide: NgLogger,\n\t\t\t\tuseFactory: (r: NgRenderer, c: NgAppConfig) =>\n\t\t\t\t\tnew NgLogger(r, c.IS_PROD),\n\t\t\t\tdeps: [NgRenderer, NgAppConfig],\n\t\t\t},\n\t\t\t{\n\t\t\t\tprovide: NgHttpOptions,\n\t\t\t\tuseFactory: (config: NgAppConfig) =>\n\t\t\t\t\tnew NgHttpOptions(config, {\n\t\t\t\t\t\tinterceptors: this.$httpInterceptors,\n\t\t\t\t\t\tonFinally: this.forceUpdate,\n\t\t\t\t\t}),\n\t\t\t\tdeps: [NgAppConfig],\n\t\t\t},\n\t\t\t{ provide: NgHttp, deps: [NgHttpOptions] },\n\t\t\t{\n\t\t\t\tprovide: NgModal,\n\t\t\t\tdeps: [NgRenderer, NgLogger, NgHttp, NgAppConfig],\n\t\t\t\tuseFactory: (r: NgRenderer, l: NgLogger, h: NgHttp, c: NgAppConfig) =>\n\t\t\t\t\tnew NgModal(r, l, h, c, this.ng1injector),\n\t\t\t},\n\t\t],\n\t});\n\n\tconstructor(config: Partial<NgAppConfig>) {\n\t\tthis\n\t\t\t.configure(config)\n\t\t\t.$module\n\t\t\t.config([\n\t\t\t\t'$compileProvider',\n\t\t\t\t'$locationProvider',\n\t\t\t\t'$qProvider',\n\t\t\t\t(\n\t\t\t\t\t$compileProvider: {\n\t\t\t\t\t\tdebugInfoEnabled(active: boolean): any;\n\t\t\t\t\t\tcommentDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t\tcssClassDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$locationProvider: {\n\t\t\t\t\t\thtml5Mode(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$qProvider: {\n\t\t\t\t\t\terrorOnUnhandledRejections(active: boolean): any,\n\t\t\t\t\t},\n\t\t\t\t) => {\n\t\t\t\t\tconst { IS_DEV, IS_STAGING } = this.$config;\n\n\t\t\t\t\t$compileProvider.debugInfoEnabled(!!(IS_DEV || IS_STAGING));\n\t\t\t\t\t$compileProvider.commentDirectivesEnabled(false);\n\t\t\t\t\t$compileProvider.cssClassDirectivesEnabled(false);\n\n\t\t\t\t\t$locationProvider.html5Mode(true);\n\t\t\t\t\t$qProvider.errorOnUnhandledRejections(false);\n\t\t\t\t},\n\t\t\t])\n\t\t\t.config(['$stateProvider', ($stateProvider: StateProvider) => {\n\t\t\t\tif (this.router == null) {\n\t\t\t\t\treturn this.log.$warn('No router. Use `app.setRouter(r)` to disable this warning.');\n\t\t\t\t}\n\n\t\t\t\tfor (const definition of this.router.getRoutes()) {\n\t\t\t\t\t$stateProvider.state(definition);\n\t\t\t\t}\n\t\t\t}])\n\t\t\t.run([\n\t\t\t\t'$injector',\n\t\t\t\t'$animate',\n\t\t\t\t(\n\t\t\t\t\t$injector: NgInjector,\n\t\t\t\t\t$animate: {\n\t\t\t\t\t\tenabled(active: boolean): any,\n\t\t\t\t\t},\n\t\t\t\t) => {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tthis.ng1injector = $injector;\n\t\t\t\t\t$animate.enabled(true);\n\t\t\t\t},\n\t\t\t]);\n\t}\n\n\t/**\n\t * Force the application to run an update cycle\n\t */\n\tpublic async forceUpdate() {\n\t\tthis.ng1injector.get('$rootScope').$applyAsync();\n\t}\n\n\tpublic async bootstrap({ strictDi }: { strictDi?: boolean; } = { strictDi: true }) {\n\t\tfor (const [name, definition] of this.$components) {\n\t\t\tthis.$module.component(name, definition);\n\t\t}\n\t\tif (this.$router == null) {\n\t\t\tthis.$router = new (class extends NgRouter { })();\n\t\t}\n\n\t\tsetTimeout(() => document.body.classList.add('bootstrapped'));\n\t\treturn this.$bootstrap(document.body, [this.$id], { strictDi });\n\t}\n\n\tpublic configure(config: Partial<NgAppConfig>) {\n\t\tthis.$config = new NgAppConfig(config);\n\t\treturn this;\n\t}\n\n\tpublic setRouter(router: NgRouter) {\n\t\tthis.$router = router;\n\t\treturn this;\n\t}\n\n\tpublic addComponents(components: Map<string, NgComponentOptions> | Indexed<NgComponentOptions>) {\n\t\tconst entries =\n\t\t\tcomponents instanceof Map\n\t\t\t\t? components.entries()\n\t\t\t\t: Object.entries(components);\n\n\t\tconst { inputs } = this;\n\n\t\tfor (let [name, component] of entries) {\n\t\t\tif (this.isInputComponent(component)) {\n\t\t\t\tcomponent = inputs.defineInputComponent(component);\n\t\t\t}\n\n\t\t\tif (typeof component.controller === 'function') {\n\t\t\t\tcomponent.controller = this.makeComponentController(component.controller);\n\t\t\t}\n\n\t\t\tthis.$components.set(name, component);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic isInputComponent(\n\t\tcomponent: NgComponentOptions & { type?: 'input' },\n\t): component is NgInputOptions {\n\t\treturn component.type === 'input';\n\t}\n\n\tpublic addDependencies(...moduleNames: string[]) {\n\t\tthis.$dependencies.push(...moduleNames);\n\t\treturn this;\n\t}\n\n\tpublic addHttpInterceptor(interceptor: NgHttpInterceptor) {\n\t\tthis.$httpInterceptors.push(interceptor);\n\t\treturn this;\n\t}\n\n\tpublic makeComponentController<T extends NgController>(rawCtrl: new () => T) {\n\t\tconst controller = [\n\t\t\t'$element',\n\t\t\t'$scope',\n\t\t\t'$injector',\n\t\t\tmakeNg1Controller<T>(rawCtrl, {\n\t\t\t\tlog: this.log,\n\t\t\t\thttp: this.http,\n\t\t\t\trenderer: this.renderer,\n\t\t\t\tconfig: () => this.config,\n\t\t\t}),\n\t\t] as const;\n\n\t\ttype Writeable<Y> = { -readonly [P in keyof Y]-?: Y[P] };\n\t\treturn controller as Writeable<typeof controller>;\n\t}\n}\n","import flatpickr from 'flatpickr';\nimport { NgInputController, NgInputOptions } from './shared';\n\nfunction isNumber(n: any): n is number {\n\treturn Number.isInteger(n);\n}\n\nclass DateInputController extends NgInputController {\n\tprivate readonly SUPPORTED_MODES = ['single', 'multiple', 'range'];\n\tprivate minDate?: Date | number | string;\n\tprivate maxDate?: Date | number | string;\n\tprivate flatpickr: flatpickr.Instance;\n\n\tpublic $onInit() {\n\t\tthis.ngModelCtrl.$validators.minDate = modelVal => {\n\t\t\tif (modelVal != null) {\n\t\t\t\tif (isNumber(this.minDate)) {\n\t\t\t\t\treturn this.minDate <= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t\tif (this.minDate instanceof Date) {\n\t\t\t\t\treturn this.minDate.valueOf() <= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tthis.ngModelCtrl.$validators.maxDate = modelVal => {\n\t\t\tif (modelVal != null) {\n\t\t\t\tif (isNumber(this.maxDate)) {\n\t\t\t\t\treturn this.maxDate >= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t\tif (this.maxDate instanceof Date) {\n\t\t\t\t\treturn this.maxDate.valueOf() >= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tconst { inline, mode = 'single' } = this.$attrs;\n\t\tif (this.SUPPORTED_MODES.includes(mode) === false) {\n\t\t\tthis.$log.devWarning(`Unsupported date-input \\`mode\\` ('${mode}') for #${this.$element.id}. Expected one of ${this.SUPPORTED_MODES.join(', ')}.`);\n\t\t}\n\n\t\tthis.flatpickr = flatpickr(this.$element, {\n\t\t\tdateFormat: 'M n Y (l)',\n\t\t\tdefaultDate: this.ngModel,\n\t\t\tinline: inline === 'true',\n\t\t\tmode,\n\t\t\tnextArrow: '&raquo;',\n\t\t\tprevArrow: '&laquo;',\n\t\t\tallowInput: true,\n\t\t\tweekNumbers: true,\n\t\t\twrap: true,\n\t\t\tenable: [\n\t\t\t\td => {\n\t\t\t\t\tconst maxDate = Date.parse(this.maxDate as any);\n\t\t\t\t\treturn Number.isNaN(maxDate) || d.valueOf() < maxDate;\n\t\t\t\t},\n\t\t\t\td => {\n\t\t\t\t\tconst minDate = Date.parse(this.minDate as any);\n\t\t\t\t\treturn Number.isNaN(minDate) || d.valueOf() > minDate;\n\t\t\t\t},\n\t\t\t],\n\t\t\tonChange: selected => {\n\t\t\t\tthis.ngModel = selected.length > 1\n\t\t\t\t\t? selected\n\t\t\t\t\t: selected[0];\n\n\t\t\t\tthis.$scope.$applyAsync();\n\t\t\t},\n\t\t}) as flatpickr.Instance;\n\t}\n\n\tpublic $onDestroy() {\n\t\tif (this.flatpickr != null && typeof this.flatpickr.destroy === 'function') {\n\t\t\tthis.flatpickr.destroy();\n\t\t}\n\t}\n\n\tpublic getMinDate() {\n\t\treturn new Date(this.minDate as number).toLocaleDateString();\n\t}\n\n\tpublic getMaxDate() {\n\t\treturn new Date(this.maxDate as number).toLocaleDateString();\n\t}\n}\n\nexport const dateInput: NgInputOptions = {\n\ttype: 'input',\n\trender(h) {\n\t\tconst input = h.createInput('text');\n\n\t\t// flatpickr requires control of the input element\n\t\tinput.removeAttribute('ng-model');\n\t\tinput.setAttribute('data-input', 'true');\n\n\t\tconst iconInput = h.createIconInput(input, 'calendar', [\n\t\t\t['data-toggle', 'true'],\n\t\t\t['style', 'cursor: pointer;'],\n\t\t]);\n\n\t\tconst inputGroupAppend = h.createHtmlElement('div', ['input-group-append']);\n\t\tinputGroupAppend.setAttribute('data-clear', 'true');\n\t\tinputGroupAppend.style.setProperty('cursor', 'pointer');\n\n\t\tconst inputGroupText = h.createHtmlElement('span', ['input-group-text']);\n\t\tconst clearIcon = h.createIcon('x');\n\n\t\tinputGroupText.appendChild(clearIcon);\n\t\tinputGroupAppend.appendChild(inputGroupText);\n\t\ticonInput.appendChild(inputGroupAppend);\n\n\t\treturn iconInput;\n\t},\n\tbindings: {\n\t\tminDate: '<',\n\t\tmaxDate: '<',\n\t},\n\tvalidators: {\n\t\tminDate: 'Date must be on or after {{$ctrl.getMinDate()}}',\n\t\tmaxDate: 'Date must be on or before {{$ctrl.getMaxDate()}}',\n\t},\n\tcontroller: DateInputController,\n};\n","import { NgController, makeNg1Controller } from './controller';\nimport { NgLogger } from './logger';\nimport { NgService } from './service';\nimport { NgHttp } from './http';\nimport { NgAppConfig } from './options';\nimport { NgRenderer } from './renderer';\nimport { NgInjector, NgScope } from './ng';\n\nexport class NgModal extends NgService {\n\tprotected readonly backdrop: HTMLDivElement;\n\tprotected readonly container: HTMLDivElement;\n\tprotected readonly content: HTMLDivElement;\n\tprotected readonly dialog: HTMLDivElement;\n\tprotected readonly header: HTMLDivElement;\n\tprotected readonly headerCloseButton: HTMLButtonElement;\n\tprotected readonly title: HTMLHeadingElement;\n\tprotected readonly body: HTMLDivElement;\n\tprotected readonly footer: HTMLDivElement;\n\tprotected readonly footerCancelButton: HTMLButtonElement;\n\tprotected readonly footerOkButton: HTMLButtonElement;\n\n\tprotected readonly $compile: (element: Element) => (scope: NgScope) => { [i: number]: HTMLElement };\n\tprotected readonly $rootScope: NgScope;\n\n\tconstructor(\n\t\tprotected readonly $renderer: NgRenderer,\n\t\tprotected readonly $log: NgLogger,\n\t\tprotected readonly $http: NgHttp,\n\t\tprotected readonly $config: NgAppConfig,\n\t\tprotected readonly $injector: NgInjector,\n\t) {\n\t\tsuper();\n\n\t\tthis.$compile = this.$injector.get('$compile');\n\t\tthis.$rootScope = this.$injector.get('$rootScope');\n\n\t\tthis.backdrop = this.$renderer.createHtmlElement('div', ['modal-backdrop', 'fade']);\n\t\tthis.title = this.$renderer.createHtmlElement('h5', ['modal-title'], [['id', `modal-title-${this.uniqueId}`]]);\n\n\t\tthis.headerCloseButton = this.$renderer.createHtmlElement('button', ['close'], [['type', 'button'], ['aria-label', 'close']]);\n\t\tthis.headerCloseButton.innerHTML = '&times;';\n\n\t\tthis.header = this.$renderer.createHtmlElement('div', ['modal-header']);\n\t\tthis.body = this.$renderer.createHtmlElement('div', ['modal-body']);\n\t\tthis.footer = this.$renderer.createHtmlElement('div', ['modal-footer']);\n\t\tthis.content = this.$renderer.createHtmlElement('div', ['modal-content']);\n\n\t\tthis.header.appendChild(this.title);\n\t\tthis.header.appendChild(this.headerCloseButton);\n\n\t\tthis.content.appendChild(this.header);\n\t\tthis.content.appendChild(this.body);\n\t\tthis.content.appendChild(this.footer);\n\n\t\tthis.footerCancelButton = this.$renderer.createHtmlElement('button', ['btn', 'btn-info'], [['type', 'button']]);\n\t\tthis.footerOkButton = this.$renderer.createHtmlElement('button', ['btn', 'btn-success'], [['type', 'button']]);\n\n\t\tthis.footer.appendChild(this.footerCancelButton);\n\t\tthis.footer.appendChild(this.footerOkButton);\n\n\t\tthis.dialog = this.$renderer.createHtmlElement('div', ['modal-dialog'], [['role', 'document']]);\n\t\tthis.dialog.appendChild(this.content);\n\n\t\tthis.container = this.$renderer.createHtmlElement('div', ['fade', 'modal'], [\n\t\t\t['aria-hidden', 'true'],\n\t\t\t['aria-labelledby', 'modal-title'],\n\t\t\t['role', 'dialog'],\n\t\t\t['tabindex', '-1'],\n\t\t]);\n\t\tthis.container.appendChild(this.dialog);\n\n\t\tdocument.body.appendChild(this.container);\n\t}\n\n\tpublic open<T extends typeof NgController>(options: NgModalOptions<T> = { }) {\n\t\tconst { $log } = this;\n\t\tconst {\n\t\t\ttitle = 'Set the <code>title</code> property to replace me :)',\n\t\t\ttemplate = '<p class=\"lead\">Set the <code>template</code> property to replace me :)</p>',\n\t\t\tcontroller = NgController,\n\t\t\tonClose = () => {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t} = options;\n\n\t\tconst defaultCancelBtnText = 'Cancel';\n\t\tconst defaultOkBtnText = 'Ok';\n\t\tlet {\n\t\t\tcancelBtnText = defaultCancelBtnText,\n\t\t\tokBtnText = defaultOkBtnText,\n\t\t} = options;\n\n\t\tif (cancelBtnText !== false) {\n\t\t\tif (cancelBtnText === true) {\n\t\t\t\tcancelBtnText = defaultCancelBtnText;\n\t\t\t}\n\t\t\tthis.footerCancelButton.innerText = cancelBtnText;\n\t\t}\n\t\tif (okBtnText !== false) {\n\t\t\tif (okBtnText === true) {\n\t\t\t\tokBtnText = defaultOkBtnText;\n\t\t\t}\n\t\t\tthis.footerOkButton.innerText = okBtnText;\n\t\t}\n\n\t\tthis.title.innerHTML = typeof title === 'function' ? title() : title;\n\t\tthis.body.innerHTML =\n\t\t\ttypeof template === 'function' ? template() : template;\n\n\t\tconst $scope = this.$rootScope.$new(true) as Parameters<NgModal['hide']>[1];\n\t\tconst $element = this.$compile(this.container)($scope);\n\t\tconst $ctrl = makeNg1Controller(controller, {\n\t\t\tlog: this.$log,\n\t\t\thttp: this.$http,\n\t\t\trenderer: this.$renderer,\n\t\t\tconfig: () => this.$config,\n\t\t});\n\n\t\t$scope.$ctrl = new $ctrl($element, $scope, this.$injector) as NgController;\n\t\t$scope.$applyAsync();\n\n\t\tconst escapeKeyListener = (e: KeyboardEvent) => {\n\t\t\tif (e.key === 'Escape' || e.key === 'Esc') {\n\t\t\t\tclose();\n\t\t\t}\n\t\t};\n\t\tconst dismiss = () => {\n\t\t\tremoveEventListeners();\n\t\t\tthis.hide(escapeKeyListener, $scope);\n\t\t};\n\n\t\tthis.show(escapeKeyListener);\n\n\t\tconst removeEventListeners = () => {\n\t\t\tthis.headerCloseButton.removeEventListener('click', dismiss);\n\t\t\tthis.footerCancelButton.removeEventListener('click', dismiss);\n\t\t\tthis.footerOkButton.removeEventListener('click', close);\n\t\t\tthis.backdrop.removeEventListener('click', close);\n\t\t};\n\n\t\tconst close = () => {\n\t\t\tif (onClose.call({ $log }, controller as T)) {\n\t\t\t\tdismiss();\n\t\t\t}\n\t\t};\n\t\tthis.headerCloseButton.addEventListener('click', dismiss);\n\t\tthis.footerCancelButton.addEventListener('click', dismiss);\n\t\tthis.footerOkButton.addEventListener('click', close);\n\t\tthis.backdrop.addEventListener('click', close);\n\n\t\treturn { close, dismiss };\n\t}\n\n\tprotected show(escapeKeyListener: (e: KeyboardEvent) => void) {\n\t\tthis.backdrop.style.setProperty('display', 'block');\n\n\t\tthis.container.style.setProperty('display', 'block');\n\t\tthis.container.classList.remove('show');\n\t\tthis.container.removeAttribute('aria-hidden');\n\t\tthis.container.setAttribute('aria-modal', 'true');\n\t\tthis.container.style.setProperty('padding-right', '17px');\n\t\tthis.container.style.setProperty('pointer-events', 'none');\n\n\t\twindow.addEventListener('keydown', escapeKeyListener);\n\t\tdocument.body.appendChild(this.backdrop);\n\t\tdocument.body.classList.add('modal-open');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.backdrop.classList.add('show');\n\t\t\tthis.container.classList.add('show');\n\t\t}, 23);\n\t}\n\n\tprotected hide(\n\t\tescapeKeyListener: (e: KeyboardEvent) => void,\n\t\tscope: NgScope & { $ctrl: NgController; },\n\t) {\n\t\tthis.backdrop.classList.remove('show');\n\t\tthis.container.classList.remove('show');\n\t\tsetTimeout(() => {\n\t\t\tthis.container.style.setProperty('display', 'none');\n\t\t\tthis.backdrop.style.setProperty('display', 'none');\n\t\t}, 150);\n\n\t\tscope.$destroy();\n\t\twindow.removeEventListener('keydown', escapeKeyListener);\n\t\tdocument.body.classList.remove('modal-open');\n\t}\n}\n\nexport interface NgModalOptions<T extends typeof NgController> {\n\t/**\n\t * String representing the modal's title\n\t */\n\ttitle?: string | (() => string);\n\n\t/**\n\t * Inline template representing the modal's content\n\t */\n\ttemplate?: string | (() => string);\n\n\t/**\n\t * Ok button text (false to hide)\n\t */\n\tokBtnText?: string | boolean;\n\n\t/**\n\t * Cancel button text (false to hide, true for default)\n\t */\n\tcancelBtnText?: string | boolean;\n\n\t/**\n\t * A controller for a modal instance.\n\t */\n\tcontroller?: T;\n\n\tonClose?(this: { $log: NgLogger }, controller: T): boolean;\n}\n","import { PatchPayload } from '@ledge/types/patch';\nimport { NgService } from './service';\nimport { NgAppConfig } from './options';\n\nexport interface NgHttpInterceptor {\n\trequest?(config: Request): Request | Promise<Request>;\n\tresponse?(response: any): any;\n\tresponseError?<T extends Error>(response: Response, err: T): void;\n}\n\nexport class NgHttpOptions implements NgHttpInit {\n\tpublic host = this.config.API_HOST;\n\tpublic timeout = 10000;\n\n\tpublic ssl = location.protocol === 'https:';\n\tpublic keepalive = false;\n\n\tpublic cache = 'no-store' as const;\n\tpublic credentials = 'include' as const;\n\tpublic mode = 'cors' as const;\n\tpublic redirect = 'manual' as const;\n\tpublic referrerPolicy = 'origin-when-cross-origin' as const;\n\n\tpublic interceptors: NgHttpInterceptor[];\n\tpublic body?: BodyInit | null;\n\tpublic headers?: HeadersInit;\n\tpublic integrity?: string;\n\tpublic method?: string;\n\tpublic window?: any;\n\n\tpublic referrer?: never;\n\tpublic signal?: never;\n\n\tpublic onFinally: () => void;\n\n\tconstructor(private config: NgAppConfig, init: NgHttpInit) {\n\t\tfor (const [key, value] of Object.entries(init)) {\n\t\t\tif (typeof value === typeof this[key as keyof NgHttpOptions]) {\n\t\t\t\tthis[key as keyof NgHttpOptions] = value;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// tslint:disable:no-redundant-jsdoc\nexport interface NgHttpInit extends RequestInit {\n\t/**\n\t * @default `location.host`\n\t */\n\thost?: string;\n\n\t/**\n\t * If true, use `https://`. Otherwise, use `http://`\n\t * @default false\n\t */\n\tssl?: boolean;\n\n\t/**\n\t * How many milliseconds to wait before aborting the request\n\t * @default 10000\n\t */\n\ttimeout?: number;\n\n\tinterceptors?: NgHttpInterceptor[];\n\n\t/**\n\t * Unsupported\n\t */\n\treferrer?: never;\n\n\t/**\n\t * Unsupported\n\t */\n\tsignal?: never;\n\n\tonFinally?(): void;\n}\n// tslint:enable:no-redundant-jsdoc\n\nexport type NgRequestInterceptor = (config: Request) => Request | Promise<Request>;\nexport type NgResponseInterceptor = (response: any) => any;\nexport type NgResponseErrorInterceptor = <T extends Error>(response: Response, err: T) => void;\n\nexport class NgHttp extends NgService {\n\tprivate interceptors: {\n\t\trequest: NgRequestInterceptor[];\n\t\tresponse: NgResponseInterceptor[];\n\t\tresponseError: NgResponseErrorInterceptor[];\n\t};\n\n\tconstructor(private options: NgHttpInit) {\n\t\tsuper();\n\t\tconst { interceptors = [] } = options;\n\n\t\tthis.interceptors = {\n\t\t\trequest: interceptors\n\t\t\t\t.map(x => x.request)\n\t\t\t\t.filter(x => typeof x === 'function') as NgRequestInterceptor[],\n\n\t\t\tresponse: interceptors\n\t\t\t\t.map(x => x.response)\n\t\t\t\t.filter(x => typeof x === 'function') as NgResponseInterceptor[],\n\n\t\t\tresponseError: interceptors\n\t\t\t\t.map(x => x.responseError)\n\t\t\t\t.filter(x => typeof x === 'function') as NgResponseErrorInterceptor[],\n\t\t};\n\t}\n\n\tpublic async Get<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'GET');\n\t}\n\n\tpublic async Post<T = any>(url: string, data: any = null) {\n\t\treturn this.fetch<T>(url, 'POST', data);\n\t}\n\n\tpublic async Patch<T = any>(url: string, data: PatchPayload) {\n\t\treturn this.fetch<T>(url, 'PATCH', data);\n\t}\n\n\tpublic async Put<T = any>(url: string, data: T) {\n\t\treturn this.fetch(url, 'PUT', data);\n\t}\n\n\tpublic async Delete<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'DELETE');\n\t}\n\n\tpublic async Jsonp<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'JSONP');\n\t}\n\n\tpublic getFullUrl(uri: string, host: string, ssl: boolean) {\n\t\treturn new URL(`http${ssl ? 's' : ''}://${host}/${uri}`).toJSON();\n\t}\n\n\tprivate async fetch<T>(\n\t\turi: string,\n\t\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE' | 'JSONP',\n\t\tdata?: any,\n\t) {\n\t\tlet response = new Response();\n\t\ttry {\n\t\t\tconst {\n\t\t\t\thost = location.host,\n\t\t\t\tssl = false,\n\t\t\t\ttimeout,\n\t\t\t} = this.options;\n\n\t\t\tconst url = this.getFullUrl(uri, host, ssl);\n\t\t\tconst abortCtrl = new AbortController();\n\n\t\t\tlet request = new Request(url, Object.assign({\n\t\t\t\tmethod,\n\t\t\t\tsignal: abortCtrl.signal,\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t}, this.options));\n\n\t\t\tfor (const onRequest of this.interceptors.request) {\n\t\t\t\trequest = await onRequest(request);\n\t\t\t}\n\n\t\t\tconst abortTimer = setTimeout(() => abortCtrl.abort(), timeout);\n\t\t\tresponse = await fetch(request);\n\t\t\tclearTimeout(abortTimer);\n\n\t\t\tif (response.ok) {\n\t\t\t\tlet value: T = await response.json();\n\t\t\t\tfor (const onResponse of this.interceptors.response) {\n\t\t\t\t\tvalue = await onResponse(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tthrow new Error();\n\t\t} catch (err) {\n\t\t\tfor (const onResponseError of this.interceptors.responseError) {\n\t\t\t\tawait onResponseError(response.clone(), err);\n\t\t\t}\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tif (typeof this.options.onFinally === 'function') {\n\t\t\t\tthis.options.onFinally();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { NgController } from '../controller';\nimport { NgComponentOptions } from '../options';\n\nclass IconController extends NgController {\n\tpublic $onInit() {\n\t\tconst { icon: iconName, width = 23, height = 23 } = this.$attrs;\n\t\tconst icon = this.$renderer.createIcon(iconName, { width, height });\n\t\tthis.$element.appendChild(icon);\n\t}\n}\n\nexport const appIcon: NgComponentOptions = {\n\tcontroller: IconController,\n};\n","import { NgController } from '../controller';\nimport { NgComponentOptions } from '../options';\n\nclass SpinnerController extends NgController {\n\tprivate readonly colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\n\tpublic $onInit() {\n\t\tconst { color = 'primary' } = this.$attrs;\n\n\t\tif (this.colors.includes(color) === false) {\n\t\t\tthrow new Error(`Color not supported: ${color}.\\nSupported colors: ${this.colors.join(', ')}`);\n\t\t}\n\n\t\tconst srDesc = this.$renderer.createHtmlElement('span', ['sr-only']);\n\t\tsrDesc.innerText = 'Loading...';\n\n\t\tconst spinner = this.$renderer.createHtmlElement('div', ['spinner-border', `text-${color}`, 'mx-1'], [['role', 'status']]);\n\t\tspinner.appendChild(srDesc);\n\t\tspinner.style.setProperty('margin-top', '0.23rem');\n\n\t\tthis.$element.appendChild(spinner);\n\t}\n}\n\nexport const appSpinner: NgComponentOptions = {\n\tcontroller: SpinnerController,\n};\n","import { appIcon } from './app-icon';\nimport { appSpinner } from './app-spinner';\n\nexport const misc = {\n\tappIcon,\n\tappSpinner,\n};\n","import { Indexed } from '@ledge/types';\n\nexport class NgAttributes {\n\t[name: string]: any;\n\tpublic readonly $attr: Indexed<string> = { };\n\n\tpublic PREFIX_REGEXP = /^((?:x|data)[:\\-_])/i;\n\tpublic SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n\n\tconstructor(private readonly $$element: Element, attrs: Indexed = { }) {\n\t\tfor (const { name: key, value } of Array.from($$element.attributes)) {\n\t\t\tthis.$record(key, value);\n\t\t}\n\n\t\tfor (const [key, value] of Object.entries(attrs)) {\n\t\t\tthis.$record(key, value);\n\t\t}\n\t}\n\n\t/**\n\t * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with x- or data-) to its normalized, camelCase form.\n\t *\n\t * Also there is special case for Moz prefix starting with upper case letter.\n\t *\n\t * For further information check out the guide on @see https://docs.angularjs.org/guide/directive#matching-directives\n\t */\n\tpublic $normalize(name: string) {\n\t\treturn name\n\t\t\t.replace(this.PREFIX_REGEXP, '')\n\t\t\t.replace(this.SPECIAL_CHARS_REGEXP, (_, letter, offset) => offset ? letter.toUpperCase() : letter);\n\t}\n\n\t/**\n\t * Checks if the CSS class value is present on the element.\n\t */\n\tpublic $hasClass(className: string) {\n\t\treturn this.$$element.classList.contains(className);\n\t}\n\n\t/**\n\t * Adds the specified CSS class value to the element.\n\t * If animations are enabled then an animation will be triggered for the class addition.\n\t */\n\tpublic $addClass(className: string) {\n\t\tif (this.$hasClass(className)) {\n\t\t\tthis.$$element.classList.add(className);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the specified CSS class value from the element.\n\t * If animations are enabled then an animation will be triggered for the class removal.\n\t */\n\tpublic $removeClass(className: string) {\n\t\tif (this.$hasClass(className)) {\n\t\t\tthis.$$element.classList.remove(className);\n\t\t}\n\t}\n\n\t/**\n\t * Adds and removes CSS class values to the element based on the difference between\n\t * two space-delimited strings of CSS class values.\n\t *\n\t * @param newClasses: The space-delimited list of CSS classes to add or retain\n\t * @param oldClasses: The space-delimited list of CSS classes to remove if not contained within newClasses\n\t */\n\tpublic $updateClass(newClasses: string, oldClasses: string) {\n\t\tconst nu = newClasses.split(/\\s/g).filter(x => x.length > 0);\n\t\tconst old = oldClasses.split(/\\s/g).filter(x => x.length > 0);\n\n\t\tfor (const o of old) {\n\t\t\tif (nu.includes(o)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.$removeClass(o);\n\t\t}\n\n\t\tfor (const n of nu) {\n\t\t\tthis.$addClass(n);\n\t\t}\n\t}\n\n\t/**\n\t * Set DOM element attribute value.\n\t */\n\tpublic $set(key: string, value: any) {\n\t\tthis.$$element.setAttribute(key, value);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tpublic $observe<T>(_: string, __: (value?: T) => any) {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.warn('$observe is a noop');\n\t\treturn () => { return; };\n\t}\n\n\tprotected $record(key: string, value: string) {\n\t\tconst normalized = this.$normalize(key);\n\t\tthis[normalized] = value;\n\t\tthis.$attr[key] = normalized;\n\t}\n}\n","import { Indexed } from '@ledge/types';\n\n// tslint:disable:no-var-requires\nconst data = require('octicons/build/data.json');\nconst octicons: Indexed = { };\n\nfor (const key of Object.keys(data)) {\n\tconst icon = octicons[key] = Object.assign({ }, data[key]);\n\n\t// Returns a string representation of html attributes\n\tconst htmlAttributes = (options?: any) => {\n\t\tconst attributes: string[] = [];\n\t\tconst attrObj = Object.assign({ }, icon.options, options);\n\n\t\t// If the user passed in options\n\t\tif (options) {\n\t\t\t// If any of the width or height is passed in\n\t\t\tif (options.width || options.height) {\n\t\t\t\tattrObj.width = options.width ? options.width : (parseInt(options.height, 10) * icon.options.width / icon.options.height);\n\t\t\t\tattrObj.height = options.height ? options.height : (parseInt(options.width, 10) * icon.options.height / icon.options.width);\n\t\t\t}\n\n\t\t\t// If the user passed in class\n\t\t\tif (options.class) {\n\t\t\t\tattrObj.class = `octicon octicon-${key} ${options.class}`;\n\t\t\t\tattrObj.class.trim();\n\t\t\t}\n\n\t\t\t// If the user passed in aria-label\n\t\t\tif (options['aria-label']) {\n\t\t\t\tattrObj['aria-label'] = options['aria-label'];\n\t\t\t\tattrObj.role = 'img';\n\n\t\t\t\t// Un-hide the icon\n\t\t\t\tdelete attrObj['aria-hidden'];\n\t\t\t}\n\t\t}\n\n\t\tObject.keys(attrObj).forEach(option => {\n\t\t\tattributes.push(`${option}=\"${attrObj[option]}\"`);\n\t\t});\n\n\t\treturn attributes.join(' ').trim();\n\t};\n\n\t// Set the symbol for easy access\n\ticon.symbol = key;\n\n\t// Set all the default options\n\ticon.options = {\n\t\tversion: '1.1',\n\t\twidth: icon.width,\n\t\theight: icon.height,\n\t\tviewBox: `0 0 ${icon.width} ${icon.height}`,\n\t\tclass: `octicon octicon-${key}`,\n\t\t'aria-hidden': 'true',\n\t};\n\n\t// Function to return an SVG object\n\ticon.toSVG = (options: any) => `<svg ${htmlAttributes(options)}>${icon.path}</svg>`;\n}\n\nexport { octicons };\n","import { NgInputOptions } from './shared';\n\nexport const checkBox: NgInputOptions = {\n\ttype: 'input',\n\ttemplateClass: 'form-check',\n\tlabelClass: 'form-check-label',\n\trender(h) {\n\t\tconst input = h.createInput('checkbox');\n\t\tinput.style.setProperty('cursor', 'pointer');\n\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\n\t\t\tthis.$template.classList.remove('form-check');\n\t\t\tthis.$template.classList.add('form-check-inline');\n\t\t}\n\n\t\treturn input;\n\t},\n\tbindings: {\n\t\tngChecked: '<',\n\t},\n};\n","import { Indexed } from '@ledge/types';\nimport { ParamType, ResolveTypes, StateDeclaration, StateService, TargetState, Transition } from '@uirouter/core';\n\nimport { NgService } from './service';\n\nexport class NgRouter<T extends NgRoute = NgRoute> extends NgService {\n\tpublic routes: T[] = [];\n\n\tpublic getRoutes() {\n\t\treturn this.routes;\n\t}\n\n\tpublic registerRoute(partial: Partial<T>) {\n\t\tconst { name, parent, url } = this.generateRouteMeta(partial);\n\n\t\tconst state = Object.assign({\n\t\t\tname,\n\t\t\tparent,\n\t\t\turl,\n\t\t}, partial);\n\n\t\tif (this.isNgTransitionFn(state.onEnter)) {\n\t\t\tstate.onEnter = ['$transition$', state.onEnter];\n\t\t}\n\t\tif (this.isNgTransitionFn(state.onExit)) {\n\t\t\tstate.onExit = ['$transition$', state.onExit];\n\t\t}\n\t\tif (this.isNgTransitionFn(state.onRetain)) {\n\t\t\tstate.onRetain = ['$transition$', state.onRetain];\n\t\t}\n\n\t\tthis.routes.push(state as T);\n\n\t\treturn state as T;\n\t}\n\n\tpublic async isAuthorized() {\n\t\treturn true;\n\t}\n\n\tpublic generateIntIdParam() {\n\t\tconst param = {\n\t\t\ttype: new ParamType({\n\t\t\t\tdecode(value) {\n\t\t\t\t\treturn parseInt(value, 10);\n\t\t\t\t},\n\t\t\t\tencode(value) {\n\t\t\t\t\treturn value && value.toString();\n\t\t\t\t},\n\t\t\t\tequals(a, b) {\n\t\t\t\t\treturn this.is(a) && a === b;\n\t\t\t\t},\n\t\t\t\tis(value) {\n\t\t\t\t\treturn Number.isInteger(this.decode(value));\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tparam.type.name = 'path';\n\t\treturn param;\n\t}\n\n\tpublic generateIntQueryParam() {\n\t\tconst param = {\n\t\t\ttype: new ParamType({\n\t\t\t\tdecode(value) {\n\t\t\t\t\treturn parseInt(value, 10);\n\t\t\t\t},\n\t\t\t\tencode(value) {\n\t\t\t\t\treturn value && value.toString();\n\t\t\t\t},\n\t\t\t\tequals(a, b) {\n\t\t\t\t\treturn this.is(a) && a === b;\n\t\t\t\t},\n\t\t\t\tis(value) {\n\t\t\t\t\treturn Number.isInteger(this.decode(value));\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tparam.type.name = 'query';\n\t\treturn param;\n\t}\n\n\tprotected isNgTransitionFn(item?: NgResolveFn | NgAnnotatedResolveFn): item is NgResolveFn {\n\t\treturn typeof item === 'function';\n\t}\n\n\tprotected annotateResolveFunctions({ resolve = { } }: NgRoute) {\n\t\tfor (const [ id, resolveFn ] of Object.entries(resolve)) {\n\t\t\tif (Array.isArray(resolve)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this.isNgTransitionFn(resolveFn)) {\n\t\t\t\tresolve[id] = ['$transition$', resolveFn];\n\t\t\t}\n\t\t}\n\n\t\treturn resolve;\n\t}\n\n\tprotected generateRouteMeta(\n\t\t{\n\t\t\tparams = { },\n\t\t\tdata = { },\n\t\t\tname = '',\n\t\t\tcomponent = '',\n\t\t\tparent = '',\n\t\t}: Partial<T>,\n\t) {\n\t\tname = (name || component);\n\n\t\tlet url = `/${data.isBase ? name : name.split(/(?=[A-Z])/).join('/').toLowerCase()}`\n\t\t\t.replace(/View$/, '');\n\n\t\tfor (const [key, { type = { } }] of Object.entries<any>(params)) {\n\t\t\turl += type.name === 'path' ? '/:' : (url.includes('?') ? '&' : '?');\n\t\t\turl += key;\n\t\t}\n\n\t\treturn { name, parent, url };\n\t}\n}\n\n/**\n * @internalapi\n * an intermediate interface.\n *\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\n */\n// tslint:disable-next-line:class-name\ninterface _NgStateService extends StateService {\n\tcurrent: any;\n}\n\nexport interface NgStateService extends _NgStateService {\n\tcurrent: NgRoute;\n\tlabel: string;\n\tparent: string;\n}\n\n/**\n * @internalapi\n * an intermediate interface.\n *\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\n */\n// tslint:disable-next-line:class-name\ninterface _NgRoute extends StateDeclaration {\n\tonExit?: any;\n\tonRetain?: any;\n\tonEnter?: any;\n\tviews?: any;\n\tresolve?: any;\n}\n\nexport type NgResolveFn<T = any> = ($trans: Transition) => Promise<T>;\nexport type NgAnnotatedResolveFn<T = any> = [string, NgResolveFn<T>];\nexport type NgTransition = NgResolveFn<TargetState | Transition> | NgAnnotatedResolveFn<TargetState | Transition>;\n\nexport interface NgRoute extends _NgRoute {\n\t/**\n\t * The name of the component to use for this view.\n\t */\n\tcomponent?: string;\n\n\t/**\n\t * An object which maps `resolve`s to component `bindings`.\n\t *\n\t * When using a component declaration (`component: 'myComponent'`),\n\t * each input binding for the component is supplied data from a resolve of\n\t * the same name, by default.\n\t *\n\t * You may supply data from a different resolve name by mapping it here.\n\t */\n\tbindings?: {\n\t\t[key: string]: string;\n\t};\n\n\tresolve?: Indexed<NgResolveFn | NgAnnotatedResolveFn> | ResolveTypes[];\n\n\t/**\n\t * Injected function which returns the HTML template.\n\t * The template will be used to render the corresponding component.\n\t *\n\t * #### Examples:\n\t * ```ts\n\t * {\n\t * \t// other props\n\t * \ttemplate: require('./template.pug');\n\t * }\n\t * ```\n\t * ```ts\n\t * {\n\t * \t// other props\n\t * \ttemplate: '<div>Hello, world!</div>';\n\t * }\n\t * ```\n\t */\n\ttemplate?: string | (() => string);\n\n\turl: string;\n\tparent: string;\n\tlabel: string;\n\n\tonEnter?: NgTransition;\n\tonExit?: NgTransition;\n\tonRetain?: NgTransition;\n}\n","import { Indexed, WritableKeysOf } from '@ledge/types';\nimport { Renderer2, RendererStyleFlags2 } from '@angular/core';\nimport { octicons } from './icon';\n\nexport class NgRenderer extends Renderer2 {\n\tpublic baseInputAttrs: [string, string][] = [\n\t\t['ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t['ng-attr-name', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t['ng-model', '$ctrl.ngModel'],\n\t\t['ng-model-options', '$ctrl.ngModelOptions'],\n\t];\n\n\tconstructor(private document: HTMLDocument) { super(); }\n\n\tpublic createHtmlElement<T extends keyof HTMLElementTagNameMap | 'ng-transclude'>(\n\t\ttagName: T,\n\t\tclasses: string[] = [],\n\t\tattrs: [string, string][] = [],\n\t) {\n\t\tconst $el = this.createElement(tagName);\n\n\t\tfor (const c of classes) {\n\t\t\tthis.addClass($el, c);\n\t\t}\n\n\t\tfor (const [key, value] of attrs) {\n\t\t\t$el.setAttribute(key, value);\n\t\t}\n\n\t\treturn $el as T extends keyof HTMLElementTagNameMap\n\t\t\t? HTMLElementTagNameMap[T]\n\t\t\t: HTMLUnknownElement;\n\t}\n\n\tpublic createInput(type: string = 'text', attrs: [string, string][] = []) {\n\t\tconst $isRange = type === 'range';\n\t\tconst $isRadio = type === 'radio';\n\t\tconst $isCheckbox = type === 'checkbox';\n\t\tconst $isFormCheck = $isRadio || $isCheckbox;\n\n\t\tconst $class =\n\t\t\t$isFormCheck\n\t\t\t\t? ['form-check-input']\n\t\t\t\t: $isRange\n\t\t\t\t\t? ['custom-range']\n\t\t\t\t\t: ['form-control'];\n\n\t\tconst $inputAttrs: [string, string][] = [\n\t\t\t...this.baseInputAttrs,\n\t\t\t...attrs,\n\t\t\t['type', type],\n\t\t];\n\n\t\tif ($isRadio) {\n\t\t\t$inputAttrs.shift(); // we'll set the id in render\n\t\t} else if ($isCheckbox === false && $isRange === false) {\n\t\t\t$inputAttrs.push(['maxlength', '{{maxlength}}'], ['placeholder', '{{placeholder}}']);\n\t\t}\n\n\t\treturn this.createHtmlElement('input', $class, $inputAttrs);\n\t}\n\n\tpublic createTextArea() {\n\t\treturn this.createHtmlElement('textarea', ['form-control'], [\n\t\t\t...this.baseInputAttrs,\n\t\t\t['maxlength', '{{maxlength}}'],\n\t\t\t['placeholder', '{{placeholder}}'],\n\t\t]);\n\t}\n\n\tpublic createIcon(iconName: string, options: Indexed = { }) {\n\t\tif (octicons.hasOwnProperty(iconName) === false) {\n\t\t\tthrow new Error(`\n\t\t\t\tIcon not supported: ${iconName}.\\nSupported icons: ${Object.keys(octicons).sort().join(', ')}\n\t\t\t`.trim());\n\t\t}\n\n\t\tconst svg = octicons[iconName].toSVG(Object.assign(options, { 'aria-label': iconName }));\n\t\tconst container = this.createHtmlElement('div', ['d-inline-flex', 'px-1']);\n\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\tcontainer.setAttribute('title', iconName);\n\t\tcontainer.innerHTML = svg;\n\n\t\treturn container;\n\t}\n\n\tpublic createLabel(classList: string[], {\n\t\tisRequired = false,\n\t\tisSrOnly = false,\n\t\tisRadio = false,\n\t}: {\n\t\tisRequired?: boolean,\n\t\tisSrOnly?: boolean,\n\t\tisRadio?: boolean,\n\t} = {\n\t\t\tisRequired: false,\n\t\t\tisSrOnly: false,\n\t\t\tisRadio: false,\n\t\t},\n\t) {\n\t\tconst $label = this.createHtmlElement(\n\t\t\t'label',\n\t\t\tclassList,\n\t\t\t[['ng-attr-for', '{{id}}_{{$ctrl.uniqueId}}']],\n\t\t);\n\n\t\tif (isRequired === true && !isRadio) {\n\t\t\tconst $span = this.createHtmlElement('span', ['text-danger']);\n\t\t\t$span.textContent = ' *';\n\t\t\t$label.appendChild($span);\n\t\t}\n\n\t\tif (isSrOnly === true) {\n\t\t\t$label.classList.add('sr-only');\n\t\t}\n\n\t\treturn $label;\n\t}\n\n\tpublic createSlot(name?: string) {\n\t\treturn name != null\n\t\t\t? this.createHtmlElement('div', [], [['ng-transclude', name]])\n\t\t\t: this.createHtmlElement('ng-transclude') as HTMLDivElement;\n\t}\n\n\tpublic createIconInput($input: HTMLElement, icon?: string, inputGroupAttrs: [string, string][] = []) {\n\t\tif (icon == null) {\n\t\t\treturn $input;\n\t\t}\n\n\t\tconst $inputGroup = this.createHtmlElement('div', ['input-group']);\n\t\tconst $inputGroupPrepend = this.createHtmlElement('div', ['input-group-prepend'], inputGroupAttrs);\n\t\tconst $inputGroupText = this.createHtmlElement('span', ['input-group-text']);\n\t\tconst $icon = this.createIcon(icon);\n\n\t\t$inputGroupText.appendChild($icon);\n\t\t$inputGroupPrepend.appendChild($inputGroupText);\n\n\t\t$inputGroup.appendChild($inputGroupPrepend);\n\t\t$inputGroup.appendChild($input);\n\n\t\treturn $inputGroup;\n\t}\n\n\t/**\n\t * Renderer2 implementations\n\t */\n\n\t// tslint:disable-next-line: member-ordering\n\tpublic data: {  [key: string]: any} = Object.create(null);\n\n\t// tslint:disable-next-line: member-ordering\n\tpublic destroyNode: null;\n\n\tpublic destroy() {\n\t\treturn;\n\t}\n\n\tpublic createElement<T extends keyof HTMLElementTagNameMap>(tagName: T): HTMLElementTagNameMap[T];\n\tpublic createElement(tagName: string): HTMLUnknownElement;\n\tpublic createElement<T extends keyof HTMLElementTagNameMap>(tagName: T) {\n\t\treturn this.document.createElement(tagName);\n\t}\n\n\tpublic createText(value: string) {\n\t\treturn this.document.createTextNode(value);\n\t}\n\n\tpublic createComment(value: string) {\n\t\treturn this.document.createComment(value);\n\t}\n\n\tpublic appendChild(parent: HTMLElement, newChild: HTMLElement) {\n\t\tparent.appendChild(newChild);\n\t}\n\n\tpublic removeChild(parent: HTMLElement, newChild: HTMLElement) {\n\t\tparent.removeChild(newChild);\n\t}\n\n\tpublic insertBefore(parent: HTMLElement, newChild: HTMLElement, refChild: HTMLElement) {\n\t\tparent.insertBefore(newChild, refChild);\n\t}\n\n\tpublic addClass<T extends HTMLElement>(el: T, name: string) {\n\t\tel.classList.add(name);\n\t}\n\n\tpublic removeClass<T extends HTMLElement>(el: T, name: string) {\n\t\tel.classList.remove(name);\n\t}\n\n\tpublic setStyle<T extends HTMLElement>(el: T, style: string, value: any, flags?: RendererStyleFlags2) {\n\t\tel.style.setProperty(style, value, flags == null ? undefined : flags === RendererStyleFlags2.Important ? 'important' : '');\n\t}\n\n\tpublic removeStyle<T extends HTMLElement>(el: T, style: string) {\n\t\tel.style.removeProperty(style);\n\t}\n\n\tpublic setAttribute<T extends HTMLElement>(el: T, name: string, value: string) {\n\t\tel.setAttribute(name, value);\n\t}\n\n\tpublic removeAttribute<T extends HTMLElement>(el: T, name: string) {\n\t\tel.removeAttribute(name);\n\t}\n\n\tpublic setProperty<T extends HTMLElement, U extends Exclude<WritableKeysOf<T>, number | symbol>>(el: T, name: U, value: any) {\n\t\tel[name] = value;\n\t}\n\n\tpublic setValue<T extends HTMLElement>(node: T, value: string) {\n\t\tnode.nodeValue = value;\n\t}\n\n\tpublic parentNode(node: HTMLElement) {\n\t\treturn node.parentNode;\n\t}\n\n\tpublic nextSibling(node: HTMLElement) {\n\t\treturn node.nextSibling;\n\t}\n\n\tpublic selectRootElement(selectorOrNode: string | HTMLElement, preserveContent = false): HTMLElement {\n\t\tconst el: HTMLElement | null = typeof selectorOrNode === 'string'\n\t\t\t? this.document.querySelector(selectorOrNode)\n\t\t\t: selectorOrNode;\n\n\t\tif (el == null) {\n\t\t\tthrow new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n\t\t}\n\n\t\tif (preserveContent === false) {\n\t\t\tel.textContent = '';\n\t\t}\n\n\t\treturn el;\n\t}\n\n\tpublic listen<T extends keyof GlobalEventHandlersEventMap>(\n\t\ttarget: HTMLElement,\n\t\teventName: T,\n\t\tcallback: (event: GlobalEventHandlersEventMap[T]) => boolean | void,\n\t) {\n\t\ttarget.addEventListener(eventName, callback);\n\t\treturn () => target.removeEventListener(eventName, callback);\n\t}\n}\n","import { NgInputController, NgInputOptions } from './shared';\n\nclass TextBoxController extends NgInputController {\n\tpublic $element: HTMLTextAreaElement;\n\tpublic $mirror = document.createElement('textarea');\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.$mirror.setAttribute('aria-hidden', 'true');\n\t\tthis.$mirror.setAttribute('aria-label', 'Hidden TextArea');\n\t\tthis.$mirror.setAttribute('tabindex', '-1');\n\n\t\tthis.$mirror.style.setProperty('position', 'absolute');\n\t\tthis.$mirror.style.setProperty('top', '-999px');\n\t\tthis.$mirror.style.setProperty('right', 'auto');\n\t\tthis.$mirror.style.setProperty('bottom', 'auto');\n\t\tthis.$mirror.style.setProperty('left', '0');\n\t\tthis.$mirror.style.setProperty('overflow', 'hidden');\n\t\tthis.$mirror.style.setProperty('box-sizing', 'content-box');\n\t\tthis.$mirror.style.setProperty('min-height', '0', 'important');\n\t\tthis.$mirror.style.setProperty('height', '0', 'important');\n\t\tthis.$mirror.style.setProperty('padding', '0');\n\t\tthis.$mirror.style.setProperty('word-wrap', 'break-word');\n\t\tthis.$mirror.style.setProperty('border', '0');\n\n\t\t// append mirror to the DOM\n\t\tdocument.body.appendChild(this.$mirror);\n\t}\n\n\tpublic $onInit() {\n\t\t// the query *must* return an element or nothing we've done so far matters\n\t\tconst element = this.$element.querySelector('textarea') as HTMLTextAreaElement;\n\t\tlet computedStyle = window.getComputedStyle(element);\n\n\t\tconst boxOuter = {\n\t\t\twidth:\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-right-width'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-right'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-left'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-left-width'), 10),\n\t\t\theight:\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-top-width'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-top'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-bottom'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-bottom-width'), 10),\n\t\t};\n\n\t\tconst minHeightValue = parseInt(computedStyle.getPropertyValue('min-height'), 10);\n\t\tconst heightValue = parseInt(computedStyle.getPropertyValue('height'), 10);\n\t\tconst minHeight = Math.max(minHeightValue, heightValue) - boxOuter.height;\n\n\t\t// Opera returns max-height of -1 if not set\n\t\tlet maxHeight = parseInt(computedStyle.getPropertyValue('max-height'), 10);\n\t\tmaxHeight = maxHeight && maxHeight > 0 ? maxHeight : 9e4;\n\n\t\t// set resize and apply elastic\n\t\telement.style.setProperty('resize', 'none');\n\n\t\tconst mirror = this.$mirror;\n\t\tfunction adjust() {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tcomputedStyle = window.getComputedStyle(element);\n\n\t\t\t\tconst width = (parseInt(computedStyle.getPropertyValue('width'), 10) - boxOuter.width) + 'px';\n\t\t\t\tmirror.style.setProperty('width', width);\n\t\t\t\tmirror.style.setProperty('overflow-y', computedStyle.getPropertyValue('overflow-y'));\n\n\t\t\t\tmirror.value = element.value;\n\n\t\t\t\tlet { scrollHeight } = mirror;\n\t\t\t\tlet overflow = 'hidden';\n\n\t\t\t\tif (scrollHeight > maxHeight) {\n\t\t\t\t\tscrollHeight = maxHeight;\n\t\t\t\t\toverflow = 'scroll';\n\t\t\t\t} else if (scrollHeight < minHeight) {\n\t\t\t\t\tscrollHeight = minHeight;\n\t\t\t\t}\n\n\t\t\t\telement.style.setProperty('overflow-y', overflow);\n\n\t\t\t\tscrollHeight += boxOuter.height;\n\t\t\t\tif (parseInt(computedStyle.getPropertyValue('height'), 10) !== scrollHeight) {\n\t\t\t\t\telement.style.setProperty('height', scrollHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\twindow.addEventListener('resize', adjust);\n\t\telement.addEventListener('keydown', adjust);\n\n\t\tthis.$scope.$on('$destroy', () => {\n\t\t\tif (this.isIE11) {\n\t\t\t\t(this.$mirror as any).removeNode(true);\n\t\t\t} else {\n\t\t\t\tthis.$mirror.remove();\n\t\t\t}\n\t\t\twindow.removeEventListener('resize', adjust);\n\t\t\telement.removeEventListener('keydown', adjust);\n\t\t});\n\n\t\t// copy the essential styles from the textarea to the mirror\n\t\tconst styles = [\n\t\t\t'font-family',\n\t\t\t'font-size',\n\t\t\t'font-weight',\n\t\t\t'font-style',\n\t\t\t'letter-spacing',\n\t\t\t'line-height',\n\t\t\t'text-transform',\n\t\t\t'word-spacing',\n\t\t\t'text-indent',\n\t\t\t'white-space',\n\t\t];\n\n\t\tfor (const style of styles) {\n\t\t\tthis.$mirror.style.setProperty(style, computedStyle.getPropertyValue(style));\n\t\t}\n\t}\n}\n\nexport const textBox: NgInputOptions = {\n\ttype: 'input',\n\tattrs: { maxlength: 3000, placeholder: '' },\n\trender(h) {\n\t\tconst textArea = h.createTextArea();\n\n\t\ttextArea.style.setProperty('overflow', 'hidden');\n\t\ttextArea.style.setProperty('overflow-y', 'hidden');\n\t\ttextArea.style.setProperty('word-wrap', 'break-word');\n\n\t\treturn textArea;\n\t},\n\tcontroller: TextBoxController,\n};\n","import Fuse from 'fuse.js';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { isMobile } from '@ledge/is-mobile';\n\nimport { NgInputController, NgInputOptions } from './shared';\nimport { NgAttributes } from '../attributes';\n\nclass SelectController extends NgInputController {\n\tpublic static readonly SinglePlaceholder = '----Select One----';\n\tpublic static readonly MultiplePlaceholder = '----Select All That Apply----';\n\n\tpublic static IsMultiple($attrs: NgAttributes) {\n\t\treturn $attrs.hasOwnProperty('multiple') || $attrs.type === 'multiple';\n\t}\n\n\tpublic static GetPlaceholder($attrs: NgAttributes) {\n\t\treturn $attrs.placeholder ||\n\t\t\tSelectController.IsMultiple($attrs)\n\t\t\t? SelectController.MultiplePlaceholder\n\t\t\t: SelectController.SinglePlaceholder;\n\t}\n\n\tprotected isListOpen = false;\n\tprotected list: any[];\n\tprotected searchList: any[];\n\n\tprivate _text: string;\n\tprivate _value: string;\n\n\tpublic get text() {\n\t\tif (typeof this._text !== 'string') {\n\t\t\tconst { text = 'Text' } = this.$attrs;\n\t\t\tthis._text = text;\n\t\t}\n\t\treturn this._text;\n\t}\n\n\tpublic get value() {\n\t\tif (typeof this._value !== 'string') {\n\t\t\tconst { value = 'Value' } = this.$attrs;\n\t\t\tthis._value = value;\n\t\t}\n\t\treturn this._value;\n\t}\n\n\tprivate destroyCurrentWatcher: () => void;\n\n\tprivate get isMultiple() {\n\t\treturn SelectController.IsMultiple(this.$attrs);\n\t}\n\n\tpublic $onInit() {\n\t\tconst container = this.$element.querySelector('.select-container') as HTMLDivElement;\n\t\tconst innerContainer = this.$element.querySelector('.select-inner-container') as HTMLDivElement;\n\t\tconst dropdown = this.$element.querySelector('.select-dropdown') as HTMLDivElement;\n\t\tconst dropdownlist = this.$element.querySelector('.select-dropdown-list') as HTMLDivElement;\n\t\tconst input = this.$element.querySelector('input') as HTMLInputElement;\n\n\t\tconst updateSearchList = () => {\n\t\t\tif (input.value) {\n\t\t\t\tthis.searchList = this.getSearchList(fuzzer.search(input.value));\n\t\t\t} else {\n\t\t\t\tthis.searchList = cloneDeep(this.list);\n\t\t\t}\n\t\t\tthis.$scope.$applyAsync();\n\t\t};\n\n\t\tlet fuzzer: Fuse<any, any>;\n\t\tthis.$scope.$watchCollection(\n\t\t\t() => this.list,\n\t\t\t_ => {\n\t\t\t\tfuzzer = new Fuse(_, {\n\t\t\t\t\tshouldSort: true,\n\t\t\t\t\tthreshold: 0.3,\n\t\t\t\t\tlocation: 0,\n\t\t\t\t\tdistance: 100,\n\t\t\t\t\tmaxPatternLength: 32,\n\t\t\t\t\tminMatchCharLength: 1,\n\t\t\t\t\tkeys: [this.text],\n\t\t\t\t});\n\n\t\t\t\tupdateSearchList();\n\t\t\t},\n\t\t);\n\n\t\tlet shouldFocusInput = true;\n\t\tinnerContainer.onclick = e => {\n\t\t\tif (e.target instanceof HTMLButtonElement ||\n\t\t\t\t(this.isMultiple &&\n\t\t\t\t\te.target instanceof HTMLElement &&\n\t\t\t\t\te.target.classList.contains('select-item') &&\n\t\t\t\t\te.target.classList.contains('placeholder') === false)) {\n\t\t\t\tshouldFocusInput = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (shouldFocusInput) {\n\t\t\t\tinput.hidden = false;\n\t\t\t\tinput.focus();\n\t\t\t}\n\n\t\t\tshouldFocusInput = true;\n\t\t};\n\n\t\tinput.onfocus = () => {\n\t\t\tdropdown.classList.remove('border-top-0');\n\t\t\tdropdown.classList.remove('border-bottom-0');\n\t\t\tdropdownlist.hidden = false;\n\t\t};\n\n\t\tinput.onblur = e => {\n\t\t\tlet target = e.target as HTMLElement;\n\t\t\tif (target.nodeName === '#text') {\n\t\t\t\ttarget = target.parentElement as HTMLElement;\n\t\t\t}\n\n\t\t\tconst targetIsItem =\n\t\t\t\ttarget instanceof HTMLDivElement &&\n\t\t\t\ttarget.classList.contains('select-item') &&\n\t\t\t\ttarget.parentElement instanceof HTMLDivElement &&\n\t\t\t\ttarget.parentElement.classList.contains('select-dropdown-list');\n\n\t\t\tif (targetIsItem) {\n\t\t\t\tinput.value = '';\n\t\t\t\tthis.select(target.dataset.value);\n\t\t\t\tshouldFocusInput = true;\n\t\t\t} else {\n\t\t\t\tshouldFocusInput = e.relatedTarget !== container && e.relatedTarget !== innerContainer;\n\t\t\t}\n\n\t\t\tdropdown.classList.add('border-top-0');\n\t\t\tdropdown.classList.add('border-bottom-0');\n\t\t\tdropdownlist.hidden = true;\n\n\t\t\tinput.hidden = true;\n\t\t};\n\n\t\tinput.oninput = () => {\n\t\t\tupdateSearchList();\n\t\t};\n\t}\n\n\tpublic $onDestroy() {\n\t\tif (typeof this.destroyCurrentWatcher === 'function') {\n\t\t\tthis.destroyCurrentWatcher();\n\t\t}\n\t}\n\n\tpublic getDisplayText(value: any) {\n\t\tif (value == null) {\n\t\t\treturn SelectController.GetPlaceholder(this.$attrs);\n\t\t}\n\n\t\t// tslint:disable-next-line:triple-equals\n\t\treturn this.list.find(x => x[this.value] == value)[this.text];\n\t}\n\n\tpublic remove(item: any) {\n\t\t// tslint:disable-next-line:triple-equals\n\t\tthis.ngModel = this.ngModel.filter((x: any) => x != item);\n\t}\n\n\tpublic clear() {\n\t\tthis.ngModel = undefined;\n\t\tthis.searchList = this.getSearchList(this.list);\n\t}\n\n\tpublic select(value: any) {\n\t\tif (this.isMultiple) {\n\t\t\tthis.ngModel = Array.isArray(this.ngModel)\n\t\t\t\t? this.ngModel.includes(value)\n\t\t\t\t\t? this.ngModel\n\t\t\t\t\t: this.ngModel.concat(value)\n\t\t\t\t: [value];\n\t\t} else {\n\t\t\tthis.ngModel = value;\n\t\t}\n\n\t\tthis.searchList = this.getSearchList(this.list);\n\t\tthis.$scope.$applyAsync();\n\t}\n\n\tprivate getSearchList(list: any[]) {\n\t\t// tslint:disable:triple-equals\n\t\treturn Array.isArray(this.ngModel)\n\t\t\t? list.filter(x => this.ngModel.every((y: any) => x[this.value] != y))\n\t\t\t: this.ngModel == null\n\t\t\t\t? cloneDeep(list)\n\t\t\t\t: list.filter(x => x[this.value] != this.ngModel);\n\t\t// tslint:enable:triple-equals\n\t}\n}\n\nexport const selectList: NgInputOptions = {\n\ttype: 'input',\n\trender(h) {\n\t\tconst select = h.createHtmlElement(\n\t\t\t'select',\n\t\t\t['form-control', 'select-input', 'd-none'],\n\t\t\t[\n\t\t\t\t['ng-attr-name', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t\t\t['ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t\t\t['ng-model', '$ctrl.ngModel'],\n\t\t\t],\n\t\t);\n\n\t\tconst isMultiple = SelectController.IsMultiple(this.$attrs);\n\t\tif (isMultiple) {\n\t\t\tselect.setAttribute('multiple', 'true');\n\t\t} else {\n\t\t\tconst placeholder = h.createHtmlElement('option');\n\n\t\t\tplaceholder.setAttribute('placeholder', 'true');\n\t\t\tplaceholder.text = SelectController.GetPlaceholder(this.$attrs);\n\t\t\tplaceholder.value = '';\n\n\t\t\tselect.appendChild(placeholder);\n\t\t}\n\n\t\tif (isMobile()) {\n\t\t\tselect.classList.remove('d-none');\n\t\t\tselect.setAttribute(\n\t\t\t\t'ng-options',\n\t\t\t\t'item[\\'{{$ctrl.value}}\\'] as item[\\'{{$ctrl.text}}\\'] for item in $ctrl.searchList track by $index',\n\t\t\t);\n\t\t\treturn select;\n\t\t}\n\n\t\tconst inner = h.createHtmlElement('div', ['select-inner-container']);\n\t\tconst innerlist = h.createHtmlElement('div', ['select-list', isMultiple ? 'multiple' : 'single']);\n\t\tconst selected = h.createHtmlElement('div', ['select-item']);\n\n\t\tconst btn = h.createHtmlElement('button', ['select-button'],\n\t\t\t[\n\t\t\t\t['ng-attr-aria-label', 'Remove item: \\'{{$ctrl.getDisplayText($ctrl.ngModel)}}\\''],\n\t\t\t\t['ng-click', '$ctrl.clear()'],\n\t\t\t],\n\t\t);\n\n\t\tif (isMultiple) {\n\t\t\tconst sbtn = btn.cloneNode() as HTMLButtonElement;\n\t\t\tsbtn.setAttribute('ng-attr-aria-label', 'Remove item: \\'{{$ctrl.getDisplayText(item)}}\\'');\n\t\t\tsbtn.setAttribute('ng-click', '$ctrl.remove(item)');\n\n\t\t\tselected.setAttribute('ng-repeat', 'item in $ctrl.ngModel track by $index');\n\t\t\tselected.setAttribute('aria-selected', 'true');\n\t\t\tselected.innerHTML = `{{$ctrl.getDisplayText(item)}}${sbtn.outerHTML}`;\n\n\t\t\tconst placeholder = h.createHtmlElement('div', ['select-item', 'placeholder'], [['ng-if', '$ctrl.ngModel == null || $ctrl.ngModel.length === 0']]);\n\t\t\tplaceholder.innerText = SelectController.GetPlaceholder(this.$attrs);\n\n\t\t\tinnerlist.appendChild(placeholder);\n\t\t} else {\n\t\t\tselected.setAttribute('ng-class', '{ \\'placeholder\\': $ctrl.ngModel == null }');\n\t\t\tselected.innerText = '{{$ctrl.getDisplayText($ctrl.ngModel)}}';\n\t\t}\n\n\t\tconst item = h.createHtmlElement('div', ['select-item'],\n\t\t\t[\n\t\t\t\t['ng-repeat', 'item in $ctrl.searchList track by $index'],\n\t\t\t\t['ng-attr-data-value', '{{item[$ctrl.value]}}'],\n\t\t\t\t['role', 'option'],\n\t\t\t],\n\t\t);\n\t\titem.innerText = '{{item[$ctrl.text]}}';\n\n\t\tconst list = h.createHtmlElement('div', ['select-dropdown-list'],\n\t\t\t[\n\t\t\t\t['dir', 'ltr'],\n\t\t\t\t['role', 'listbox'],\n\t\t\t\t['hidden', 'true'],\n\t\t\t],\n\t\t);\n\n\t\tconst input = h.createHtmlElement('input', ['select-input'],\n\t\t\t[\n\t\t\t\t['type', 'text'],\n\t\t\t\t['autocomplete', 'off'],\n\t\t\t\t['autocapitalize', 'off'],\n\t\t\t\t['spellcheck', 'false'],\n\t\t\t\t['role', 'textbox'],\n\t\t\t\t['aria-autocomplete', 'list'],\n\t\t\t\t['placeholder', ''],\n\t\t\t\t['aria-label', 'Select List'],\n\t\t\t\t['hidden', 'true'],\n\t\t\t],\n\t\t);\n\n\t\tconst type = `select-${isMultiple ? 'multiple' : 'one'}`;\n\t\tconst container = h.createHtmlElement('div', ['select-container'],\n\t\t\t[\n\t\t\t\t['data-type', type],\n\t\t\t\t['role', 'combobox'],\n\t\t\t\t['tabindex', '0'],\n\t\t\t\t['aria-autocomplete', 'list'],\n\t\t\t\t['aria-haspopup', 'true'],\n\t\t\t\t['aria-expanded', 'false'],\n\t\t\t\t['dir', 'ltr'],\n\t\t\t\t['ng-attr-name', `${type}_{{$ctrl.uniqueId}}`],\n\t\t\t\t['ng-attr-id', `${type}_{{$ctrl.uniqueId}}`],\n\t\t\t],\n\t\t);\n\n\t\tconst dropdown = h.createHtmlElement('div', ['select-dropdown', 'border-bottom-0', 'border-top-0'], [['aria-expanded', 'false']]);\n\n\t\tinnerlist.appendChild(selected);\n\t\tinnerlist.appendChild(btn);\n\t\tinner.appendChild(select);\n\t\tinner.appendChild(innerlist);\n\n\t\tlist.appendChild(item);\n\n\t\tdropdown.appendChild(input);\n\t\tdropdown.appendChild(list);\n\n\t\tcontainer.appendChild(inner);\n\t\tcontainer.appendChild(dropdown);\n\n\t\treturn container;\n\t},\n\tcontroller: SelectController,\n\tbindings: {\n\t\tlist: '<',\n\t},\n};\n","import { NgApp } from './src/app';\nimport { inputs } from './src/inputs';\nimport { misc } from './src/misc';\nimport { NgAppConfig } from './src/options';\n\n// @ts-ignore\nimport ngAnimate from 'angular-animate';\n// @ts-ignore\nimport ngMessages from 'angular-messages';\nimport uirouter from '@uirouter/angularjs';\n\nexport const app = makeDefaultApp({ });\n\nexport function makeDefaultApp(config: Partial<NgAppConfig>) {\n\treturn new NgApp(config)\n\t\t.addComponents(inputs)\n\t\t.addComponents(misc)\n\t\t.addDependencies(\n\t\t\tngAnimate,\n\t\t\tngMessages,\n\t\t\tuirouter,\n\t\t)\n\t\t.addHttpInterceptor({\n\t\t\tasync responseError(response, err) {\n\t\t\t\tconst { status, statusText, url } = response;\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase 404:\n\t\t\t\t\t\tapp.log.error(`Route '${url}' not found`);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 400:\n\t\t\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\t\t\tapp.log.error(data);\n\t\t\t\t\t\t} else if (data != null && data.toString() === '[object Object]') {\n\t\t\t\t\t\t\tapp.log.error(Object.keys(data).map(x => `${x}: ${data[x]}`).join('\\n\\n'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 401:\n\t\t\t\t\tcase 403:\n\t\t\t\t\tcase 500:\n\t\t\t\t\t\tapp.log.warning(statusText);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase -1:\n\t\t\t\t\t\tapp.log.warning('Server timed out.');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tapp.log.error(`The request to '${url}' returned an error (code: ${status})`);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\treturn err;\n\t\t\t},\n\t\t});\n}\n\nexport * from './src/app';\nexport * from './src/attributes';\nexport * from './src/controller';\nexport * from './src/http';\nexport * from './src/icon';\nexport * from './src/logger';\nexport * from './src/modal';\nexport * from './src/ng';\nexport * from './src/options';\nexport * from './src/renderer';\nexport * from './src/router';\nexport * from './src/service';\n\nexport * from './src/inputs';\nexport * from './src/misc';\n","import { isIE11 } from '@ledge/is-ie-11';\nimport { isMobile } from '@ledge/is-mobile';\n\nexport class NgService {\n\tpublic readonly uniqueId = this.UUIDv4().replace(/[-]|[,]/g, '');\n\n\tprotected get isMobile() {\n\t\treturn isMobile();\n\t}\n\n\tprotected get isIE11() {\n\t\treturn isIE11();\n\t}\n\n\t/**\n\t * @see https://stackoverflow.com/a/2117523\n\t */\n\tpublic UUIDv4() {\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n\t\t\t// tslint:disable:no-bitwise\n\t\t\tconst r = Math.random() * 16 | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3 | 0x8);\n\t\t\t// tslint:enable:no-bitwise\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\t/**\n\t * Separates words in a string by capital letters. Also capitalizes the first letter.\n\t *\n\t * The following exceptions apply:\n\t * 1) If string is all-caps, it's returned as-is\n\t * 2) Any embedded acronyms (such as F.A.Q.) are returned as-is\n\t * 3) Consecutive capital letters are returned as-is\n\t * 3) Hyphenated words retain concatenation\n\t *\n\t * @param item - The string value to be split\n\t */\n\tpublic splitByCapitalLetter(item: string) {\n\t\tconst split = item.split(/(?=[A-Z])/);\n\t\treturn split.every(x => x.length === 1)\n\t\t\t? item\n\t\t\t: split\n\t\t\t\t.map(x => x.trim())\n\t\t\t\t.map(x =>\n\t\t\t\t\tx.length === 1 || (x.length === 2 && x.charAt(1) === '.')\n\t\t\t\t\t\t? (x.toUpperCase() + '\\uFFFF')\n\t\t\t\t\t\t: (x.charAt(0).toUpperCase() + x.substring(1)),\n\t\t\t\t)\n\t\t\t\t.join(' ')\n\t\t\t\t.replace(\n\t\t\t\t\t/\\w{1}\\.?(\\uFFFF){1}\\s?/g,\n\t\t\t\t\t([first, second]) =>\n\t\t\t\t\t\tsecond === '.'\n\t\t\t\t\t\t\t? first + second\n\t\t\t\t\t\t\t: first,\n\t\t\t\t)\n\t\t\t\t.replace(\n\t\t\t\t\t/\\.{1}\\w{2,}/g,\n\t\t\t\t\t([first, second, ...rest]) =>\n\t\t\t\t\t\t`${first} ${second.toUpperCase()}${rest.join('')}`,\n\t\t\t\t)\n\t\t\t\t.replace(/- /g, '-');\n\t}\n}\n","import { injector } from 'angular';\n\nexport type NgInjector = ReturnType<typeof injector>;\nexport type NgScope = angular.IScope;\n\nexport { injector };\nexport { bootstrap, module } from 'angular';\n","import { NgAppConfig } from './options';\nimport { Indexed } from '@ledge/types';\nimport { autobind } from 'core-decorators';\n\nimport { NgAttributes } from './attributes';\nimport { NgHttp } from './http';\nimport { NgLogger } from './logger';\nimport { NgService } from './service';\nimport { NgInjector, NgScope } from './ng';\nimport { NgRenderer } from './renderer';\nimport { NgStateService } from './router';\n\nexport class NgController extends NgService {\n\tpublic readonly $scope: NgScope;\n\tpublic readonly $attrs: NgAttributes;\n\tpublic readonly $injector: NgInjector;\n\n\tpublic readonly $config: NgAppConfig;\n\tpublic readonly $log: NgLogger;\n\tpublic readonly $http: NgHttp;\n\tpublic readonly $state: NgStateService;\n\tpublic readonly $renderer: NgRenderer;\n\tpublic readonly $element: HTMLElement;\n\n\tpublic readonly isProduction: boolean;\n\tpublic readonly isDevelopment: boolean;\n\tpublic readonly isStaging: boolean;\n\tpublic readonly apiPrefix: string;\n\n\tpublic openWebAddress(address: string) {\n\t\tthis.$log.confirm(`You are being sent to ${address}. Continue?`).then(() => window.open(`http://${address}`));\n\t}\n\n\t/**\n\t * Called on each controller after all the controllers on an element have been constructed and had their bindings\n\t * initialized (and before the pre & post linking functions for the directives on this element). This is a good\n\t * place to put initialization code for your controller.\n\t */\n\tpublic $onInit?(): void;\n\n\t/**\n\t * Called on each turn of the digest cycle. Provides an opportunity to detect and act on changes.\n\t * Any actions that you wish to take in response to the changes that you detect must be invoked from this hook;\n\t * implementing this has no effect on when `$onChanges` is called. For example, this hook could be useful if you wish\n\t * to perform a deep equality check, or to check a `Date` object, changes to which would not be detected by Angular's\n\t * change detector and thus not trigger `$onChanges`. This hook is invoked with no arguments; if detecting changes,\n\t * you must store the previous value(s) for comparison to the current values.\n\t */\n\tpublic $doCheck?(): void;\n\n\t/**\n\t * Called whenever one-way bindings are updated. The onChangesObj is a hash whose keys are the names of the bound\n\t * properties that have changed, and the values are an object of the form { currentValue, previousValue, isFirstChange() }.\n\t * Use this hook to trigger updates within a component such as cloning the bound value to prevent accidental mutation of the outer value.\n\t */\n\tpublic $onChanges?<T = any>(onChangesObj: {\n\t\t[property: string]: {\n\t\t\tcurrentValue: T;\n\t\t\tpreviousValue: T;\n\t\t\tisFirstChange(): boolean;\n\t\t},\n\t}): void;\n\n\t/**\n\t * Called on a controller when its containing scope is destroyed. Use this hook for releasing external resources,\n\t * watches and event handlers.\n\t */\n\tpublic $onDestroy?(): void;\n\n\t/**\n\t * Called after this controller's element and its children have been linked. Similar to the post-link function this\n\t * hook can be used to set up DOM event handlers and do direct DOM manipulation. Note that child elements that contain\n\t * templateUrl directives will not have been compiled and linked since they are waiting for their template to load\n\t * asynchronously and their own compilation and linking has been suspended until that occurs. This hook can be considered\n\t * analogous to the ngAfterViewInit and ngAfterContentInit hooks in Angular 2. Since the compilation process is rather\n\t * different in Angular 1 there is no direct mapping and care should be taken when upgrading.\n\t */\n\tpublic $postLink?(): void;\n}\n\nexport function makeNg1Controller<T extends NgController>(ctrl: new () => T, locals: {\n\tlog: NgLogger,\n\thttp: NgHttp,\n\trenderer: NgRenderer,\n\tattrs?: Indexed,\n\tconfig(): NgAppConfig;\n}) {\n\tautobind(ctrl);\n\treturn class Ng1Controller extends (ctrl as new () => any) {\n\t\tpublic $log = locals.log;\n\t\tpublic $http = locals.http;\n\t\tpublic $renderer = locals.renderer;\n\t\tpublic $state: NgStateService;\n\t\tpublic $attrs: NgAttributes;\n\t\tpublic $element: HTMLElement;\n\n\t\tpublic get $config() {\n\t\t\treturn locals.config();\n\t\t}\n\t\tpublic get isProduction() {\n\t\t\treturn this.$config.IS_PROD;\n\t\t}\n\t\tpublic get isDevelopment() {\n\t\t\treturn this.$config.IS_DEV;\n\t\t}\n\t\tpublic get isStaging() {\n\t\t\treturn this.$config.IS_STAGING;\n\t\t}\n\t\tpublic get apiPrefix() {\n\t\t\treturn this.$config.API_HOST;\n\t\t}\n\n\t\tconstructor(\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\tpublic $scope: NgScope,\n\t\t\tpublic $injector: NgInjector,\n\t\t) {\n\t\t\tsuper();\n\n\t\t\tthis.$element = $element[0];\n\t\t\tthis.$attrs = new NgAttributes(this.$element, locals.attrs);\n\t\t\tthis.$state = this.$injector.get('$state');\n\t\t}\n\t} as new (\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\t$scope: NgScope,\n\t\t\t$injector: NgInjector,\n\t\t) => T;\n}\n","import { IConfig, Indexed } from '@ledge/types';\nimport { autobind } from 'core-decorators';\n\nimport { NgAttributes } from './attributes';\nimport { NgController, makeNg1Controller } from './controller';\n\n@autobind\nexport class NgAppConfig implements IConfig {\n\tpublic readonly IS_PROD: boolean;\n\tpublic readonly IS_DEV: boolean;\n\tpublic readonly IS_STAGING: boolean;\n\n\t/**\n\t * The name of the library or application.\n\t */\n\tpublic readonly NAME: string;\n\n\t/**\n\t * The current library or application version, either as a string (e.g. 1.0.0 or v1) or as a number (e.g. 1 or 2.3)\n\t */\n\tpublic readonly VERSION: string | number;\n\n\t/**\n\t * The host environment for the library or application.\n\t */\n\tpublic readonly ENV: string;\n\n\t/**\n\t * The hostname for the API\n\t */\n\tpublic readonly API_HOST: string;\n\n\tconstructor({\n\t\tNAME = 'ng-app',\n\t\tENV = '',\n\t\tAPI_HOST = '',\n\t}: Partial<NgAppConfig> = { }) {\n\t\tif (ENV == null || ENV.length === 0) {\n\t\t\tENV = process.env.NODE_ENV as string;\n\t\t}\n\t\tthis.ENV = ENV;\n\n\t\tthis.IS_PROD = ENV === 'production';\n\t\tthis.IS_DEV = ENV === 'development';\n\t\tthis.IS_STAGING = ENV === 'staging';\n\n\t\tthis.NAME = NAME;\n\t\tthis.API_HOST = API_HOST;\n\t}\n}\n\n/**\n * Component definition object (a simplified directive definition object)\n */\nexport interface NgComponentOptions<T = typeof NgController> {\n\t/**\n\t * Controller constructor function that should be associated with newly created scope or the name of a registered\n\t * controller if passed as a string. Empty function by default.\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\tcontroller?: T | ['$element', '$scope', '$injector', ReturnType<typeof makeNg1Controller>];\n\n\t/**\n\t * @deprecated For consistency this will always be the historical default `$ctrl`. ng-app's architecture ensures all scopes are isolates, so there's no risk of scope leakage.\n\t *\n\t * An identifier name for a reference to the controller. If present, the controller will be published to its scope under\n\t * the specified name. If not present, this will default to `$ctrl`.\n\t */\n\tcontrollerAs?: never;\n\n\t/**\n\t * html template as a string or a function that returns an html template as a string which should be used as the\n\t * contents of this component. Empty string by default.\n\t * If template is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplate?: string | (() => string) | (string | (($element: [HTMLElement], $attrs: NgAttributes) => string))[];\n\n\t/**\n\t * Path or function that returns a path to an html template that should be used as the contents of this component.\n\t * If templateUrl is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplateUrl?: never;\n\n\t/**\n\t * Define DOM attribute binding to component properties. Component properties are always bound to the component\n\t * controller and not to the scope.\n\t */\n\tbindings?: Indexed<string>;\n\n\t/**\n\t * Whether transclusion is enabled. Disabled by default.\n\t */\n\ttransclude?: boolean | Indexed<string>;\n\n\t/**\n\t * Requires the controllers of other directives and binds them to this component's controller.\n\t * The object keys specify the property names under which the required controllers (object values) will be bound.\n\t * Note that the required controllers will not be available during the instantiation of the controller,\n\t * but they are guaranteed to be available just before the $onInit method is executed!\n\t */\n\trequire?: Indexed<string>;\n}\n"],"sourceRoot":""}