{"version":3,"sources":["webpack://@ledge/ng-app/./docs/src/app.tsx","webpack://@ledge/ng-app/./index.ts","webpack://@ledge/ng-app/./src/app.ts","webpack://@ledge/ng-app/./src/attributes.ts","webpack://@ledge/ng-app/./src/controller.ts","webpack://@ledge/ng-app/./src/http.ts","webpack://@ledge/ng-app/./src/inputs/check-box.tsx","webpack://@ledge/ng-app/./src/inputs/date-input.tsx","webpack://@ledge/ng-app/./src/inputs/index.ts","webpack://@ledge/ng-app/./src/inputs/radio-list.tsx","webpack://@ledge/ng-app/./src/inputs/select-list.tsx","webpack://@ledge/ng-app/./src/inputs/shared/controller.ts","webpack://@ledge/ng-app/./src/inputs/shared/service.tsx","webpack://@ledge/ng-app/./src/inputs/text-box.tsx","webpack://@ledge/ng-app/./src/inputs/text-input.tsx","webpack://@ledge/ng-app/./src/logger.tsx","webpack://@ledge/ng-app/./src/misc/app-spinner.ts","webpack://@ledge/ng-app/./src/misc/index.ts","webpack://@ledge/ng-app/./src/modal.tsx","webpack://@ledge/ng-app/./src/options.ts","webpack://@ledge/ng-app/./src/render.ts","webpack://@ledge/ng-app/./src/router.ts","webpack://@ledge/ng-app/./src/service.ts"],"names":["ModalController","title","body","AppController","controller","template","this","$log","confirm","then","success","catch","info","CustomElementExample","HTMLElement","classList","add","customElements","define","clickCounter","jsxExampleSection","className","class","id","onclick","trim","querySelector","appendChild","map","x","parentNode","API_HOST","bootstrap","document","app","addComponents","addDependencies","addHttpInterceptor","response","err","status","statusText","url","data","json","log","error","toString","Object","keys","join","warning","NgApp","$id","$injector","$dependencies","$module","$bootstrap","$components","Map","$httpInterceptors","configure","config","$compileProvider","$locationProvider","$qProvider","IS_DEV","IS_STAGING","$config","debugInfoEnabled","commentDirectivesEnabled","cssClassDirectivesEnabled","html5Mode","errorOnUnhandledRejections","$stateProvider","router","$warn","definition","getRoutes","state","run","$animate","enabled","$router","Set","get","_http","$http","timeout","IS_PROD","undefined","getConfig","_log","$logger","_modal","$modal","$applyAsync","strictDi","name","component","setTimeout","components","entries","isInputComponent","makeComponentController","set","type","moduleName","push","moduleNames","forEach","addDependency","interceptor","every","i","length","findIndex","pop","splice","ctrl","http","options","onFinally","forceUpdate","Array","isArray","interceptors","NgAttributes","$$element","attrs","$attr","PREFIX_REGEXP","SPECIAL_CHARS_REGEXP","key","value","attributes","$record","replace","_","letter","offset","toUpperCase","contains","$hasClass","remove","newClasses","oldClasses","nu","split","filter","old","o","indexOf","$removeClass","n","$addClass","setAttribute","__","console","warn","normalized","$normalize","NgController","address","window","open","makeInjectableCtrl","locals","InternalController","$element","$scope","super","$attrs","$state","DEFAULT_REQUEST_TIMEOUT","NgHttp","request","responseError","fetch","uri","host","ssl","URL","toJSON","method","Response","location","protocol","cache","credentials","headers","integrity","keepalive","mode","redirect","referrerPolicy","getFullUrl","abortCtrl","AbortController","Request","signal","JSON","stringify","onRequest","abortTimer","abort","clearTimeout","ok","onResponse","Error","onResponseError","clone","checkBox","templateClass","labelClass","input","style","hasOwnProperty","$template","bindings","ngChecked","isNumber","isNaN","DateInputController","SUPPORTED_MODES","ngModelCtrl","$validators","minDate","modelVal","valueOf","Date","maxDate","inline","devWarning","flatpickr","dateFormat","defaultDate","ngModel","nextArrow","prevArrow","allowInput","weekNumbers","wrap","enable","d","parse","onChange","selected","destroy","toLocaleDateString","dateInput","maxLength","placeholder","validators","inputs","radioList","selectList","textBox","htmlInput","textInput","RadioListController","closest","radio","text","labelText","createTextNode","$label","list","SelectController","isListOpen","IsMultiple","MultiplePlaceholder","SinglePlaceholder","_text","_value","isMobile","searchList","container","dropdown","dropdownlist","updateSearchList","getSearchList","fuzzer","search","oninput","onblur","e","relatedTarget","hidden","target","HTMLSelectElement","HTMLButtonElement","toggle","focus","nodeName","parentElement","HTMLDivElement","select","dataset","$watchCollection","shouldSort","threshold","distance","minMatchCharLength","destroyCurrentWatcher","GetPlaceholder","item","clear","isMultiple","concat","y","innerlist","inner","btn","sbtn","cloneNode","innerHTML","outerHTML","innerText","role","dir","autocomplete","autocapitalize","spellcheck","tabIndex","NgInputController","$contain","children","isIE11","removeNode","curr","prev","$setViewValue","$commitViewValue","BaseComponent","seal","isRadioOrCheckbox","$transclude","textContent","InputService","getDefaultLabelText","ValidationExpressions","$Error","$Invalid","$Touched","$FormInvalid","modelIdentifier","Number","charAt","substring","$input","tagName","$component","$BaseComponent","$definition","$baseDefinition","transclude","$el","render","call","isRadio","isRequired","isSrOnly","canHaveIcon","icon","marginTop","requiredTag","firstElementChild","removeChild","renderLabel","setProperty","postRender","$inputInput","getInputInput","$validationAttrs","s","toLowerCase","test","$ValidationExpressions","$IsInvalid","$validationBlock","$validationMessages","$html","has","$message","prop","RegExp","contain","require","ngModelOptions","ngDisabled","ngReadonly","ngRequired","TextBoxController","$mirror","element","computedStyle","getComputedStyle","boxOuter","parseInt","getPropertyValue","minHeightValue","heightValue","minHeight","Math","max","maxHeight","mirror","adjust","requestAnimationFrame","width","scrollHeight","overflow","addEventListener","$on","removeEventListener","styles","maxlength","textArea","TextInputController","minlength","minVal","val","min","maxVal","pattern","isRange","removeAttribute","step","LogTypeToastBackgrounds","NgToast","toastHeaderTimestamp","toastHeader","toastBody","toast","setBodyText","setType","el","targets","translateX","duration","easing","begin","toLocaleTimeString","navigator","language","Promise","resolve","hideAnimation","autoplay","complete","play","resetAnimationOnMouseover","resumeAnimationOnMouseout","isAutoClose","makeTimeout","autoCloseId","wasClosing","progress","restart","pause","click","NgConsole","items","debug","NgLogger","isProd","toasts","hide","msg","okBtn","cancelBtn","footer","notify","reject","removeListeners","cancel","isTemporary","show","SpinnerController","colors","color","$set","appSpinner","misc","NgModal","$backdrop","$title","uniqueId","$header","$main","$cancelBtn","$submitBtn","$footer","$form","$dialog","$container","$compile","$rootScope","onClose","defaultCancelBtnText","defaultOkBtnText","cancelBtnText","okBtnText","$new","$ctrl","escapeKeyListener","close","dismiss","removeEventListeners","hideModal","showModal","scope","$destroy","NgAppConfig","NAME","ENV","VERSION","h","TagOrElement","props","childNodes","createElement","node","Node","String","some","NgRouter","routes","partial","generateRouteMeta","isNgTransitionFn","onEnter","onExit","onRetain","param","ParamType","decode","encode","a","b","is","resolveFn","params","parent","isBase","NgService","UUIDv4","c","r","random","IsIE11","first","second","rest"],"mappings":"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","file":"app.7b7799.js","sourcesContent":["import { NgController, app, h } from '../../index';\n\nclass ModalController extends NgController {\n\tpublic title = 'Example Modal';\n\tpublic body = 'Body';\n}\n\nclass AppController extends NgController {\n\tpublic openModal() {\n\t\tapp.modal.open({\n\t\t\tcontroller: ModalController,\n\t\t\ttitle: '{{$ctrl.title}}',\n\t\t\ttemplate: '<p class=\"lead\">{{$ctrl.body}}</p>',\n\t\t});\n\t}\n\n\tpublic openConfirmToast() {\n\t\tthis.$log.confirm('Yes or No?')\n\t\t\t.then(() => this.$log.success('Yes!'))\n\t\t\t.catch(() => this.$log.info('No...'));\n\t}\n}\n\nclass CustomElementExample extends HTMLElement {\n\tpublic connectedCallback() {\n\t\tthis.classList.add('lead');\n\t}\n}\n\ncustomElements.define('custom-element-example', CustomElementExample);\n\nlet clickCounter = 0;\nconst jsxExampleSection =\n\t<section className='container mt-5'>\n\t\t<div className='row'>\n\t\t\t<div className='col-12'>\n\t\t\t\t<div class='card'>\n\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t<h2>This section was made using ng-app's DOM-in-JSX feature</h2>\n\t\t\t\t\t\t<h3>DOM-in-JSX lets you work directly with DOM elements using JSX's declarative syntax</h3>\n\t\t\t\t\t\t<custom-element-example>Custom Elements?</custom-element-example>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<CustomElementExample>Fully Supported!</CustomElementExample>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button id='native-onlick' class='btn btn-dark my-4'\n\t\t\t\t\t\t\tonclick={() => app.log.info(`Clicked ${++clickCounter} times`)}>\n\t\t\t\t\t\t\tTry clicking this button!\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<pre class='bg-light p-3 mt-3'>\n\t\t\t\t\t\t\t{`const jsxExample =\n\t<section class='card'>\n\t\t<h2>This section was made using ng-app's DOM-in-JSX feature</h2>\n\t\t<h3>DOM-in-JSX lets you work directly with DOM elements using JSX's declarative syntax</h3>\n\t\t<custom-element-example>Custom Elements?</custom-element-example>\n\t\t<br />\n\t\t<CustomElementExample>Fully Supported!</CustomElementExample>\n\t\t<br />\n\t\t<button id='native-onlick' class='btn btn-dark my-4'\n\t\t\tonclick={() => app.log.info(\\`Clicked \\${++clickCounter} times\\`)}>\n\t\t\tTry clicking this button!\n\t\t</button>\n\t</section>;`.trim()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</section>;\n\njsxExampleSection.querySelector('.card-body')?.appendChild(\n\t<table>\n\t\t<thead>\n\t\t\t<th>This table was generated programmatically</th>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(x => <tr><td>Row {x}</td></tr>)}\n\t\t</tbody>\n\t</table>,\n).parentNode?.appendChild(\n\t<pre class='bg-light p-3 mt-3'>\n\t\t{`const jsxTable =\n\t<table>\n\t\t<thead>\n\t\t\t<th>This table was generated programmatically</th>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(x => <tr><td>Row {x}</td></tr>)}\n\t\t</tbody>\n\t</table>;\n\njsxExample.appendChild(jsxTable);\n\t`.trim()\n\t\t}\n\t</pre>,\n);\n\napp\n\t.module\n\t.controller(\n\t\t'AppController',\n\t\tapp.makeComponentController(AppController),\n\t);\n\napp\n\t.configure({ API_HOST: 'api.ng-app.js.org' })\n\t.bootstrap()\n\t.then(() => {\n\t\tdocument.body.querySelector('main')?.appendChild(jsxExampleSection);\n\t\tapp.log.success('Welcome... to The World...');\n\t});\n","import { HttpStatusCode } from '@ledge/types/http';\n\nimport { NgApp } from './src/app';\nimport { inputs } from './src/inputs';\nimport { misc } from './src/misc';\n\nimport 'angular-messages';\nimport uirouter from '@uirouter/angularjs';\n\nexport const app = new NgApp()\n\t.addComponents(inputs)\n\t.addComponents(misc)\n\t.addDependencies([\n\t\t'ngMessages',\n\t\tuirouter,\n\t])\n\t.addHttpInterceptor({\n\t\tasync responseError(response, err) {\n\t\t\tconst { status, statusText, url } = response;\n\t\t\tconst data = await response.json();\n\n\t\t\tswitch (status) {\n\t\t\t\tcase HttpStatusCode.NotFound:\n\t\t\t\t\tapp.log.error(`Route '${url}' not found`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase HttpStatusCode.BadRequest:\n\t\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\t\tapp.log.error(data);\n\t\t\t\t\t} else if (data != null && data.toString() === '[object Object]') {\n\t\t\t\t\t\tapp.log.error(Object.keys(data).map(x => `${x}: ${data[x]}`).join('\\n\\n'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase HttpStatusCode.Unauthorized:\n\t\t\t\tcase HttpStatusCode.Forbidden:\n\t\t\t\tcase HttpStatusCode.InternalServerError:\n\t\t\t\t\tapp.log.warning(statusText);\n\t\t\t\t\tbreak;\n\t\t\t\tcase -1:\n\t\t\t\t\tapp.log.warning('Server timed out.');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tapp.log.error(`The request to '${url}' returned an error (code: ${status})`);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn err;\n\t\t},\n\t});\n\nexport * from './src/app';\nexport * from './src/attributes';\nexport * from './src/controller';\nexport * from './src/http';\nexport * from './src/logger';\nexport * from './src/modal';\nexport * from './src/ng';\nexport * from './src/options';\nexport * from './src/render';\nexport * from './src/router';\nexport * from './src/service';\n\nexport * from './src/inputs';\nexport * from './src/misc';\n","import { Indexed } from '@ledge/types';\nimport { StateService } from '@uirouter/core';\nimport { StateProvider } from '@uirouter/angularjs';\n\nimport { NgController, makeInjectableCtrl } from './controller';\nimport { DEFAULT_REQUEST_TIMEOUT, NgHttp, NgHttpInterceptor, NgHttpOptions } from './http';\nimport { InputService, NgInputOptions } from './inputs';\nimport { NgLogger } from './logger';\nimport { NgModal } from './modal';\nimport { NgInjector, bootstrap, injector, module } from './ng';\nimport { NgAppConfig, NgComponentOptions } from './options';\nimport { NgRouter } from './router';\n\nexport class NgApp {\n\tpublic get module() {\n\t\treturn this.$module;\n\t}\n\n\tpublic get router() {\n\t\treturn this.$router;\n\t}\n\n\tpublic get config() {\n\t\treturn this.$config;\n\t}\n\n\tpublic get components() {\n\t\treturn new Set(this.$components.keys());\n\t}\n\n\tpublic get dependencies() {\n\t\treturn new Set(this.$dependencies);\n\t}\n\n\tpublic get state() {\n\t\treturn this.$injector.get<StateService>('$state');\n\t}\n\n\tpublic get http() {\n\t\tif (this._http == null) {\n\t\t\tthis._http = this.$http({\n\t\t\t\ttimeout: this.$config.IS_PROD ? DEFAULT_REQUEST_TIMEOUT : undefined,\n\t\t\t\tgetConfig: () => this.$config,\n\t\t\t});\n\t\t}\n\t\treturn this._http;\n\t}\n\n\tpublic get log() {\n\t\tif (this._log == null) {\n\t\t\tthis._log = this.$logger();\n\t\t}\n\t\treturn this._log;\n\t}\n\n\tpublic get modal() {\n\t\tif (this._modal == null) {\n\t\t\tthis._modal = this.$modal();\n\t\t}\n\t\treturn this._modal;\n\t}\n\n\tpublic readonly $id = '$core';\n\tpublic $injector = injector(['ng']);\n\n\tprotected $dependencies: string[] = [];\n\tprotected $router!: NgRouter;\n\tprotected $config!: NgAppConfig;\n\n\tprotected readonly $module = module(this.$id, this.$dependencies);\n\tprotected readonly $bootstrap = bootstrap;\n\tprotected readonly $components = new Map<string, NgComponentOptions>();\n\tprotected readonly $httpInterceptors: NgHttpInterceptor[] = [];\n\n\tprivate _http!: NgHttp;\n\tprivate _log!: NgLogger;\n\tprivate _modal!: NgModal;\n\n\tconstructor() {\n\t\tthis.configure({})\n\t\t\t.$module\n\t\t\t.config([\n\t\t\t\t'$compileProvider', '$locationProvider', '$qProvider',\n\t\t\t\t(\n\t\t\t\t\t$compileProvider: {\n\t\t\t\t\t\tdebugInfoEnabled(active: boolean): any;\n\t\t\t\t\t\tcommentDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t\tcssClassDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$locationProvider: {\n\t\t\t\t\t\thtml5Mode(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$qProvider: {\n\t\t\t\t\t\terrorOnUnhandledRejections(active: boolean): any,\n\t\t\t\t\t},\n\t\t\t\t) => {\n\t\t\t\t\tconst { IS_DEV, IS_STAGING } = this.$config;\n\n\t\t\t\t\t$compileProvider.debugInfoEnabled(!!(IS_DEV || IS_STAGING));\n\t\t\t\t\t$compileProvider.commentDirectivesEnabled(false);\n\t\t\t\t\t$compileProvider.cssClassDirectivesEnabled(false);\n\n\t\t\t\t\t$locationProvider.html5Mode(true);\n\t\t\t\t\t$qProvider.errorOnUnhandledRejections(false);\n\t\t\t\t},\n\t\t\t])\n\t\t\t.config([\n\t\t\t\t'$stateProvider',\n\t\t\t\t($stateProvider: StateProvider) => {\n\t\t\t\t\tif (this.router == null) {\n\t\t\t\t\t\treturn this.log.$warn('No router. Use `app.setRouter(r)` to disable this warning.');\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const definition of this.router.getRoutes()) {\n\t\t\t\t\t\t$stateProvider.state(definition);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t])\n\t\t\t.run([\n\t\t\t\t'$injector', '$animate',\n\t\t\t\t($injector: NgInjector, $animate: { enabled(active: boolean): any }) => {\n\t\t\t\t\tthis.$injector = $injector;\n\t\t\t\t\t$animate.enabled(true);\n\t\t\t\t},\n\t\t\t]);\n\t}\n\n\t/**\n\t * Force the application to run an update cycle\n\t */\n\tpublic async forceUpdate() {\n\t\tawait this.$injector.get('$rootScope').$applyAsync();\n\t}\n\n\tpublic async bootstrap({ strictDi }: { strictDi?: boolean; } = { strictDi: true }) {\n\t\tfor (const [name, definition] of this.$components) {\n\t\t\tthis.$module.component(name, definition);\n\t\t}\n\t\tif (this.$router == null) {\n\t\t\tthis.$router = new (class extends NgRouter { })();\n\t\t}\n\n\t\tsetTimeout(() => document.body.classList.add('bootstrapped'));\n\t\treturn this.$bootstrap(document.body, [this.$id], { strictDi });\n\t}\n\n\tpublic configure(config: Partial<NgAppConfig>) {\n\t\tthis.$config = new NgAppConfig(config);\n\t\treturn this;\n\t}\n\n\tpublic setRouter(router: NgRouter) {\n\t\tthis.$router = router;\n\t\treturn this;\n\t}\n\n\tpublic addComponents(components: Map<string, NgComponentOptions> | Indexed<NgComponentOptions>) {\n\t\tconst entries = components instanceof Map\n\t\t\t? components.entries()\n\t\t\t: Object.keys(components).map(x => ([x, components[x]] as const));\n\n\t\tfor (let [name, component] of entries) {\n\t\t\tif (this.isInputComponent(component)) {\n\t\t\t\tcomponent = InputService.defineInputComponent(component);\n\t\t\t}\n\n\t\t\tif (typeof component.controller === 'function') {\n\t\t\t\tcomponent.controller = this.makeComponentController(component.controller);\n\t\t\t}\n\n\t\t\tthis.$components.set(name, component);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic isInputComponent(\n\t\tcomponent: NgComponentOptions & { type?: 'input' },\n\t): component is NgInputOptions {\n\t\treturn component.type === 'input';\n\t}\n\n\tpublic addDependency(moduleName: string) {\n\t\tthis.$dependencies.push(moduleName);\n\t\treturn this;\n\t}\n\n\tpublic addDependencies(moduleNames: string[]) {\n\t\tmoduleNames.forEach(moduleName => this.addDependency(moduleName));\n\t\treturn this;\n\t}\n\n\tpublic addHttpInterceptor(interceptor: NgHttpInterceptor) {\n\t\tif (this.$httpInterceptors.every(x => x != null)) {\n\t\t\tthis.$httpInterceptors.push(interceptor);\n\t\t} else {\n\t\t\tfor (let i = 0; i < this.$httpInterceptors.length; i++) {\n\t\t\t\tconst current = this.$httpInterceptors[i];\n\t\t\t\tif (current == null) {\n\t\t\t\t\tthis.$httpInterceptors[i] = interceptor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic removeHttpInterceptor(interceptor: NgHttpInterceptor) {\n\t\tconst i = this.$httpInterceptors.findIndex(x => x === interceptor);\n\t\tif (i > -1) {\n\t\t\tif (i === (this.$httpInterceptors.length - 1)) {\n\t\t\t\tthis.$httpInterceptors.pop();\n\t\t\t} else {\n\t\t\t\tthis.$httpInterceptors.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic makeComponentController<T extends NgController>(ctrl: new () => T) {\n\t\tconst componentCtrl = makeInjectableCtrl<T>(ctrl, {\n\t\t\tlog: this.log,\n\t\t\thttp: this.http,\n\t\t\tconfig: () => this.config,\n\t\t});\n\n\t\ttype NonReadonly<R> = { -readonly [P in keyof R]: R[P] };\n\t\tconst injectable = ['$element', '$scope', '$injector', componentCtrl] as const;\n\t\treturn injectable as NonReadonly<typeof injectable>;\n\t}\n\n\tprotected $modal() {\n\t\treturn new NgModal(\n\t\t\tthis.log,\n\t\t\tthis.http,\n\t\t\tthis.config,\n\t\t\tthis.$injector,\n\t\t);\n\t}\n\n\tprotected $http(options: NgHttpOptions) {\n\t\tif ((typeof options.onFinally === 'function') === false) {\n\t\t\toptions.onFinally = this.forceUpdate;\n\t\t}\n\t\tif (typeof options.getConfig !== 'function') {\n\t\t\toptions.getConfig = () => this.config;\n\t\t}\n\t\tif (Array.isArray(options.interceptors)) {\n\t\t\tfor (const interceptor of options.interceptors) {\n\t\t\t\tthis.addHttpInterceptor(interceptor);\n\t\t\t}\n\t\t}\n\t\t// allow all dataservice instances to share the same interceptor queue\n\t\toptions.interceptors = this.$httpInterceptors;\n\n\t\treturn new NgHttp(options);\n\t}\n\n\tprotected $logger() {\n\t\treturn new NgLogger(this.$config.IS_PROD);\n\t}\n}\n","import { Indexed } from '@ledge/types';\n\nexport class NgAttributes {\n\t[name: string]: any;\n\tpublic readonly $attr: Indexed<string> = {};\n\n\tpublic PREFIX_REGEXP = /^((?:x|data)[:\\-_])/i;\n\tpublic SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n\n\tconstructor(private readonly $$element: Element, attrs: Indexed = {}) {\n\t\tfor (const { name: key, value } of [...$$element.attributes]) {\n\t\t\tthis.$record(key, value);\n\t\t}\n\n\t\tfor (const [key, value] of Object.keys(attrs).map(x => ([x, attrs[x]] as const))) {\n\t\t\tthis.$record(key, value);\n\t\t}\n\t}\n\n\t/**\n\t * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with x- or data-) to its normalized, camelCase form.\n\t *\n\t * Also there is special case for Moz prefix starting with upper case letter.\n\t *\n\t * For further information check out the guide on @see https://docs.angularjs.org/guide/directive#matching-directives\n\t */\n\tpublic $normalize(name: string) {\n\t\treturn name\n\t\t\t.replace(this.PREFIX_REGEXP, '')\n\t\t\t.replace(this.SPECIAL_CHARS_REGEXP, (_, letter, offset) => offset ? letter.toUpperCase() : letter);\n\t}\n\n\t/**\n\t * Checks if the CSS class value is present on the element.\n\t */\n\tpublic $hasClass(className: string) {\n\t\treturn this.$$element.classList.contains(className);\n\t}\n\n\t/**\n\t * Adds the specified CSS class value to the element.\n\t * If animations are enabled then an animation will be triggered for the class addition.\n\t */\n\tpublic $addClass(className: string) {\n\t\tif (this.$hasClass(className)) {\n\t\t\tthis.$$element.classList.add(className);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the specified CSS class value from the element.\n\t * If animations are enabled then an animation will be triggered for the class removal.\n\t */\n\tpublic $removeClass(className: string) {\n\t\tif (this.$hasClass(className)) {\n\t\t\tthis.$$element.classList.remove(className);\n\t\t}\n\t}\n\n\t/**\n\t * Adds and removes CSS class values to the element based on the difference between\n\t * two space-delimited strings of CSS class values.\n\t *\n\t * @param newClasses: The space-delimited list of CSS classes to add or retain\n\t * @param oldClasses: The space-delimited list of CSS classes to remove if not contained within newClasses\n\t */\n\tpublic $updateClass(newClasses: string, oldClasses: string) {\n\t\tconst nu = newClasses.split(/\\s/g).filter(x => x.length > 0);\n\t\tconst old = oldClasses.split(/\\s/g).filter(x => x.length > 0);\n\n\t\tfor (const o of old) {\n\t\t\tif (nu.indexOf(o) !== -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.$removeClass(o);\n\t\t}\n\n\t\tfor (const n of nu) {\n\t\t\tthis.$addClass(n);\n\t\t}\n\t}\n\n\t/**\n\t * Set DOM element attribute value.\n\t */\n\tpublic $set(key: string, value: any) {\n\t\tthis.$$element.setAttribute(key, value);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tpublic $observe<T>(_: string, __: (value?: T) => any) {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.warn('$observe is a noop');\n\t\treturn () => { return; };\n\t}\n\n\tprotected $record(key: string, value: string) {\n\t\tconst normalized = this.$normalize(key);\n\t\tthis[normalized] = value;\n\t\tthis.$attr[key] = normalized;\n\t}\n}\n","import { Indexed } from '@ledge/types';\n\nimport { NgAttributes } from './attributes';\nimport { NgHttp } from './http';\nimport { NgLogger } from './logger';\nimport { NgService } from './service';\nimport { NgInjector, NgScope } from './ng';\nimport { NgAppConfig } from './options';\nimport { NgStateService } from './router';\n\nexport class NgController extends NgService {\n\tpublic readonly $scope!: NgScope;\n\tpublic readonly $attrs!: NgAttributes;\n\tpublic readonly $injector!: NgInjector;\n\n\tpublic readonly $config!: NgAppConfig;\n\tpublic readonly $log!: NgLogger;\n\tpublic readonly $http!: NgHttp;\n\tpublic readonly $state!: NgStateService;\n\tpublic readonly $element!: HTMLElement;\n\n\tpublic readonly isProduction!: boolean;\n\tpublic readonly isDevelopment!: boolean;\n\tpublic readonly isStaging!: boolean;\n\tpublic readonly apiPrefix!: string;\n\n\tpublic openWebAddress(address: string) {\n\t\tthis.$log.confirm(`You are being sent to ${address}. Continue?`).then(() => window.open(`http://${address}`));\n\t}\n\n\t/**\n\t * Called on each controller after all the controllers on an element have been constructed and had their bindings\n\t * initialized (and before the pre & post linking functions for the directives on this element). This is a good\n\t * place to put initialization code for your controller.\n\t */\n\tpublic $onInit?(): void;\n\n\t/**\n\t * Called on each turn of the digest cycle. Provides an opportunity to detect and act on changes.\n\t * Any actions that you wish to take in response to the changes that you detect must be invoked from this hook;\n\t * implementing this has no effect on when `$onChanges` is called. For example, this hook could be useful if you wish\n\t * to perform a deep equality check, or to check a `Date` object, changes to which would not be detected by Angular's\n\t * change detector and thus not trigger `$onChanges`. This hook is invoked with no arguments; if detecting changes,\n\t * you must store the previous value(s) for comparison to the current values.\n\t */\n\tpublic $doCheck?(): void;\n\n\t/**\n\t * Called whenever one-way bindings are updated. The onChangesObj is a hash whose keys are the names of the bound\n\t * properties that have changed, and the values are an object of the form { currentValue, previousValue, isFirstChange() }.\n\t * Use this hook to trigger updates within a component such as cloning the bound value to prevent accidental mutation of the outer value.\n\t */\n\tpublic $onChanges?<T = any>(onChangesObj: {\n\t\t[property: string]: {\n\t\t\tcurrentValue: T;\n\t\t\tpreviousValue: T;\n\t\t\tisFirstChange(): boolean;\n\t\t},\n\t}): void;\n\n\t/**\n\t * Called on a controller when its containing scope is destroyed. Use this hook for releasing external resources,\n\t * watches and event handlers.\n\t */\n\tpublic $onDestroy?(): void;\n\n\t/**\n\t * Called after this controller's element and its children have been linked. Similar to the post-link function this\n\t * hook can be used to set up DOM event handlers and do direct DOM manipulation. Note that child elements that contain\n\t * templateUrl directives will not have been compiled and linked since they are waiting for their template to load\n\t * asynchronously and their own compilation and linking has been suspended until that occurs. This hook can be considered\n\t * analogous to the ngAfterViewInit and ngAfterContentInit hooks in Angular 2. Since the compilation process is rather\n\t * different in Angular 1 there is no direct mapping and care should be taken when upgrading.\n\t */\n\tpublic $postLink?(): void;\n}\n\nexport function makeInjectableCtrl<T extends NgController>(ctrl: new () => T, locals: {\n\tlog: NgLogger,\n\thttp: NgHttp,\n\tattrs?: Indexed,\n\tconfig(): NgAppConfig;\n}) {\n\treturn class InternalController extends (ctrl as new () => any) {\n\t\tpublic $log = locals.log;\n\t\tpublic $http = locals.http;\n\t\tpublic $state: NgStateService;\n\t\tpublic $attrs: NgAttributes;\n\t\tpublic $element: HTMLElement;\n\n\t\tpublic get $config() {\n\t\t\treturn locals.config();\n\t\t}\n\t\tpublic get isProduction() {\n\t\t\treturn this.$config.IS_PROD;\n\t\t}\n\t\tpublic get isDevelopment() {\n\t\t\treturn this.$config.IS_DEV;\n\t\t}\n\t\tpublic get isStaging() {\n\t\t\treturn this.$config.IS_STAGING;\n\t\t}\n\t\tpublic get apiPrefix() {\n\t\t\treturn this.$config.API_HOST;\n\t\t}\n\n\t\tconstructor(\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\tpublic $scope: NgScope,\n\t\t\tpublic $injector: NgInjector,\n\t\t) {\n\t\t\tsuper();\n\n\t\t\tthis.$element = $element[0];\n\t\t\tthis.$attrs = new NgAttributes(this.$element, locals.attrs);\n\t\t\tthis.$state = this.$injector.get('$state');\n\t\t}\n\t} as new (\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\t$scope: NgScope,\n\t\t\t$injector: NgInjector,\n\t\t) => T;\n}\n","import { PatchPayload } from '@ledge/types/patch';\nimport { NgService } from './service';\nimport { NgAppConfig } from './options';\n\nexport const DEFAULT_REQUEST_TIMEOUT = 10000;\n\nexport interface NgHttpInterceptor {\n\trequest?(config: Request): Request | Promise<Request>;\n\tresponse?(response: any): any;\n\tresponseError?<T extends Error>(response: Response, err: T): void;\n}\n\n// tslint:disable:no-redundant-jsdoc\nexport interface NgHttpOptions extends RequestInit {\n\t/**\n\t *\n\t * @default `location.host`\n\t */\n\thost?: string;\n\n\t/**\n\t * If true, use `https://`. Otherwise, use `http://`\n\t * @default false\n\t */\n\tssl?: boolean;\n\n\t/**\n\t * How many milliseconds to wait before aborting the request\n\t * @default 10000\n\t */\n\ttimeout?: number;\n\n\tinterceptors?: NgHttpInterceptor[];\n\n\t/**\n\t * Unsupported\n\t */\n\treferrer?: never;\n\n\t/**\n\t * Unsupported\n\t */\n\tsignal?: never;\n\n\tonFinally?(): void;\n\tgetConfig(): NgAppConfig;\n}\n// tslint:enable:no-redundant-jsdoc\n\nexport class NgHttp extends NgService {\n\tprivate interceptors: {\n\t\trequest: ((config: Request) => Request | Promise<Request>)[];\n\t\tresponse: ((response: any) => any)[];\n\t\tresponseError: (<T extends Error>(\n\t\t\tresponse: Response,\n\t\t\terr: T,\n\t\t) => void)[];\n\t};\n\n\tconstructor(private options: NgHttpOptions) {\n\t\tsuper();\n\t\tconst { interceptors = [] } = options;\n\t\tthis.interceptors = {\n\t\t\trequest: interceptors\n\t\t\t\t.map(x => x.request)\n\t\t\t\t.filter(x => typeof x === 'function') as ((\n\t\t\t\tconfig: Request,\n\t\t\t) => Request | Promise<Request>)[],\n\t\t\tresponse: interceptors\n\t\t\t\t.map(x => x.response)\n\t\t\t\t.filter(x => typeof x === 'function') as ((response: any) => any)[],\n\t\t\tresponseError: interceptors\n\t\t\t\t.map(x => x.responseError)\n\t\t\t\t.filter(x => typeof x === 'function') as (<T extends Error>(\n\t\t\t\tresponse: Response,\n\t\t\t\terr: T,\n\t\t\t) => void)[],\n\t\t};\n\t}\n\n\tpublic async Get<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'GET');\n\t}\n\n\tpublic async Post<T = any>(url: string, data: any = null) {\n\t\treturn this.fetch<T>(url, 'POST', data);\n\t}\n\n\tpublic async Patch<T = any>(url: string, data: PatchPayload) {\n\t\treturn this.fetch<T>(url, 'PATCH', data);\n\t}\n\n\tpublic async Put<T = any>(url: string, data: T) {\n\t\treturn this.fetch(url, 'PUT', data);\n\t}\n\n\tpublic async Delete<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'DELETE');\n\t}\n\n\tpublic async Jsonp<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'JSONP');\n\t}\n\n\tpublic getFullUrl(uri: string, host: string, ssl: boolean) {\n\t\treturn new URL(uri, `http${ssl ? 's' : ''}://${host}/`).toJSON();\n\t}\n\n\tprivate async fetch<T>(\n\t\turi: string,\n\t\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE' | 'JSONP',\n\t\tdata?: any,\n\t) {\n\t\tlet response = new Response();\n\t\ttry {\n\t\t\tconst {\n\t\t\t\thost = this.options.getConfig().API_HOST,\n\t\t\t\tssl = location.protocol === 'https:',\n\t\t\t\tcache = 'no-store',\n\t\t\t\tcredentials = 'include',\n\t\t\t\theaders,\n\t\t\t\tintegrity,\n\t\t\t\tkeepalive = false,\n\t\t\t\tmode = 'cors',\n\t\t\t\tredirect = 'manual',\n\t\t\t\treferrerPolicy = 'origin-when-cross-origin',\n\t\t\t\ttimeout = DEFAULT_REQUEST_TIMEOUT,\n\t\t\t\twindow,\n\t\t\t} = this.options;\n\n\t\t\tconst url = this.getFullUrl(uri, host, ssl);\n\t\t\tconst abortCtrl = new AbortController();\n\n\t\t\tlet request = new Request(url, {\n\t\t\t\tmethod,\n\t\t\t\tcache,\n\t\t\t\tcredentials,\n\t\t\t\theaders,\n\t\t\t\tintegrity,\n\t\t\t\tkeepalive,\n\t\t\t\tmode,\n\t\t\t\tredirect,\n\t\t\t\treferrerPolicy,\n\t\t\t\tsignal: abortCtrl.signal,\n\t\t\t\twindow,\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t});\n\n\t\t\tfor (const onRequest of this.interceptors.request) {\n\t\t\t\trequest = await onRequest(request);\n\t\t\t}\n\n\t\t\tconst abortTimer = setTimeout(abortCtrl.abort, timeout);\n\t\t\tresponse = await fetch(request);\n\t\t\tclearTimeout(abortTimer);\n\n\t\t\tif (response.ok) {\n\t\t\t\tlet value: T = await response.json();\n\t\t\t\tfor (const onResponse of this.interceptors.response) {\n\t\t\t\t\tvalue = await onResponse(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tthrow new Error();\n\t\t} catch (err) {\n\t\t\tfor (const onResponseError of this.interceptors.responseError) {\n\t\t\t\tawait onResponseError(response.clone(), err);\n\t\t\t}\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tif (typeof this.options.onFinally === 'function') {\n\t\t\t\tthis.options.onFinally();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { h } from '../render';\nimport { NgInputOptions } from './shared';\n\nexport const checkBox: NgInputOptions = {\n\ttype: 'input',\n\ttemplateClass: 'form-check',\n\tlabelClass: 'form-check-label',\n\trender() {\n\t\tconst input =\n\t\t\t<input class='form-check-input'\n\t\t\t\tng-attr-id='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-attr-name='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-model='$ctrl.ngModel'\n\t\t\t\tng-model-options='$ctrl.ngModelOptions'\n\t\t\t\ttype='checkbox'\n\t\t\t\tstyle={'cursor: pointer;' as never} />;\n\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\n\t\t\tthis.$template.classList.remove('form-check');\n\t\t\tthis.$template.classList.add('form-check-inline');\n\t\t}\n\n\t\treturn input;\n\t},\n\tbindings: {\n\t\tngChecked: '<',\n\t},\n};\n","import flatpickr from 'flatpickr';\nimport { h } from '../render';\nimport { NgInputController, NgInputOptions } from './shared';\n\nfunction isNumber(n: any): n is number {\n\treturn typeof n === 'number' && !isNaN(n);\n}\n\nclass DateInputController extends NgInputController {\n\tprivate readonly SUPPORTED_MODES = ['single', 'multiple', 'range'];\n\tprivate minDate?: Date | number | string;\n\tprivate maxDate?: Date | number | string;\n\tprivate flatpickr!: flatpickr.Instance;\n\n\tpublic $onInit() {\n\t\tthis.ngModelCtrl.$validators.minDate = modelVal => {\n\t\t\tif (modelVal != null) {\n\t\t\t\tif (isNumber(this.minDate)) {\n\t\t\t\t\treturn this.minDate <= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t\tif (this.minDate instanceof Date) {\n\t\t\t\t\treturn this.minDate.valueOf() <= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tthis.ngModelCtrl.$validators.maxDate = modelVal => {\n\t\t\tif (modelVal != null) {\n\t\t\t\tif (isNumber(this.maxDate)) {\n\t\t\t\t\treturn this.maxDate >= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t\tif (this.maxDate instanceof Date) {\n\t\t\t\t\treturn this.maxDate.valueOf() >= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tconst { inline, mode = 'single' } = this.$attrs;\n\t\tif (this.SUPPORTED_MODES.indexOf(mode) === -1) {\n\t\t\tthis.$log.devWarning(`Unsupported date-input \\`mode\\` ('${mode}') for #${this.$element.id}. Expected one of ${this.SUPPORTED_MODES.join(', ')}.`);\n\t\t}\n\n\t\tthis.flatpickr = flatpickr(this.$element, {\n\t\t\tdateFormat: 'M n Y (l)',\n\t\t\tdefaultDate: this.ngModel,\n\t\t\tinline: inline === 'true',\n\t\t\tmode,\n\t\t\tnextArrow: '&raquo;',\n\t\t\tprevArrow: '&laquo;',\n\t\t\tallowInput: true,\n\t\t\tweekNumbers: true,\n\t\t\twrap: true,\n\t\t\tenable: [\n\t\t\t\td => {\n\t\t\t\t\tconst maxDate = Date.parse(this.maxDate as any);\n\t\t\t\t\treturn isNaN(maxDate) || d.valueOf() < maxDate;\n\t\t\t\t},\n\t\t\t\td => {\n\t\t\t\t\tconst minDate = Date.parse(this.minDate as any);\n\t\t\t\t\treturn isNaN(minDate) || d.valueOf() > minDate;\n\t\t\t\t},\n\t\t\t],\n\t\t\tonChange: selected => {\n\t\t\t\tthis.ngModel = selected.length > 1\n\t\t\t\t\t? selected\n\t\t\t\t\t: selected[0];\n\n\t\t\t\tthis.$scope.$applyAsync();\n\t\t\t},\n\t\t}) as flatpickr.Instance;\n\t}\n\n\tpublic $onDestroy() {\n\t\tif (this.flatpickr != null && typeof this.flatpickr.destroy === 'function') {\n\t\t\tthis.flatpickr.destroy();\n\t\t}\n\t}\n\n\tpublic getMinDate() {\n\t\treturn new Date(this.minDate as number).toLocaleDateString();\n\t}\n\n\tpublic getMaxDate() {\n\t\treturn new Date(this.maxDate as number).toLocaleDateString();\n\t}\n}\n\nexport const dateInput: NgInputOptions = {\n\ttype: 'input',\n\trender() {\n\t\t// no ng-model as flatpickr requires control of the input element\n\t\tconst input =\n\t\t\t<input class='form-control'\n\t\t\t\tng-attr-id='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-attr-name='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-model-options='$ctrl.ngModelOptions'\n\t\t\t\ttype='text'\n\t\t\t\tmaxLength={'{{maxlength}}' as never}\n\t\t\t\tplaceholder='{{placeholder}}'\n\t\t\t\tdata-input='true'\n\t\t\t/>;\n\n\t\treturn (\n\t\t\t<div class='input-group'>\n\t\t\t\t<div class='input-group-prepend' data-toggle='true' style={'cursor: pointer;' as never}>\n\t\t\t\t\t<span class='input-group-text'>\n\t\t\t\t\t\t<span class='fa fa-calendar' aria-hidden='true'></span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t{input}\n\t\t\t\t<div class='input-group-append' data-clear='true' style={'cursor: pointer;' as never}>\n\t\t\t\t\t<span class='input-group-text'>\n\t\t\t\t\t\t<span class='fa fa-times' aria-hidden='true'></span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t},\n\tbindings: {\n\t\tminDate: '<',\n\t\tmaxDate: '<',\n\t},\n\tvalidators: {\n\t\tminDate: 'Date must be on or after {{$ctrl.getMinDate()}}',\n\t\tmaxDate: 'Date must be on or before {{$ctrl.getMaxDate()}}',\n\t},\n\tcontroller: DateInputController,\n};\n","import { checkBox } from './check-box';\nimport { dateInput } from './date-input';\nimport { radioList } from './radio-list';\nimport { selectList } from './select-list';\nimport { textBox } from './text-box';\nimport { htmlInput, textInput } from './text-input';\n\nexport const inputs = {\n\tcheckBox,\n\tdateInput,\n\tradioList,\n\tselectList,\n\ttextBox,\n\thtmlInput,\n\ttextInput,\n};\n\nexport * from './shared';\n","import { h } from '../render';\nimport { NgInputController, NgInputOptions } from './shared';\n\nclass RadioListController extends NgInputController {\n\tpublic $postLink() {\n\t\tsetTimeout(() => {\n\t\t\tif (this.$attrs.hasOwnProperty('required')) {\n\t\t\t\tthis.$element.closest('fieldset')\n\t\t\t\t\t?.querySelector('legend')\n\t\t\t\t\t?.appendChild(<span class='text-danger'> *</span>);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport const radioList: NgInputOptions = {\n\ttype: 'input',\n\ttemplateClass: 'form-check',\n\tlabelClass: 'form-check-label',\n\trender() {\n\t\tconst { value = 'Value' } = this.$attrs;\n\t\tconst radio =\n\t\t\t<input class='form-check-input'\n\t\t\t\tng-attr-name='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-model='$ctrl.ngModel'\n\t\t\t\tng-model-options='$ctrl.ngModelOptions'\n\t\t\t\ttype='radio'\n\t\t\t\tng-value={`item.${value}`}\n\t\t\t\tng-attr-id='{{id}}_{{$ctrl.uniqueId}}_{{$index}}'\n\t\t\t\tstyle={'cursor: pointer;' as never}\n\t\t\t/>;\n\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\n\t\t\tthis.$template.classList.remove('form-check');\n\t\t\tthis.$template.classList.add('form-check-inline');\n\t\t}\n\n\t\tthis.$template.setAttribute('ng-repeat', 'item in $ctrl.list track by $index');\n\n\t\treturn radio;\n\t},\n\trenderLabel() {\n\t\tconst { text = 'Text' } = this.$attrs;\n\t\tconst labelText = document.createTextNode(`{{item.${text}}}`);\n\n\t\tthis.$label.appendChild(labelText);\n\t\tthis.$label.setAttribute('ng-attr-for', '{{id}}_{{$ctrl.uniqueId}}_{{$index}}');\n\t},\n\tbindings: {\n\t\tlist: '<',\n\t\tngChecked: '<',\n\t},\n\tcontroller: RadioListController,\n};\n","import Fuse from 'fuse.js';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { NgInputController, NgInputOptions } from './shared';\nimport { NgAttributes } from '../attributes';\nimport { h } from '../render';\nimport { NgService } from '../service';\n\nclass SelectController extends NgInputController {\n\tpublic static readonly SinglePlaceholder = '----Select One----';\n\tpublic static readonly MultiplePlaceholder = '----Select All That Apply----';\n\n\tpublic static IsMultiple($attrs: NgAttributes) {\n\t\treturn $attrs.hasOwnProperty('multiple') || $attrs.type === 'multiple';\n\t}\n\n\tpublic static GetPlaceholder($attrs: NgAttributes) {\n\t\treturn $attrs.placeholder ||\n\t\t\tSelectController.IsMultiple($attrs)\n\t\t\t? SelectController.MultiplePlaceholder\n\t\t\t: SelectController.SinglePlaceholder;\n\t}\n\n\tprotected isListOpen = false;\n\tprotected list!: any[];\n\tprotected searchList!: any[];\n\n\tprivate _text!: string;\n\tprivate _value!: string;\n\n\tpublic get text() {\n\t\tif (typeof this._text !== 'string') {\n\t\t\tconst { text = 'Text' } = this.$attrs;\n\t\t\tthis._text = text;\n\t\t}\n\t\treturn this._text;\n\t}\n\n\tpublic get value() {\n\t\tif (typeof this._value !== 'string') {\n\t\t\tconst { value = 'Value' } = this.$attrs;\n\t\t\tthis._value = value;\n\t\t}\n\t\treturn this._value;\n\t}\n\n\tprivate destroyCurrentWatcher!: () => void;\n\n\tprivate get isMultiple() {\n\t\treturn SelectController.IsMultiple(this.$attrs);\n\t}\n\n\tpublic $onInit() {\n\t\tif (this.isMobile) {\n\t\t\tthis.searchList = this.list;\n\t\t\treturn;\n\t\t}\n\n\t\tconst container = this.$element.querySelector('.select-container') as HTMLDivElement;\n\t\tconst dropdown = this.$element.querySelector('.select-dropdown') as HTMLDivElement;\n\t\tconst dropdownlist = this.$element.querySelector('.select-dropdown-list') as HTMLDivElement;\n\t\tconst input = this.$element.querySelector('input') as HTMLInputElement;\n\n\t\tconst updateSearchList = () => {\n\t\t\tif (input.value) {\n\t\t\t\tthis.searchList = this.getSearchList(fuzzer.search(input.value));\n\t\t\t} else {\n\t\t\t\tthis.searchList = cloneDeep(this.list);\n\t\t\t}\n\t\t\tthis.$scope.$applyAsync();\n\t\t};\n\n\t\tinput.oninput = () => {\n\t\t\tupdateSearchList();\n\t\t};\n\n\t\tinput.onblur = e => {\n\t\t\tif (e.relatedTarget == null) {\n\t\t\t\tinput.hidden = true;\n\t\t\t\tdropdownlist.hidden = true;\n\t\t\t\tdropdown.classList.remove('border-top-0');\n\t\t\t\tdropdown.classList.remove('border-bottom-0');\n\t\t\t}\n\t\t};\n\n\t\tcontainer.onclick = e => {\n\t\t\tif (e.target instanceof HTMLSelectElement) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.target instanceof HTMLButtonElement) {\n\t\t\t\tinput.hidden = false;\n\t\t\t}\n\n\t\t\tinput.hidden = !input.hidden;\n\t\t\tdropdown.classList.toggle('border-top-0', input.hidden);\n\t\t\tdropdown.classList.toggle('border-bottom-0', input.hidden);\n\n\t\t\tif (!input.hidden) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\n\t\t\tdropdownlist.hidden = input.hidden;\n\t\t};\n\n\t\tdropdownlist.onclick = e => {\n\t\t\tlet { target } = e as unknown as { target: HTMLElement };\n\t\t\tif (target.nodeName === '#text') {\n\t\t\t\ttarget = target.parentElement as HTMLElement;\n\t\t\t}\n\n\t\t\tconst targetIsItem =\n\t\t\t\ttarget instanceof HTMLDivElement &&\n\t\t\t\ttarget.classList.contains('select-item') &&\n\t\t\t\ttarget.parentElement instanceof HTMLDivElement &&\n\t\t\t\ttarget.parentElement.classList.contains('select-dropdown-list');\n\n\t\t\tif (targetIsItem) {\n\t\t\t\tinput.value = '';\n\t\t\t\tthis.select(target.dataset.value);\n\t\t\t}\n\t\t};\n\n\t\tlet fuzzer: Fuse<any>;\n\t\tthis.$scope.$watchCollection(\n\t\t\t() => this.list,\n\t\t\t_ => {\n\t\t\t\tfuzzer = new Fuse(_, {\n\t\t\t\t\tshouldSort: true,\n\t\t\t\t\tthreshold: 0.3,\n\t\t\t\t\tlocation: 0,\n\t\t\t\t\tdistance: 100,\n\t\t\t\t\tminMatchCharLength: 1,\n\t\t\t\t\tkeys: [this.text],\n\t\t\t\t});\n\n\t\t\t\tupdateSearchList();\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic $onDestroy() {\n\t\tif (typeof this.destroyCurrentWatcher === 'function') {\n\t\t\tthis.destroyCurrentWatcher();\n\t\t}\n\t}\n\n\tpublic getDisplayText(value: any) {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value == null) {\n\t\t\treturn SelectController.GetPlaceholder(this.$attrs);\n\t\t}\n\n\t\t// tslint:disable-next-line:triple-equals\n\t\tconst [item] = this.list.filter(x => x[this.value] == value);\n\t\treturn item == null ? this.clear() : item[this.text];\n\t}\n\n\tpublic remove(item: any) {\n\t\t// tslint:disable-next-line:triple-equals\n\t\tthis.ngModel = this.ngModel.filter((x: any) => x != item);\n\t\tthis.searchList = this.getSearchList(this.list);\n\t}\n\n\tpublic clear() {\n\t\tif (this.isMultiple ? Array.isArray(this.ngModel) && this.ngModel.length > 0 : this.ngModel !== undefined) {\n\t\t\tthis.ngModel = this.isMultiple ? [] : undefined;\n\t\t}\n\t\tthis.searchList = this.getSearchList(this.list);\n\t}\n\n\tpublic select(value: any) {\n\t\tif (this.isMultiple) {\n\t\t\tthis.ngModel = Array.isArray(this.ngModel)\n\t\t\t\t? this.ngModel.indexOf(value) !== -1\n\t\t\t\t\t? this.ngModel\n\t\t\t\t\t: this.ngModel.concat(value)\n\t\t\t\t: [value];\n\t\t} else {\n\t\t\tthis.ngModel = value;\n\t\t}\n\n\t\tthis.searchList = this.getSearchList(this.list);\n\t\tthis.$scope.$applyAsync();\n\t}\n\n\tprivate getSearchList(list: any[]) {\n\t\t// tslint:disable:triple-equals\n\t\treturn Array.isArray(this.ngModel)\n\t\t\t? list.filter(x => this.ngModel.every((y: any) => x[this.value] != y))\n\t\t\t: this.ngModel == null\n\t\t\t\t? cloneDeep(list)\n\t\t\t\t: list.filter(x => x[this.value] != this.ngModel);\n\t\t// tslint:enable:triple-equals\n\t}\n}\n\nexport const selectList: NgInputOptions = {\n\ttype: 'input',\n\trender() {\n\t\tconst select =\n\t\t\t<select class='form-control select-input d-none'\n\t\t\t\tng-attr-name='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-attr-id='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-model='$ctrl.ngModel'>\n\t\t\t</select>;\n\n\t\tconst isMultiple = SelectController.IsMultiple(this.$attrs);\n\t\tif (isMultiple) {\n\t\t\tselect.setAttribute('multiple', 'true');\n\t\t} else {\n\t\t\tconst placeholder = <option></option> as HTMLOptionElement;\n\t\t\tplaceholder.setAttribute('placeholder', 'true');\n\t\t\tplaceholder.text = SelectController.GetPlaceholder(this.$attrs);\n\t\t\tplaceholder.value = '';\n\n\t\t\tselect.appendChild(placeholder);\n\t\t}\n\n\t\tif (NgService.IsMobile()) {\n\t\t\tselect.classList.remove('d-none');\n\t\t\tselect.setAttribute(\n\t\t\t\t'ng-options',\n\t\t\t\t'item[\\'{{$ctrl.value}}\\'] as item[\\'{{$ctrl.text}}\\'] for item in $ctrl.searchList track by $index',\n\t\t\t);\n\t\t\treturn select;\n\t\t}\n\n\t\tconst innerlist = <div class={`select-list ${isMultiple ? 'multiple' : 'single'}`}></div>;\n\t\tconst inner = <div class='select-inner-container'>{select}{innerlist}</div>;\n\t\tconst selected = <div class='select-item'></div>;\n\n\t\tconst btn =\n\t\t\t<button class='select-button'\n\t\t\t\tng-attr-aria-label=\"Remove item: '{{$ctrl.getDisplayText($ctrl.ngModel)}}'\"\n\t\t\t\tng-click='$ctrl.clear()'>\n\t\t\t</button>;\n\n\t\tif (isMultiple) {\n\t\t\tconst sbtn = btn.cloneNode() as HTMLButtonElement;\n\t\t\tsbtn.setAttribute('ng-attr-aria-label', 'Remove item: \\'{{$ctrl.getDisplayText(item)}}\\'');\n\t\t\tsbtn.setAttribute('ng-click', '$ctrl.remove(item)');\n\n\t\t\tselected.setAttribute('ng-repeat', 'item in $ctrl.ngModel track by $index');\n\t\t\tselected.setAttribute('aria-selected', 'true');\n\t\t\tselected.innerHTML = `{{$ctrl.getDisplayText(item)}}${sbtn.outerHTML}`;\n\n\t\t\tconst placeholder = <div class='select-item placeholder'\n\t\t\t\tng-if='$ctrl.ngModel == null || $ctrl.ngModel.length === 0'></div>;\n\t\t\tplaceholder.innerText = SelectController.GetPlaceholder(this.$attrs);\n\n\t\t\tinnerlist.appendChild(placeholder);\n\t\t} else {\n\t\t\tselected.setAttribute('ng-class', '{ \\'placeholder\\': $ctrl.ngModel == null }');\n\t\t\tselected.innerText = '{{$ctrl.getDisplayText($ctrl.ngModel)}}';\n\t\t}\n\n\t\tconst item = <div class='select-item' ng-repeat='item in $ctrl.searchList track by $index'\n\t\t\tng-attr-data-value='{{item[$ctrl.value]}}' role='option'></div>;\n\t\titem.innerText = '{{item[$ctrl.text]}}';\n\n\t\tconst list = <div class='select-dropdown-list' dir='ltr' role='listbox' hidden={true}></div>;\n\n\t\tconst input = <input class='select-input'\n\t\t\ttype='text'\n\t\t\tautocomplete='off'\n\t\t\tautocapitalize='off'\n\t\t\tspellcheck={false}\n\t\t\trole='textbox'\n\t\t\taria-autocomplete='list'\n\t\t\tplaceholder=''\n\t\t\ttitle='Select List'\n\t\t\thidden={true}\n\t\t/>;\n\n\t\tconst type = `select-${isMultiple ? 'multiple' : 'one'}`;\n\t\tconst container =\n\t\t\t<div class='select-container'\n\t\t\t\tdata-type={type}\n\t\t\t\trole='combobox'\n\t\t\t\ttabIndex={0}\n\t\t\t\taria-autocomplete='list'\n\t\t\t\taria-haspopup='true'\n\t\t\t\taria-expanded='false'\n\t\t\t\tdir='ltr'\n\t\t\t\tng-attr-name={`${type}_{{$ctrl.uniqueId}}`}\n\t\t\t\tng-attr-id={`${type}_{{$ctrl.uniqueId}}`}>\n\t\t\t\t{inner}\n\t\t\t\t<div class='select-dropdown border-bottom-0 border-top-0'\n\t\t\t\t\taria-expanded='false'>\n\t\t\t\t\t{input}\n\t\t\t\t\t{list}\n\t\t\t\t</div>\n\t\t\t</div>;\n\n\t\tinnerlist.appendChild(selected);\n\t\tinnerlist.appendChild(btn);\n\n\t\tlist.appendChild(item);\n\n\t\treturn container;\n\t},\n\tcontroller: SelectController,\n\tbindings: {\n\t\tlist: '<',\n\t},\n};\n","import isEqual from 'lodash/isEqual';\nimport { Indexed } from '@ledge/types';\nimport { NgController } from '../../controller';\n\nexport class NgInputController<T = any> extends NgController {\n\tpublic ngModel: any;\n\tpublic ngModelCtrl!: NgModelController<T>;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tsetTimeout(() => {\n\t\t\tconst $contain = this.$element.querySelector('[ng-transclude=\"contain\"]');\n\t\t\tif ($contain != null && $contain.children.length === 0) {\n\t\t\t\tif (this.isIE11) {\n\t\t\t\t\t($contain as any).removeNode(true);\n\t\t\t\t} else {\n\t\t\t\t\t$contain.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.$scope.$watchCollection(\n\t\t\t\t() => this.ngModel,\n\t\t\t\t(curr: any, prev: any) => {\n\t\t\t\t\tif (isEqual(curr, prev)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.ngModelCtrl.$setViewValue(curr);\n\t\t\t\t\tconst isValid = Object\n\t\t\t\t\t\t.keys(this.ngModelCtrl.$validators)\n\t\t\t\t\t\t.every(x => {\n\t\t\t\t\t\t\treturn this.ngModelCtrl.$validators[x](curr, curr);\n\t\t\t\t\t\t});\n\t\t\t\t\tif (isValid) {\n\t\t\t\t\t\tthis.ngModelCtrl.$commitViewValue();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n}\n\nexport interface NgModelController<T = any> {\n\t$viewValue: T;\n\t$modelValue: T;\n\n\t$error: { [validationErrorKey: string]: boolean };\n\t$name?: string;\n\n\treadonly $touched: boolean;\n\treadonly $untouched: boolean;\n\n\t$validators: {\n\t\t/**\n\t\t * viewValue is any because it can be an object that is called in the view like $viewValue.name:$viewValue.subName\n\t\t */\n\t\t[index: string]: (modelValue: any, viewValue: any) => boolean;\n\t};\n\n\t$pending?: { [validationErrorKey: string]: boolean };\n\treadonly $pristine: boolean;\n\treadonly $dirty: boolean;\n\treadonly $valid: boolean;\n\treadonly $invalid: boolean;\n\n\t/**\n\t * Documentation states viewValue and modelValue to be a string but other types do work and it's common to use them.\n\t */\n\t$setViewValue(value: any, trigger?: string): void;\n\t$commitViewValue(): void;\n\t$rollbackViewValue(): void;\n\t$processModelValue(): void;\n\t$overrideModelOptions(options: NgModelOptions): void;\n\n\t$render(): void;\n\t$validate(): void;\n\t$setDirty(): void;\n\t$setPristine(): void;\n\t$setTouched(): void;\n\t$setUntouched(): void;\n\t$setValidity(validationErrorKey: string, isValid: boolean): void;\n\n\t$isEmpty(value: any): boolean;\n}\n\n/**\n * Allows tuning how model updates are done.\n * @see https://docs.angularjs.org/api/ng/directive/ngModelOptions\n */\nexport interface NgModelOptions {\n\tupdateOn?: string;\n\tdebounce?: number | Indexed<number>;\n\tallowInvalid?: boolean;\n\tgetterSetter?: boolean;\n\ttimezone?: string;\n}\n","import { Indexed } from '@ledge/types';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { NgInputController } from './controller';\nimport { NgInputOptions } from './options';\nimport { NgAttributes } from '../../attributes';\nimport { NgComponentOptions } from '../../options';\nimport { NgService } from '../../service';\nimport { h } from '../../render';\n\nconst BaseComponent = Object.seal({\n\tisRadioOrCheckbox: false,\n\ttype: 'input',\n\tlabelClass: 'form-control-label',\n\ttemplateClass: 'form-group',\n\tattrs: {},\n\tcontroller: class extends NgInputController { },\n\trender() {\n\t\treturn this.$template;\n\t},\n\trenderLabel() {\n\t\tconst $transclude = <ng-transclude></ng-transclude>;\n\t\t$transclude.textContent = InputService.getDefaultLabelText(this.$attrs);\n\t\tthis.$label.appendChild($transclude);\n\t},\n\tpostRender() {\n\t\treturn this.$template;\n\t},\n}) as NgInputOptions & { isRadioOrCheckbox: boolean };\n\nconst ValidationExpressions = Object.seal({\n\t$Error: '$ctrl.ngModelCtrl.$error',\n\t$Invalid: '$ctrl.ngModelCtrl.$invalid',\n\t$Touched: '$ctrl.ngModelCtrl.$touched',\n\t$FormInvalid: `$ctrl.ngModelCtrl.$$parentForm.$submitted`,\n\tget $IsInvalid() {\n\t\treturn `(${this.$Touched} || ${this.$FormInvalid}) && ${this.$Invalid}`;\n\t},\n});\n\nexport class InputService extends NgService {\n\tpublic static readonly $validationAttrs = [\n\t\t'required', 'ngRequired',\n\t\t'disabled', 'ngDisabled',\n\t\t'readonly', 'ngReadonly',\n\t];\n\n\tpublic static readonly $validationMessages = new Map<string, string>([\n\t\t['email', 'Email address must be in the following form: email@address.com'],\n\t\t['required', 'This field is required'],\n\t\t['minlength', 'Input is not long enough'],\n\t\t['maxlength', 'Input is too long'],\n\t]);\n\n\tpublic static readonly $baseDefinition: NgComponentOptions = {\n\t\ttransclude: {\n\t\t\tcontain: '?contain',\n\t\t},\n\t\trequire: {\n\t\t\tngModelCtrl: 'ngModel',\n\t\t},\n\t\tbindings: {\n\t\t\tngModel: '=',\n\t\t\tngModelOptions: '<',\n\t\t\tngDisabled: '<',\n\t\t\tngReadonly: '<',\n\t\t\tngRequired: '<',\n\t\t},\n\t};\n\n\tpublic static readonly $BaseComponent = BaseComponent;\n\tpublic static readonly $ValidationExpressions = ValidationExpressions;\n\n\t/**\n\t * Retrieves the identifying name for an ngModel\n\t */\n\tpublic static modelIdentifier($attrs: NgAttributes) {\n\t\treturn ($attrs.ngModel as string).split('.').pop() as string;\n\t}\n\n\t/**\n\t * Gets text -- intended for a label -- from the ngModel property text\n\t */\n\tpublic static getDefaultLabelText($attrs: NgAttributes) {\n\t\treturn InputService.modelIdentifier($attrs)\n\t\t\t.split(/(?=[A-Z0-9])/)\n\t\t\t.map(x => isNaN(Number(x)) ? x.charAt(0).toUpperCase() + x.substring(1) : x)\n\t\t\t.join(' ');\n\t}\n\n\t/**\n\t * @param $input - The input to set attributes on\n\t */\n\tpublic static getInputInput($input: HTMLElement) {\n\t\treturn (\n\t\t\t['INPUT', 'TEXTAREA', 'SELECT'].indexOf($input.tagName) !== -1\n\t\t\t\t? $input\n\t\t\t\t: $input.querySelector('select') || $input.querySelector('input')\n\t\t) as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\n\t}\n\n\t/**\n\t * Transform an input component definition into an ng component definition\n\t * @param component An object representing the requested component definition\n\t */\n\tpublic static defineInputComponent<T extends NgInputOptions>(component: T) {\n\t\tconst $component = cloneDeep({ ...InputService.$BaseComponent, ...component });\n\t\t$component.isRadioOrCheckbox = $component.labelClass === 'form-check-label';\n\n\t\tconst $definition = cloneDeep(InputService.$baseDefinition);\n\n\t\t// assign child objects\n\t\tif ($definition.bindings != null && $component.bindings != null) {\n\t\t\tfor (const key of Object.keys($component.bindings)) {\n\t\t\t\t$definition.bindings[key] = $component.bindings[key];\n\t\t\t}\n\t\t}\n\t\tif ($definition.transclude != null && $component.transclude != null) {\n\t\t\tfor (const key of Object.keys($component.transclude)) {\n\t\t\t\t($definition.transclude as Indexed<string>)[key] = ($component.transclude as Indexed<string>)[key];\n\t\t\t}\n\t\t}\n\n\t\t// assign controller\n\t\tif ($component.controller === undefined) {\n\t\t\tthrow new Error(`Invalid component: ${JSON.stringify($component)}`);\n\t\t}\n\t\t$definition.controller = $component.controller;\n\n\t\t// assign template\n\t\t// tslint:disable-next-line: cyclomatic-complexity\n\t\t$definition.template = ['$element', '$attrs', ($element: [HTMLElement], $attrs: NgAttributes) => {\n\t\t\tconst $el = $element[0];\n\n\t\t\tconst $template = <div class={$component.templateClass as string}></div> as HTMLDivElement;\n\n\t\t\t// allow consumer to access $template and $attrs attributes from `this`\n\t\t\tconst $input = $component.render.call({ $template, $attrs });\n\n\t\t\tconst isRadio = ($input as HTMLInputElement).type === 'radio';\n\t\t\tconst isRequired = $attrs.hasOwnProperty('required');\n\t\t\tconst isSrOnly = $attrs.hasOwnProperty('srOnly');\n\n\t\t\t// all inputs must have labels\n\t\t\tconst $label =\n\t\t\t\t<label class={`${$component.labelClass}${isSrOnly ? ' sr-only' : ''}`}\n\t\t\t\t\tng-attr-for='{{id}}_{{$ctrl.uniqueId}}'></label> as HTMLLabelElement;\n\n\t\t\tif (isRequired === true && !isRadio) {\n\t\t\t\t$label.appendChild(<span class='text-danger'> *</span>);\n\t\t\t}\n\n\t\t\tif ($component.isRadioOrCheckbox === false) {\n\t\t\t\t$template.appendChild($label);\n\t\t\t}\n\n\t\t\tif ($component.canHaveIcon === true && $attrs.icon != null) {\n\t\t\t\t$template.appendChild(\n\t\t\t\t\t<div class='input-group'>\n\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t<span class='input-group-text'>\n\t\t\t\t\t\t\t\t<span class={`fa fa-${$attrs.icon}`} aria-hidden='true'></span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{$input}\n\t\t\t\t\t</div>,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$template.appendChild($input);\n\t\t\t}\n\n\t\t\tif ($el.closest('contain') != null) {\n\t\t\t\t$input.style.marginTop = '8px';\n\t\t\t\t$label.classList.add('sr-only');\n\t\t\t}\n\n\t\t\tconst requiredTag = $label.firstElementChild;\n\t\t\tif (requiredTag != null) {\n\t\t\t\t$label.removeChild(requiredTag);\n\t\t\t}\n\n\t\t\t$component.renderLabel?.call({ $label, $attrs });\n\n\t\t\tif (requiredTag != null) {\n\t\t\t\t$label.appendChild(requiredTag);\n\t\t\t}\n\n\t\t\t// add a transclusion slot for e.g. nesting inputs\n\t\t\t$template.appendChild(<div ng-transclude='contain'></div>);\n\n\t\t\tif ($component.isRadioOrCheckbox === true) {\n\t\t\t\t$label.style.setProperty('cursor', 'pointer');\n\t\t\t\t$template.appendChild($label);\n\t\t\t}\n\n\t\t\t$component.postRender?.call({ $template, $attrs });\n\n\t\t\t// that's right, i named it after filterFilter. fight me.\n\t\t\tconst $inputInput = InputService.getInputInput($input);\n\n\t\t\tInputService.$validationAttrs\n\t\t\t\t.filter(x => $attrs.hasOwnProperty(x) === true)\n\t\t\t\t.forEach(x => {\n\t\t\t\t\t$inputInput.setAttribute(\n\t\t\t\t\t\tx.replace(/[A-Z]/, s => `-${s.toLowerCase()}`),\n\t\t\t\t\t\t/^ng/.test(x) ? `$ctrl.${x}` : 'true',\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\tif ($inputInput.tagName !== 'SELECT') {\n\t\t\t\t$inputInput.setAttribute('ng-class', `{ 'is-invalid': ${InputService.$ValidationExpressions.$IsInvalid} }`);\n\t\t\t\t$inputInput.setAttribute('ng-blur', '$ctrl.ngModelCtrl.$setTouched()');\n\t\t\t}\n\n\t\t\tconst $validationBlock =\n\t\t\t\t<div ng-messages={InputService.$ValidationExpressions.$Error}\n\t\t\t\t\tng-show={InputService.$ValidationExpressions.$IsInvalid}\n\t\t\t\t\trole='alert'></div>;\n\n\t\t\tconst { validators = {} } = $component;\n\t\t\tconst attrs = Object.keys($component.attrs as Indexed);\n\n\t\t\tfor (const [key, value] of Object.keys(validators).map(x => [x, validators[x]])) {\n\t\t\t\tInputService.$validationMessages.set(key, value);\n\t\t\t\tattrs.push(key);\n\t\t\t}\n\n\t\t\tInputService.$validationAttrs\n\t\t\t\t.concat(...attrs, 'email')\n\t\t\t\t.filter(x => /^ng/.test(x) === false)\n\t\t\t\t.filter(x => InputService.$validationMessages.has(x) === true)\n\t\t\t\t.filter(x => x !== 'email' || $inputInput.type === x)\n\t\t\t\t.forEach(x => {\n\t\t\t\t\tconst $message = <div class='text-danger' ng-message={x}></div>;\n\t\t\t\t\t$message.innerText = InputService.$validationMessages.get(x) as string;\n\t\t\t\t\t$validationBlock.appendChild($message);\n\t\t\t\t});\n\n\t\t\tlet $html: string;\n\t\t\tif (isRadio === true) {\n\t\t\t\t$html = (<div class='form-group'>{$template}{$validationBlock}</div>).outerHTML;\n\t\t\t} else {\n\t\t\t\t$template.appendChild($validationBlock);\n\t\t\t\t$html = $template.outerHTML;\n\t\t\t}\n\n\t\t\t$html = $html.replace(/{{id}}/g, InputService.modelIdentifier($attrs));\n\n\t\t\tattrs\n\t\t\t\t.forEach(prop => {\n\t\t\t\t\t$html = $html.replace(\n\t\t\t\t\t\tnew RegExp(`{{${prop}}}`, 'g'),\n\t\t\t\t\t\t$attrs[prop] || ($component.attrs as Indexed)[prop],\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\treturn $html;\n\t\t}];\n\n\t\treturn $definition as T;\n\t}\n}\n","import { h } from '../render';\nimport { NgInputController, NgInputOptions } from './shared';\n\nconst DEFAULT_MAX_HEIGHT = 9e4;\n\nclass TextBoxController extends NgInputController {\n\tpublic $element!: HTMLTextAreaElement;\n\tpublic $mirror;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.$mirror =\n\t\t\t<textarea aria-hidden='true' title='Hidden TextArea' tabIndex={-1} /> as HTMLTextAreaElement;\n\n\t\tthis.$mirror.style.setProperty('position', 'absolute');\n\t\tthis.$mirror.style.setProperty('top', '-999px');\n\t\tthis.$mirror.style.setProperty('right', 'auto');\n\t\tthis.$mirror.style.setProperty('bottom', 'auto');\n\t\tthis.$mirror.style.setProperty('left', '0');\n\t\tthis.$mirror.style.setProperty('overflow', 'hidden');\n\t\tthis.$mirror.style.setProperty('box-sizing', 'content-box');\n\t\tthis.$mirror.style.setProperty('min-height', '0', 'important');\n\t\tthis.$mirror.style.setProperty('height', '0', 'important');\n\t\tthis.$mirror.style.setProperty('padding', '0');\n\t\tthis.$mirror.style.setProperty('word-wrap', 'break-word');\n\t\tthis.$mirror.style.setProperty('border', '0');\n\n\t\t// append mirror to the DOM\n\t\tdocument.body.appendChild(this.$mirror);\n\t}\n\n\tpublic $onInit() {\n\t\t// the query *must* return an element or nothing we've done so far matters\n\t\tconst element = this.$element.querySelector('textarea') as HTMLTextAreaElement;\n\t\tlet computedStyle = window.getComputedStyle(element);\n\n\t\tconst boxOuter = {\n\t\t\twidth:\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-right-width'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-right'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-left'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-left-width'), 10),\n\t\t\theight:\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-top-width'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-top'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-bottom'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-bottom-width'), 10),\n\t\t};\n\n\t\tconst minHeightValue = parseInt(computedStyle.getPropertyValue('min-height'), 10);\n\t\tconst heightValue = parseInt(computedStyle.getPropertyValue('height'), 10);\n\t\tconst minHeight = Math.max(minHeightValue, heightValue) - boxOuter.height;\n\n\t\t// opera returns max-height of -1 if not set\n\t\tlet maxHeight = parseInt(computedStyle.getPropertyValue('max-height'), 10);\n\t\tmaxHeight = maxHeight && maxHeight > 0 ? maxHeight : DEFAULT_MAX_HEIGHT;\n\n\t\t// set resize and apply elastic\n\t\telement.style.setProperty('resize', 'none');\n\n\t\tconst mirror = this.$mirror;\n\t\tfunction adjust() {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tcomputedStyle = window.getComputedStyle(element);\n\n\t\t\t\tconst width = `${parseInt(computedStyle.getPropertyValue('width'), 10) - boxOuter.width}px`;\n\t\t\t\tmirror.style.setProperty('width', width);\n\t\t\t\tmirror.style.setProperty('overflow-y', computedStyle.getPropertyValue('overflow-y'));\n\n\t\t\t\tmirror.value = element.value;\n\n\t\t\t\tlet { scrollHeight } = mirror;\n\t\t\t\tlet overflow = 'hidden';\n\n\t\t\t\tif (scrollHeight > maxHeight) {\n\t\t\t\t\tscrollHeight = maxHeight;\n\t\t\t\t\toverflow = 'scroll';\n\t\t\t\t} else if (scrollHeight < minHeight) {\n\t\t\t\t\tscrollHeight = minHeight;\n\t\t\t\t}\n\n\t\t\t\telement.style.setProperty('overflow-y', overflow);\n\n\t\t\t\tscrollHeight += boxOuter.height;\n\t\t\t\tif (parseInt(computedStyle.getPropertyValue('height'), 10) !== scrollHeight) {\n\t\t\t\t\telement.style.setProperty('height', `${scrollHeight}px`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\twindow.addEventListener('resize', adjust);\n\t\telement.addEventListener('keydown', adjust);\n\n\t\tthis.$scope.$on('$destroy', () => {\n\t\t\tif (this.isIE11) {\n\t\t\t\t(this.$mirror as any).removeNode(true);\n\t\t\t} else {\n\t\t\t\tthis.$mirror.remove();\n\t\t\t}\n\t\t\twindow.removeEventListener('resize', adjust);\n\t\t\telement.removeEventListener('keydown', adjust);\n\t\t});\n\n\t\t// copy the essential styles from the textarea to the mirror\n\t\tconst styles = [\n\t\t\t'font-family',\n\t\t\t'font-size',\n\t\t\t'font-weight',\n\t\t\t'font-style',\n\t\t\t'letter-spacing',\n\t\t\t'line-height',\n\t\t\t'text-transform',\n\t\t\t'word-spacing',\n\t\t\t'text-indent',\n\t\t\t'white-space',\n\t\t];\n\n\t\tfor (const style of styles) {\n\t\t\tthis.$mirror.style.setProperty(style, computedStyle.getPropertyValue(style));\n\t\t}\n\t}\n}\n\nexport const textBox: NgInputOptions = {\n\ttype: 'input',\n\tattrs: { maxlength: 3000, placeholder: '' },\n\trender() {\n\t\tconst textArea =\n\t\t\t<textarea class='form-control'\n\t\t\t\tng-attr-id='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-attr-name='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-model='$ctrl.ngModel'\n\t\t\t\tng-model-options='$ctrl.ngModelOptions'\n\t\t\t/> as HTMLTextAreaElement;\n\n\t\ttextArea.maxLength = 3000;\n\t\ttextArea.placeholder = '{{placeholder}}';\n\n\t\ttextArea.style.setProperty('overflow', 'hidden');\n\t\ttextArea.style.setProperty('overflow-y', 'hidden');\n\t\ttextArea.style.setProperty('word-wrap', 'break-word');\n\n\t\treturn textArea;\n\t},\n\tcontroller: TextBoxController,\n};\n","import { Indexed } from '@ledge/types';\nimport { h } from '../render';\nimport { NgInputController, NgInputOptions } from './shared';\n\nclass TextInputController extends NgInputController {\n\tpublic min: number | undefined;\n\tpublic max: number | undefined;\n\n\tpublic $onInit() {\n\t\tconst { type, minlength } = this.$attrs;\n\n\t\tif (type === 'number') {\n\t\t\tthis.ngModelCtrl.$validators.minVal = val => {\n\t\t\t\treturn this.min == null || val >= this.min;\n\t\t\t};\n\t\t\tthis.ngModelCtrl.$validators.maxVal = val => {\n\t\t\t\treturn this.max == null || val <= this.max;\n\t\t\t};\n\t\t}\n\n\t\tif (minlength != null) {\n\t\t\tthis.ngModelCtrl.$validators.pattern = val => {\n\t\t\t\treturn val != null && val.length >= minlength;\n\t\t\t};\n\t\t}\n\t}\n}\n\nconst validators: Indexed<string> = {\n\tminVal: 'Must be greater than or equal to {{$ctrl.min}}',\n\tmaxVal: 'Must be less than or equal to {{$ctrl.max}}',\n};\n\nexport const textInput: NgInputOptions<TextInputController> = {\n\ttype: 'input',\n\tcanHaveIcon: true,\n\tattrs: { maxlength: 3000, placeholder: '' },\n\trender() {\n\t\tconst { type = 'text', minlength } = this.$attrs;\n\t\tconst input =\n\t\t\t<input class='form-control'\n\t\t\t\tng-attr-id='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-attr-name='{{id}}_{{$ctrl.uniqueId}}'\n\t\t\t\tng-model='$ctrl.ngModel'\n\t\t\t\tng-model-options='$ctrl.ngModelOptions'\n\t\t\t\ttype={type}\n\t\t\t\tmaxLength={'{{maxlength}}' as never}\n\t\t\t\tplaceholder='{{placeholder}}' />;\n\n\t\tconst isRange = type === 'range';\n\t\tif (type === 'number' || isRange) {\n\t\t\tif (isRange) {\n\t\t\t\tinput.classList.remove('form-control');\n\t\t\t\tinput.classList.add('custom-range');\n\t\t\t\tinput.removeAttribute('maxlength');\n\t\t\t\tinput.removeAttribute('placeholder');\n\t\t\t}\n\t\t\tinput.setAttribute('ng-attr-min', '{{$ctrl.min}}');\n\t\t\tinput.setAttribute('ng-attr-max', '{{$ctrl.max}}');\n\t\t\tinput.setAttribute('ng-attr-step', `{{$ctrl.step || '${isRange ? 1 : 'any'}'}}`);\n\t\t}\n\n\t\tif (minlength != null) {\n\t\t\tinput.setAttribute('pattern', `.{${minlength},}`);\n\t\t\tvalidators.pattern = `Input must be at least ${minlength} characters`;\n\t\t}\n\n\t\treturn input;\n\t},\n\tpostRender() {\n\t\tif (this.$attrs.type === 'range') {\n\t\t\tthis.$template.appendChild(\n\t\t\t\t<p class='text-center lead'>{'{{$ctrl.ngModel}}'}</p>,\n\t\t\t);\n\t\t}\n\t\treturn this.$template;\n\t},\n\tbindings: {\n\t\tmin: '<',\n\t\tmax: '<',\n\t\tstep: '<',\n\t},\n\tvalidators,\n\tcontroller: TextInputController,\n};\n\nexport const htmlInput = { ...textInput };\n","import anime from 'animejs';\nimport { NgService } from './service';\nimport { h } from './render';\n\ntype LogType = '$log' | '$warn' | '$error' | '$info' | '$success';\nenum LogTypeToastBackgrounds {\n\t$log = 'white',\n\t$success = 'success',\n\t$info = 'info',\n\t$warn = 'warning',\n\t$error = 'danger',\n}\n\nexport class NgToast {\n\tprotected type!: LogType;\n\tprotected readonly toastHeaderTimestamp = <strong class='text-dark'></strong>;\n\tprotected readonly toastHeader = <div class='toast-header'>{this.toastHeaderTimestamp}</div>;\n\tprotected readonly toastBody = <div class='toast-body h5 col mb-0 pb-3'></div>;\n\tprotected readonly toast =\n\t\t<div class='toast row justify-content-between w-100'\n\t\t\trole='alert'\n\t\t\taria-live='assertive'\n\t\t\taria-atomic='true'>\n\t\t\t{this.toastHeader}\n\t\t\t{this.toastBody}\n\t\t</div>;\n\n\tconstructor(options: {\n\t\ttext: string,\n\t\ttype: LogType,\n\t\tcontainer: HTMLElement,\n\t}) {\n\t\tthis.toast.style.setProperty('cursor', 'pointer');\n\t\tthis.toastHeader.style.setProperty('border-bottom', 'none');\n\n\t\tthis.setBodyText(options.text);\n\t\tthis.setType(options.type);\n\n\t\toptions.container.appendChild(this.toast);\n\t}\n\n\t/**\n\t * Append a child element to the toast element\n\t *\n\t * @param el The element to append\n\t */\n\tpublic appendChild(el: HTMLElement) {\n\t\tthis.toast.appendChild(el);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the inner HTML of the toast's body element\n\t *\n\t * @param text The HTML to set\n\t */\n\tpublic setBodyText(text: string) {\n\t\tthis.toastBody.innerHTML = text;\n\t}\n\n\t/**\n\t * Change the look & feel of the toast based on its associated log type\n\t *\n\t * @param type The log type of toast\n\t */\n\tpublic setType(type: LogType) {\n\t\tif (this.type != null) {\n\t\t\tthis.toast.classList.remove(`bg-${LogTypeToastBackgrounds[this.type]}`);\n\t\t}\n\n\t\tthis.type = type;\n\t\tthis.toast.classList.add(`bg-${LogTypeToastBackgrounds[this.type]}`);\n\n\t\tif (type === '$log') {\n\t\t\tthis.toastHeader.classList.add('bg-dark');\n\t\t\tthis.toastHeader.style.setProperty('opacity', '0.75');\n\t\t\tthis.toastHeaderTimestamp.classList.remove('text-dark');\n\t\t\tthis.toastHeaderTimestamp.classList.add('text-white');\n\t\t} else if (type !== '$warn') {\n\t\t\tthis.toast.classList.add('text-white');\n\t\t}\n\t}\n\n\t/**\n\t * Show the toast\n\t *\n\t * @param timeout Length in ms before toast disappears (`false` to set permanently)\n\t * @param container Optional container override\n\t */\n\tpublic show(timeout: false | number, container?: HTMLElement) {\n\t\tif (container != null) {\n\t\t\tthis.remove();\n\t\t\tcontainer.appendChild(this.toast);\n\t\t}\n\n\t\tanime({\n\t\t\ttargets: this.toast,\n\t\t\ttranslateX: [500, 0],\n\t\t\tduration: 1000,\n\t\t\teasing: 'easeOutQuint(0.5, 1)',\n\t\t\tbegin: () => {\n\t\t\t\tthis.toastHeaderTimestamp.innerText = new Date().toLocaleTimeString(navigator.language).replace(/(:\\d{2})(?=\\s[AP]M$)/, '');\n\t\t\t\tthis.toast.style.setProperty('opacity', '1');\n\t\t\t},\n\t\t});\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst hideAnimation = anime({\n\t\t\t\ttargets: this.toast,\n\t\t\t\ttranslateX: [0, 500],\n\t\t\t\tduration: 1000,\n\t\t\t\tautoplay: false,\n\t\t\t\teasing: 'easeInQuint(0.5, 1)',\n\t\t\t\tcomplete: () => {\n\t\t\t\t\tthis.toast.removeEventListener('click', hideAnimation.play);\n\t\t\t\t\tthis.toast.removeEventListener('mouseover', resetAnimationOnMouseover);\n\t\t\t\t\tthis.toast.removeEventListener('mouseout', resumeAnimationOnMouseout);\n\t\t\t\t\tthis.remove();\n\t\t\t\t\tresolve();\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst isAutoClose = typeof timeout === 'number' && !isNaN(timeout);\n\t\t\tconst makeTimeout = () => (setTimeout as typeof window['setTimeout'])(hideAnimation.play, timeout as number);\n\n\t\t\tlet autoCloseId = isAutoClose ? makeTimeout() : undefined;\n\t\t\tlet wasClosing = false;\n\n\t\t\tconst resetAnimationOnMouseover = () => {\n\t\t\t\twasClosing = hideAnimation.progress > 0;\n\n\t\t\t\tclearTimeout(autoCloseId);\n\t\t\t\tautoCloseId = undefined;\n\n\t\t\t\thideAnimation.restart();\n\t\t\t\thideAnimation.pause();\n\t\t\t};\n\n\t\t\tconst resumeAnimationOnMouseout = () => {\n\t\t\t\tif (wasClosing) {\n\t\t\t\t\thideAnimation.play();\n\t\t\t\t} else if (isAutoClose && autoCloseId === undefined) {\n\t\t\t\t\tautoCloseId = makeTimeout();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.toast.addEventListener('click', hideAnimation.play);\n\t\t\tthis.toast.addEventListener('mouseover', resetAnimationOnMouseover);\n\t\t\tthis.toast.addEventListener('mouseout', resumeAnimationOnMouseout);\n\t\t});\n\t}\n\n\t/**\n\t * Hide the toast\n\t */\n\tpublic hide() {\n\t\tthis.toast.click();\n\t}\n\n\t/**\n\t * Remove the toast from its container\n\t */\n\tpublic remove() {\n\t\tif (this.toast.parentElement != null) {\n\t\t\tthis.toast.parentElement.removeChild(this.toast);\n\t\t}\n\t}\n}\n\n// tslint:disable:no-console\nexport class NgConsole extends NgService {\n\t/**\n\t * Invokes `Console.prototype.debug`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $debug(...items: any[]) {\n\t\tconsole.debug(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.error`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $error(...items: any[]) {\n\t\tconsole.error(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.info`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $info(...items: any[]) {\n\t\tconsole.info(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.warn`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $warn(...items: any[]) {\n\t\tconsole.warn(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.log`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $log(...items: any[]) {\n\t\tconsole.log(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.log`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $success(...items: any[]) {\n\t\tthis.$log(...items);\n\t}\n}\n// tslint:enable:no-console\n\nexport class NgLogger extends NgConsole {\n\tprotected readonly container = <div class='position-fixed'></div>;\n\tprotected readonly toasts: NgToast[] = [];\n\n\tconstructor(private isProd = false) {\n\t\tsuper();\n\n\t\tthis.container.style.setProperty('top', '0.5rem');\n\t\tthis.container.style.setProperty('right', '-1.5rem');\n\t\tthis.container.style.setProperty('width', '100%');\n\t\tthis.container.style.setProperty('max-width', '23rem');\n\n\t\tdocument.body.appendChild(this.container);\n\t}\n\n\t/**\n\t * Clear all active notifications\n\t */\n\tpublic clear() {\n\t\tthis.toasts.forEach(x => x.hide());\n\t}\n\n\t/**\n\t * Prompt the user to confirm intent for a previous action\n\t *\n\t * @param msg Confirmation message\n\t */\n\tpublic confirm(msg = 'Please confirm your action') {\n\t\tconst okBtn = <button class='btn w-50 btn-success rounded-0'>Yes</button>;\n\t\tconst cancelBtn = <button class='btn w-50 btn-dark rounded-0'>No</button>;\n\t\tconst footer = <div class='w-100'>{cancelBtn}{okBtn}</div>;\n\n\t\tconst toast = this.notify(msg, '$log', false);\n\t\ttoast.appendChild(footer);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst removeListeners = () => {\n\t\t\t\tokBtn.removeEventListener('click', ok);\n\t\t\t\tcancelBtn.removeEventListener('click', cancel);\n\t\t\t};\n\n\t\t\tconst ok = () => {\n\t\t\t\ttoast.hide();\n\t\t\t\tremoveListeners();\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\tconst cancel = () => {\n\t\t\t\ttoast.hide();\n\t\t\t\tremoveListeners();\n\t\t\t\treject();\n\t\t\t};\n\n\t\t\tokBtn.addEventListener('click', ok);\n\t\t\tcancelBtn.addEventListener('click', cancel);\n\t\t});\n\t}\n\n\t/**\n\t * Display an error notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (false by default)\n\t */\n\tpublic error(text: string, isTemporary = false) {\n\t\tthis.notify(text, '$error', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display an informational notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic info(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$info', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a success notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic success(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$success', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a warning notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic warning(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$warn', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a warning notification (disabled when `process.env.NODE_ENV === 'production'`)\n\t *\n\t * @param text Display text\n\t */\n\tpublic devWarning(text: string) {\n\t\tif (this.isProd === false) {\n\t\t\tthis.warning(`[DEV] ${text}`, false);\n\t\t}\n\t}\n\n\t/**\n\t * Show a customizable notification to the user\n\t *\n\t * @param text Display text\n\t * @param type Display type\n\t * @param timeout Length in ms before notification disappears (`false` to set permanently)\n\t * @param buttons Interaction points for the user\n\t */\n\tpublic notify(text: string, type: LogType, timeout: false | number = 2323) {\n\t\tthis[type](`${type}: ${text}`);\n\n\t\tconst toast = new NgToast({ text, type, container: this.container });\n\t\ttoast.show(timeout).then(() => {\n\t\t\tlet i = this.toasts.length;\n\t\t\tfor (; i > -1; --i) {\n\t\t\t\tif (this.toasts[i] === toast) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.toasts.splice(i, 1);\n\t\t});\n\n\t\tthis.toasts.push(toast);\n\t\treturn toast;\n\t}\n}\n","import { NgController } from '../controller';\nimport { NgComponentOptions } from '../options';\n\nclass SpinnerController extends NgController {\n\tprivate readonly colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\n\tpublic $onInit() {\n\t\tconst { color = 'primary' } = this.$attrs;\n\n\t\tif (this.colors.indexOf(color) === -1) {\n\t\t\tthrow new Error(`Color not supported: ${color}.\\nSupported colors: ${this.colors.join(', ')}`);\n\t\t}\n\n\t\tthis.$attrs.$set('role', 'status');\n\t\tthis.$attrs.$set('title', 'Loading...');\n\n\t\tthis.$element.classList.add('spinner-border');\n\t\tthis.$element.classList.add(`text-${color}`);\n\t\tthis.$element.classList.add('mx-1');\n\t\tthis.$element.style.setProperty('margin-top', '0.23rem');\n\t}\n}\n\nexport const appSpinner: NgComponentOptions = {\n\tcontroller: SpinnerController,\n};\n","import { appSpinner } from './app-spinner';\n\nexport const misc = {\n\tappSpinner,\n};\n","import { NgController, makeInjectableCtrl } from './controller';\nimport { NgLogger } from './logger';\nimport { NgService } from './service';\nimport { NgHttp } from './http';\nimport { NgInjector, NgScope } from './ng';\nimport { NgAppConfig } from './options';\nimport { h } from './render';\n\nconst MODAL_SHOW_DELAY = 23;\nconst MODAL_HIDE_DELAY = 150;\n\nexport class NgModal extends NgService {\n\tprotected readonly $backdrop = <div class='modal-backdrop fade'></div>;\n\tprotected readonly $title =\n\t\t<h5 class='modal-title' id={`modal-title-${this.uniqueId}`}></h5> as HTMLHeadingElement;\n\tprotected readonly $header = <header class='modal-header'>{this.$title}</header>;\n\tprotected readonly $main = <main class='modal-body'></main>;\n\tprotected readonly $cancelBtn =\n\t\t<button class='btn btn-info' type='button'>Cancel</button> as HTMLButtonElement;\n\tprotected readonly $submitBtn = <input class='btn btn-success' type='submit' /> as HTMLInputElement;\n\tprotected readonly $footer =\n\t\t<footer class='modal-footer'>{this.$cancelBtn}{this.$submitBtn}</footer>;\n\tprotected readonly $form =\n\t\t<form class='modal-content' role='document'>\n\t\t\t{this.$header}\n\t\t\t{this.$main}\n\t\t\t{this.$footer}\n\t\t</form> as HTMLFormElement;\n\tprotected readonly $dialog = <div class='modal-dialog' role='dialog'>{this.$form}</div>;\n\tprotected readonly $container =\n\t\t<div class='fade modal'\n\t\t\taria-labelledby={this.$title.id}\n\t\t\taria-live='polite'\n\t\t\taria-modal='true'\n\t\t\trole='dialog'>{this.$dialog}</div>;\n\tprotected readonly $compile: (element: Element) => (scope: NgScope) => { [i: number]: HTMLElement };\n\tprotected readonly $rootScope: NgScope;\n\n\tconstructor(\n\t\tprotected readonly $log: NgLogger,\n\t\tprotected readonly $http: NgHttp,\n\t\tprotected readonly $config: NgAppConfig,\n\t\tprotected readonly $injector: NgInjector,\n\t) {\n\t\tsuper();\n\n\t\tthis.$compile = this.$injector.get('$compile');\n\t\tthis.$rootScope = this.$injector.get('$rootScope');\n\n\t\tdocument.body.appendChild(this.$container);\n\t}\n\n\tpublic open<T extends typeof NgController>(options: NgModalOptions<T> = {}) {\n\t\tconst { $log } = this;\n\t\tconst {\n\t\t\ttitle = 'Set the <code>title</code> property to replace me :)',\n\t\t\ttemplate = '<p class=\"lead\">Set the <code>template</code> property to replace me :)</p>',\n\t\t\tcontroller = NgController,\n\t\t\tonClose = () => {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t} = options;\n\n\t\tconst defaultCancelBtnText = 'Cancel';\n\t\tconst defaultOkBtnText = 'Ok';\n\t\tlet {\n\t\t\tcancelBtnText = defaultCancelBtnText,\n\t\t\tokBtnText = defaultOkBtnText,\n\t\t} = options;\n\n\t\tif (cancelBtnText !== false) {\n\t\t\tif (cancelBtnText === true) {\n\t\t\t\tcancelBtnText = defaultCancelBtnText;\n\t\t\t}\n\t\t\tthis.$cancelBtn.innerText = cancelBtnText;\n\t\t}\n\t\tif (okBtnText !== false) {\n\t\t\tif (okBtnText === true) {\n\t\t\t\tokBtnText = defaultOkBtnText;\n\t\t\t}\n\t\t\tthis.$submitBtn.value = okBtnText;\n\t\t}\n\n\t\tthis.$title.innerHTML = typeof title === 'function' ? title() : title;\n\t\tthis.$main.innerHTML =\n\t\t\ttypeof template === 'function' ? template() : template;\n\n\t\tconst $scope = this.$rootScope.$new(true) as Parameters<NgModal['hideModal']>[1];\n\t\tconst $element = this.$compile(this.$container)($scope);\n\t\tconst $ctrl = makeInjectableCtrl(controller, {\n\t\t\tlog: this.$log,\n\t\t\thttp: this.$http,\n\t\t\tconfig: () => this.$config,\n\t\t});\n\n\t\t$scope.$ctrl = new $ctrl($element, $scope, this.$injector) as NgController;\n\t\t$scope.$applyAsync();\n\n\t\tconst escapeKeyListener = (e: KeyboardEvent) => {\n\t\t\tif (e.key === 'Escape' || e.key === 'Esc') {\n\t\t\t\tclose();\n\t\t\t}\n\t\t};\n\t\tconst dismiss = () => {\n\t\t\tremoveEventListeners();\n\t\t\tthis.hideModal(escapeKeyListener, $scope);\n\t\t};\n\n\t\tthis.showModal(escapeKeyListener);\n\n\t\tconst removeEventListeners = () => {\n\t\t\tthis.$cancelBtn.removeEventListener('click', dismiss);\n\t\t\tthis.$submitBtn.removeEventListener('click', close);\n\t\t\tthis.$backdrop.removeEventListener('click', close);\n\t\t};\n\n\t\tconst close = () => {\n\t\t\tif (onClose.call({ $log }, controller as T)) {\n\t\t\t\tdismiss();\n\t\t\t}\n\t\t};\n\t\tthis.$cancelBtn.addEventListener('click', dismiss);\n\t\tthis.$submitBtn.addEventListener('click', close);\n\t\tthis.$backdrop.addEventListener('click', close);\n\n\t\treturn { close, dismiss };\n\t}\n\n\tprotected showModal(escapeKeyListener: (e: KeyboardEvent) => void) {\n\t\tthis.$backdrop.style.setProperty('display', 'block');\n\n\t\tthis.$container.style.setProperty('display', 'block');\n\t\tthis.$container.classList.remove('show');\n\t\tthis.$container.removeAttribute('aria-hidden');\n\t\tthis.$container.setAttribute('aria-modal', 'true');\n\t\tthis.$container.style.setProperty('padding-right', '17px');\n\t\tthis.$container.style.setProperty('pointer-events', 'none');\n\n\t\twindow.addEventListener('keydown', escapeKeyListener);\n\t\tdocument.body.appendChild(this.$backdrop);\n\t\tdocument.body.classList.add('modal-open');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.$backdrop.classList.add('show');\n\t\t\tthis.$container.classList.add('show');\n\t\t}, MODAL_SHOW_DELAY);\n\t}\n\n\tprotected hideModal(\n\t\tescapeKeyListener: (e: KeyboardEvent) => void,\n\t\tscope: NgScope & { $ctrl: NgController; },\n\t) {\n\t\tthis.$backdrop.classList.remove('show');\n\t\tthis.$container.classList.remove('show');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.$container.style.setProperty('display', 'none');\n\t\t\tthis.$backdrop.style.setProperty('display', 'none');\n\t\t}, MODAL_HIDE_DELAY);\n\n\t\tscope.$destroy();\n\t\twindow.removeEventListener('keydown', escapeKeyListener);\n\t\tdocument.body.classList.remove('modal-open');\n\t}\n}\n\nexport interface NgModalOptions<T extends typeof NgController> {\n\t/**\n\t * String representing the modal's title\n\t */\n\ttitle?: string | (() => string);\n\n\t/**\n\t * Inline template representing the modal's content\n\t */\n\ttemplate?: string | (() => string);\n\n\t/**\n\t * Ok button text (false to hide)\n\t */\n\tokBtnText?: string | boolean;\n\n\t/**\n\t * Cancel button text (false to hide, true for default)\n\t */\n\tcancelBtnText?: string | boolean;\n\n\t/**\n\t * A controller for a modal instance.\n\t */\n\tcontroller?: T;\n\n\tonClose?(this: { $log: NgLogger }, controller: T): boolean;\n}\n","import { IConfig, Indexed } from '@ledge/types';\nimport { NgController, makeInjectableCtrl } from './controller';\nimport { NgAttributes } from './attributes';\n\nexport class NgAppConfig implements IConfig {\n\tpublic readonly IS_PROD: boolean;\n\tpublic readonly IS_DEV: boolean;\n\tpublic readonly IS_STAGING: boolean;\n\n\t/**\n\t * The name of the library or application.\n\t */\n\tpublic readonly NAME: string;\n\n\t/**\n\t * The current library or application version, either as a string (e.g. 1.0.0 or v1) or as a number (e.g. 1 or 2.3)\n\t */\n\tpublic readonly VERSION: string | number;\n\n\t/**\n\t * The host environment for the library or application.\n\t */\n\tpublic readonly ENV: string;\n\n\t/**\n\t * The hostname for the API\n\t */\n\tpublic readonly API_HOST: string;\n\n\tconstructor({\n\t\tNAME = 'ng-app',\n\t\tENV = '',\n\t\tAPI_HOST = '',\n\t\tVERSION = '',\n\t}: Partial<NgAppConfig> = {}) {\n\t\tif (ENV == null || ENV.length === 0) {\n\t\t\tENV = process.env.NODE_ENV as string;\n\t\t}\n\t\tthis.ENV = ENV;\n\n\t\tthis.IS_PROD = ENV === 'production';\n\t\tthis.IS_DEV = ENV === 'development';\n\t\tthis.IS_STAGING = ENV === 'staging';\n\n\t\tthis.NAME = NAME;\n\t\tthis.API_HOST = API_HOST;\n\t\tthis.VERSION = VERSION;\n\t}\n}\n\n/**\n * Component definition object (a simplified directive definition object)\n */\nexport interface NgComponentOptions<T = NgController> {\n\t/**\n\t * Controller constructor function that should be associated with newly created scope or the name of a registered\n\t * controller if passed as a string. Empty function by default.\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\tcontroller?: (new (...args: any[]) => T) | ['$element', '$scope', '$injector', ReturnType<typeof makeInjectableCtrl>];\n\n\t/**\n\t * @deprecated For consistency this will always be the historical default `$ctrl`. ng-app's architecture ensures all scopes are isolates, so there's no risk of scope leakage.\n\t *\n\t * An identifier name for a reference to the controller. If present, the controller will be published to its scope under\n\t * the specified name. If not present, this will default to `$ctrl`.\n\t */\n\tcontrollerAs?: never;\n\n\t/**\n\t * html template as a string or a function that returns an html template as a string which should be used as the\n\t * contents of this component. Empty string by default.\n\t * If template is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplate?: string | (() => string) | (string | (($element: [HTMLElement], $attrs: NgAttributes) => string))[];\n\n\t/**\n\t * Path or function that returns a path to an html template that should be used as the contents of this component.\n\t * If templateUrl is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplateUrl?: never;\n\n\t/**\n\t * Define DOM attribute binding to component properties. Component properties are always bound to the component\n\t * controller and not to the scope.\n\t */\n\tbindings?: Indexed<string>;\n\n\t/**\n\t * Whether transclusion is enabled. Disabled by default.\n\t */\n\ttransclude?: boolean | Indexed<string>;\n\n\t/**\n\t * Requires the controllers of other directives and binds them to this component's controller.\n\t * The object keys specify the property names under which the required controllers (object values) will be bound.\n\t * Note that the required controllers will not be available during the instantiation of the controller,\n\t * but they are guaranteed to be available just before the $onInit method is executed!\n\t */\n\trequire?: Indexed<string>;\n}\n","export function h<T extends keyof HTMLElementTagNameMap, E extends HTMLElement & (new () => E)>(\n\tTagOrElement: T | E,\n\tprops: { [index: string]: any } = {},\n\t...childNodes: unknown[]\n): HTMLElementTagNameMap[T] | E {\n\tconst element = typeof TagOrElement === 'string'\n\t\t? document.createElement(TagOrElement)\n\t\t: new TagOrElement();\n\n\tif (props === null) {\n\t\tprops = {};\n\t}\n\n\tconst setProperty = (key: string, value: any) => {\n\t\tif (value == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof value === 'function') {\n\t\t\telement[key as keyof typeof element] = value;\n\t\t} else if (key === 'className') {\n\t\t\telement.setAttribute('class', value.toString());\n\t\t} else {\n\t\t\telement.setAttribute(key, value.toString());\n\t\t}\n\t};\n\n\tfor (const key of Object.keys(props)) {\n\t\tsetProperty(key, props[key]);\n\t}\n\n\tconst appendChild = (node: unknown) => {\n\t\tif (node instanceof Node) {\n\t\t\telement.appendChild(node);\n\t\t} else if (node != null) {\n\t\t\telement.appendChild(document.createTextNode(String(node)));\n\t\t}\n\t};\n\tfor (const node of childNodes) {\n\t\tif (Array.isArray(node) && node.some(x => x instanceof Node)) {\n\t\t\tfor (const n of node) {\n\t\t\t\tappendChild(n);\n\t\t\t}\n\t\t} else {\n\t\t\tappendChild(node);\n\t\t}\n\t}\n\n\treturn element;\n}\n","import { Indexed } from '@ledge/types';\nimport { ParamType, ResolveTypes, StateDeclaration, StateService, TargetState, Transition } from '@uirouter/core';\n\nimport { NgService } from './service';\n\nexport class NgRouter<T extends NgRoute = NgRoute> extends NgService {\n\tpublic routes: T[] = [];\n\n\tpublic getRoutes() {\n\t\treturn this.routes;\n\t}\n\n\tpublic registerRoute(partial: Partial<T>) {\n\t\tconst state = {\n\t\t\t...this.generateRouteMeta(partial),\n\t\t\t...partial,\n\t\t};\n\n\t\tif (this.isNgTransitionFn(state.onEnter)) {\n\t\t\tstate.onEnter = ['$transition$', state.onEnter];\n\t\t}\n\t\tif (this.isNgTransitionFn(state.onExit)) {\n\t\t\tstate.onExit = ['$transition$', state.onExit];\n\t\t}\n\t\tif (this.isNgTransitionFn(state.onRetain)) {\n\t\t\tstate.onRetain = ['$transition$', state.onRetain];\n\t\t}\n\n\t\tthis.routes.push(state as T);\n\n\t\treturn state as T;\n\t}\n\n\tpublic async isAuthorized() {\n\t\treturn true;\n\t}\n\n\tpublic generateIntIdParam() {\n\t\tconst param = {\n\t\t\ttype: new ParamType({\n\t\t\t\tdecode(value) {\n\t\t\t\t\treturn parseInt(value, 10);\n\t\t\t\t},\n\t\t\t\tencode(value) {\n\t\t\t\t\treturn value && value.toString();\n\t\t\t\t},\n\t\t\t\tequals(a, b) {\n\t\t\t\t\treturn this.is(a) && a === b;\n\t\t\t\t},\n\t\t\t\tis(value) {\n\t\t\t\t\tconst n = this.decode(value);\n\t\t\t\t\treturn typeof n === 'number' && !isNaN(n);\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tparam.type.name = 'path';\n\t\treturn param;\n\t}\n\n\tpublic generateIntQueryParam() {\n\t\tconst param = {\n\t\t\ttype: new ParamType({\n\t\t\t\tdecode(value) {\n\t\t\t\t\treturn parseInt(value, 10);\n\t\t\t\t},\n\t\t\t\tencode(value) {\n\t\t\t\t\treturn value && value.toString();\n\t\t\t\t},\n\t\t\t\tequals(a, b) {\n\t\t\t\t\treturn this.is(a) && a === b;\n\t\t\t\t},\n\t\t\t\tis(value) {\n\t\t\t\t\tconst n = this.decode(value);\n\t\t\t\t\treturn typeof n === 'number' && !isNaN(n);\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tparam.type.name = 'query';\n\t\treturn param;\n\t}\n\n\tprotected isNgTransitionFn(item?: NgResolveFn | NgAnnotatedResolveFn): item is NgResolveFn {\n\t\treturn typeof item === 'function';\n\t}\n\n\tprotected annotateResolveFunctions({ resolve = {} }: NgRoute) {\n\t\tfor (const id of Object.keys(resolve)) {\n\t\t\tif (Array.isArray(resolve)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst resolveFn = resolve[id];\n\t\t\tif (this.isNgTransitionFn(resolveFn)) {\n\t\t\t\tresolve[id] = ['$transition$', resolveFn];\n\t\t\t}\n\t\t}\n\n\t\treturn resolve;\n\t}\n\n\tprotected generateRouteMeta(\n\t\t{\n\t\t\tparams = {},\n\t\t\tdata = {},\n\t\t\tname = '',\n\t\t\tcomponent = '',\n\t\t\tparent = '',\n\t\t}: Partial<T>,\n\t) {\n\t\tname = (name || component);\n\n\t\tlet url = `/${data.isBase ? name : name.split(/(?=[A-Z])/).join('/').toLowerCase()}`\n\t\t\t.replace(/View$/, '');\n\n\t\tfor (const [key, { type = {} }] of Object.keys(params).map(x => ([x, params[x]]))) {\n\t\t\turl += type.name === 'path' ? '/:' : (url.indexOf('?') !== -1 ? '&' : '?');\n\t\t\turl += key;\n\t\t}\n\n\t\treturn { name, parent, url };\n\t}\n}\n\n/**\n * @internalapi\n * an intermediate interface.\n *\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\n */\n// tslint:disable-next-line:class-name\ninterface _NgStateService extends StateService {\n\tcurrent: any;\n}\n\nexport interface NgStateService extends _NgStateService {\n\tcurrent: NgRoute;\n\tlabel: string;\n\tparent: string;\n}\n\n/**\n * @internalapi\n * an intermediate interface.\n *\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\n */\n// tslint:disable-next-line:class-name\ninterface _NgRoute extends StateDeclaration {\n\tonExit?: any;\n\tonRetain?: any;\n\tonEnter?: any;\n\tviews?: any;\n\tresolve?: any;\n}\n\nexport type NgResolveFn<T = any> = ($trans: Transition) => Promise<T>;\nexport type NgAnnotatedResolveFn<T = any> = [string, NgResolveFn<T>];\nexport type NgTransition = NgResolveFn<TargetState | Transition> | NgAnnotatedResolveFn<TargetState | Transition>;\n\nexport interface NgRoute extends _NgRoute {\n\t/**\n\t * The name of the component to use for this view.\n\t */\n\tcomponent?: string;\n\n\t/**\n\t * An object which maps `resolve`s to component `bindings`.\n\t *\n\t * When using a component declaration (`component: 'myComponent'`),\n\t * each input binding for the component is supplied data from a resolve of\n\t * the same name, by default.\n\t *\n\t * You may supply data from a different resolve name by mapping it here.\n\t */\n\tbindings?: {\n\t\t[key: string]: string;\n\t};\n\n\tresolve?: Indexed<NgResolveFn | NgAnnotatedResolveFn> | ResolveTypes[];\n\n\t/**\n\t * Injected function which returns the HTML template.\n\t * The template will be used to render the corresponding component.\n\t *\n\t * #### Examples:\n\t * ```ts\n\t * {\n\t * \t// other props\n\t * \ttemplate: require('./template.pug');\n\t * }\n\t * ```\n\t * ```ts\n\t * {\n\t * \t// other props\n\t * \ttemplate: '<div>Hello, world!</div>';\n\t * }\n\t * ```\n\t */\n\ttemplate?: string | ((...args: any[]) => void);\n\n\turl: string;\n\tparent: string;\n\tlabel: string;\n\n\tonEnter?: NgTransition;\n\tonExit?: NgTransition;\n\tonRetain?: NgTransition;\n}\n","import { isIE11 } from '@ledge/is-ie-11';\nimport { isMobile } from '@ledge/is-mobile';\n\nexport class NgService {\n\tpublic static IsMobile() {\n\t\treturn isMobile();\n\t}\n\n\tpublic static IsIE11() {\n\t\treturn isIE11();\n\t}\n\n\t/**\n\t * @see https://stackoverflow.com/a/2117523\n\t */\n\tpublic static UUIDv4() {\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n\t\t\t// tslint:disable:no-bitwise\n\t\t\tconst r = Math.random() * 16 | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3 | 0x8);\n\t\t\t// tslint:enable:no-bitwise\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\tpublic readonly uniqueId = this.UUIDv4().replace(/[-]|[,]/g, '');\n\n\tpublic UUIDv4() {\n\t\treturn NgService.UUIDv4();\n\t}\n\n\tprotected get isMobile() {\n\t\treturn isMobile();\n\t}\n\n\tprotected get isIE11() {\n\t\treturn NgService.IsIE11();\n\t}\n\n\t/**\n\t * Separates words in a string by capital letters. Also capitalizes the first letter.\n\t *\n\t * The following exceptions apply:\n\t * 1) If string is all-caps, it's returned as-is\n\t * 2) Any embedded acronyms (such as F.A.Q.) are returned as-is\n\t * 3) Consecutive capital letters are returned as-is\n\t * 3) Hyphenated words retain concatenation\n\t *\n\t * @param item - The string value to be split\n\t */\n\tpublic splitByCapitalLetter(item: string) {\n\t\tconst split = item.split(/(?=[A-Z])/);\n\t\treturn split.every(x => x.length === 1)\n\t\t\t? item\n\t\t\t: split\n\t\t\t\t.map(x => x.trim())\n\t\t\t\t.map(x =>\n\t\t\t\t\tx.length === 1 || (x.length === 2 && x.charAt(1) === '.')\n\t\t\t\t\t\t? `${x.toUpperCase()}\\uFFFF`\n\t\t\t\t\t\t: (x.charAt(0).toUpperCase() + x.substring(1)),\n\t\t\t\t)\n\t\t\t\t.join(' ')\n\t\t\t\t.replace(\n\t\t\t\t\t/\\w{1}\\.?(\\uFFFF){1}\\s?/g,\n\t\t\t\t\t([first, second]) =>\n\t\t\t\t\t\tsecond === '.'\n\t\t\t\t\t\t\t? first + second\n\t\t\t\t\t\t\t: first,\n\t\t\t\t)\n\t\t\t\t.replace(\n\t\t\t\t\t/\\.{1}\\w{2,}/g,\n\t\t\t\t\t([first, second, ...rest]) =>\n\t\t\t\t\t\t`${first} ${second.toUpperCase()}${rest.join('')}`,\n\t\t\t\t)\n\t\t\t\t.replace(/- /g, '-');\n\t}\n}\n"],"sourceRoot":""}